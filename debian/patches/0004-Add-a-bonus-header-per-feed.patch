From: Keith Hellman <khellman@mcprogramming.com>
Date: Fri, 26 Aug 2011 19:52:39 +0200
Subject: Add a 'bonus header' per feed

This patch implements the possibility to add extra headers on a per-feed
basis.

It has been picked and slightly adapted from #349061.
---
 rss2email.py |   46 +++++++++++++++++++++++++++++++++-------------
 1 files changed, 33 insertions(+), 13 deletions(-)

diff --git a/rss2email.py b/rss2email.py
index 7696d99..3357491 100755
--- a/rss2email.py
+++ b/rss2email.py
@@ -6,7 +6,7 @@ Usage:
   new [emailaddress] (create new feedfile)
   email newemailaddress (update default email)
   run [--no-send] [num]
-  add feedurl [emailaddress]
+  add feedurl [emailaddress] [bonus_header]
   list
   reset
   delete n
@@ -469,10 +469,11 @@ def getEmail(r, entry):
 ### Simple Database of Feeds ###
 
 class Feed:
-	def __init__(self, url, to):
+	def __init__(self, url, to, bonus_header):
 		self.url, self.etag, self.modified, self.seen = url, None, None, {}
 		self.active = True
 		self.to = to		
+		self.bonus_header = bonus_header
 
 def load(lock=1):
 	if not os.path.exists(feedfile):
@@ -527,17 +528,29 @@ def parse(url, etag, modified):
 ### Program Functions ###
 
 def add(*args):
-	if len(args) == 2 and contains(args[1], '@') and not contains(args[1], '://'):
-		urls, to = [args[0]], args[1]
-	else:
-		urls, to = args, None
+	to = None
+	bonus_header = None
+	# grab bonus header
+	if len(args) > 1 :
+		if contains(args[-1], ': ') and not contains(args[1], '://'):
+			bonus_header = args[-1]
+			args = args[:-1]
+
+	# grab alternative address
+	if len(args) > 1 :
+		if contains(args[-1], '@') and not contains(args[1], '://'):
+			to = args[-1]
+			args = args[:-1]
+
+	# the rest are feeds
+	urls = args
 	
 	feeds, feedfileObject = load()
 	if (feeds and not isstr(feeds[0]) and to is None) or (not len(feeds) and to is None):
 		print "No email address has been defined. Please run 'r2e email emailaddress' or"
 		print "'r2e add url emailaddress'."
 		sys.exit(1)
-	for url in urls: feeds.append(Feed(url, to))
+	for url in urls: feeds.append(Feed(url, to, bonus_header))
 	unlock(feeds, feedfileObject)
 
 def run(num=None):
@@ -697,13 +710,20 @@ def run(num=None):
 							tagline = ",".join(taglist)
 					
 					extraheaders = {'Date': datehdr, 'User-Agent': useragenthdr, 'X-RSS-Feed': f.url, 'X-RSS-ID': id, 'X-RSS-URL': link, 'X-RSS-TAGS' : tagline}
+
+					def add_extra_header(hdr):
+						pos = hdr.strip().find(':')
+						if pos > 0:
+							extraheaders[hdr[:pos]] = hdr[pos+1:].strip()
+						else:
+							print >>warn, "W: malformed bonus header", hdr
+
 					if BONUS_HEADER != '':
 						for hdr in BONUS_HEADER.strip().splitlines():
-							pos = hdr.strip().find(':')
-							if pos > 0:
-								extraheaders[hdr[:pos]] = hdr[pos+1:].strip()
-							else:
-								print >>warn, "W: malformed BONUS HEADER", BONUS_HEADER	
+							add_extra_header(hdr)
+
+					if f.bonus_header is not None:
+					add_extra_header(f.bonus_header)
 					
 					entrycontent = getContent(entry, HTMLOK=HTML_MAIL)
 					contenttype = 'plain'
@@ -806,7 +826,7 @@ def list():
 	else: ifeeds = feeds; i = 0
 	for f in ifeeds:
 		active = ('[ ]', '[*]')[f.active]
-		print `i`+':',active, f.url, '('+(f.to or ('default: '+default_to))+')'
+		print `i`+':',active, f.url, '('+(f.to or ('default: '+default_to))+')', 'bonus_header="%s"' % ( str(f.bonus_header),)
 		if not (f.to or default_to):
 			print "   W: Please define a default address with 'r2e email emailaddress'"
 		i+= 1
-- 
