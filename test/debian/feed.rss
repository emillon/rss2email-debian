<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Debian</title>
	<link>http://planet.debian.org/</link>
	<language>en</language>
	<description>Planet Debian - http://planet.debian.org/</description>


<item>
	<title>Wouter Verhelst: Dear HP,</title>
	<guid>http://grep.be/blog/en/computer/hardware/dear_hp</guid>
	<link>http://grep.be/blog/en/computer/hardware/dear_hp</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/wouter3.png&quot; width=&quot;85&quot; height=&quot;80&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I bought a ScanJet N6350 a few years back, in the belief that it
would work. After all, you write free Linux drivers for all your
printers, and when those printers are multifunctional printers with
scanners, you do make sure the scanner bits of those printers work too.
So it shouldn&#39;t be too hard to write a Linux driver for that scanner
too, right?&lt;/p&gt;
&lt;p&gt;Apparently it is. For some reason that I can&#39;t imagine, you decided
that my money is worth more than my stress levels.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The HP ScanJet N6350 is a combination USB/network scanner.
That&#39;s great; I don&#39;t need it to be right next to my laptop all the
time. Having the ability to get it sent to me by email (as your product
page claims it can do) reduces my workload. Unfortunately, what you
didn&#39;t mention on the product page is that the scanner is pretty dumb;
it does network, yes, but the only way in which it can send emails is by
using some application running on a system on the other end of the
network connection. That&#39;s pretty silly. It wouldn&#39;t be so bad, however,
except...&lt;/li&gt;
&lt;li&gt;... the system on the other end of the network connection has to be
running Windows. That&#39;s right, you &lt;em&gt;didn&#39;t&lt;/em&gt; write a Linux driver
for some reason. You also &lt;em&gt;didn&#39;t&lt;/em&gt; publish the network protocol,
and even the USB connection seems undocumented. So I can&#39;t use Linux to
scan my documents. It wouldn&#39;t be so bad, however, since I already have
a Windows XP virtual machine lying around somewhere, mainly because
there&#39;s this satellite navigation system builtin to my car that also
requires it; I just installed your scanners oftware on that machine, and
I can scan. Except...&lt;/li&gt;
&lt;li&gt;... whenever an error occurs in the scanning process, &lt;em&gt;the UI
locks up completely&lt;/em&gt;. I can&#39;t retry the last page that I was trying
to scan, and often I can&#39;t even &lt;em&gt;save&lt;/em&gt; the document anymore,
either; I have to rescan the whole document. That wouldn&#39;t be so bad,
except...&lt;/li&gt;
&lt;li&gt;... the ADF is total crap. If I put more than a few pages on the
feeder, and they&#39;ve got some horizontal folds in them (as is likely with
snail mail that came out of an envelope), I&#39;m very likely to end up with
a paper jam, or with multiple pages sucked into the feeder at once,
causing an error and a loss of my scanned document. That wouldn&#39;t be so
bad, except...&lt;/li&gt;
&lt;li&gt;... the process for finishing one scan and starting the next
involves stopping and starting your whole scanning software, which takes
a rather long time. As such, I&#39;d prefer to just scan a whole stack of
incoming snail mail in one go, and then use &lt;a href=&quot;http://www.pdfsam.org/&quot;&gt;pdfsam&lt;/a&gt; to split up the PDF file. But
then I have to babysit the scanning process so that I don&#39;t get any
errors; but I fail at that about as often as I succeed, meaning, it
usually takes a &lt;em&gt;long&lt;/em&gt; time to get through the stack.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dear HP, you suck. I fail to understand how the basic loss of
functionality after a failed scan managed to get through your testing. I
fail to understand why you think Linux users should be able to print,
but not scan. And I &lt;em&gt;especially&lt;/em&gt; fail to understand why I should
waste my time with such an expensive device that can&#39;t even perform its
basic functionality with more than 10% success rate.&lt;/p&gt; </description> 
	<pubDate>Tue, 09 Apr 2013 15:37:31 +0000</pubDate>
  <author>w@uter.be (Wouter Verhelst)</author>  
</item> 
<item>
	<title>Michal &amp;#268;iha&amp;#345;: phpMyAdmin at GSoC 2013</title>
	<guid>http://blog.cihar.com/archives/2013/04/09/phpmyadmin-gsoc-2013/?utm_source=rss2</guid>
	<link>http://blog.cihar.com/archives/2013/04/09/phpmyadmin-gsoc-2013/?utm_source=rss2</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/nijel.png&quot; width=&quot;64&quot; height=&quot;67&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;&lt;a href=&quot;http://www.phpmyadmin.net/&quot;&gt;phpMyAdmin&lt;/a&gt; has been accepted for &lt;a href=&quot;https://www.google-melange.com/&quot;&gt;Google Summer of Code 2013&lt;/a&gt;. So if you are a student and thinking about how to spend this summer, you might want to join us.&lt;/p&gt;
&lt;p&gt;This year we will have fresh mentor blood and we have prepared &lt;a href=&quot;http://wiki.phpmyadmin.net/pma/GSoC_2013_Ideas_List&quot;&gt;dozen of ideas&lt;/a&gt;, so in case you are interested, it&#39;s really the time to start to work on your application. We require you to contribute before GSoC, so that we can see you can handle the code and our tools. All details you might need are available in our &lt;a href=&quot;http://wiki.phpmyadmin.net/pma/GSoC_2013_Applicant_Guide&quot;&gt;applicant guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Our requirements might sound strict, but without them, we would drown in hundredths of applications with no clue how to decide, so do your homework and prepare perfect application. If you have any questions, get in touch with us on mailing list and get ready for April 22th, when you can submit the application.&lt;/p&gt;

&lt;p style=&quot;font-size: smaller;&quot;&gt;
Filed under: 


&lt;a href=&quot;http://blog.cihar.com/archives/english/&quot;&gt;English&lt;/a&gt;

&lt;a href=&quot;http://blog.cihar.com/archives/phpmyadmin/&quot;&gt;Phpmyadmin&lt;/a&gt;

|

&lt;a href=&quot;http://blog.cihar.com/archives/2013/04/09/phpmyadmin-gsoc-2013/#comments&quot;&gt;0 comments&lt;/a&gt;
|
&lt;a href=&quot;https://flattr.com/submit/auto?user_id=nijel&amp;amp;url=http://blog.cihar.com/archives/2013/04/09/phpmyadmin-gsoc-2013/&amp;amp;title=Michal Čihař: phpMyAdmin at GSoC 2013&amp;amp;description=phpMyAdmin has been accepted for Google Summer of Code 2013. So if you are a student and thinking about how to spend this summer, you might want to join us.&amp;amp;language=en_GB&amp;amp;tags=blog,english,phpmyadmin&amp;amp;category=text&quot;&gt;Flattr this!&lt;/a&gt;
&lt;/p&gt; </description> 
	<pubDate>Tue, 09 Apr 2013 08:18:35 +0000</pubDate>
  <author>michal@cihar.com (Michal Čihař)</author>  
</item> 
<item>
	<title>Russ Allbery: Review: Judge Sn Goes Golfing</title>
	<guid>http://www.eyrie.org/~eagle/reviews/books/1-59606-479-X.html</guid>
	<link>http://www.eyrie.org/~eagle/reviews/books/1-59606-479-X.html</link>
     <description>  &lt;p&gt;Review: &lt;cite&gt;Judge Sn Goes Golfing&lt;/cite&gt;, by John Scalzi&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;Artist:&lt;/td&gt;
    &lt;td&gt;Gahan Wilson&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Publisher:&lt;/td&gt;
    &lt;td&gt;Subterranean&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Copyright:&lt;/td&gt;
    &lt;td&gt;2009&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Printing:&lt;/td&gt;
    &lt;td&gt;2012&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ISBN:&lt;/td&gt;
    &lt;td&gt;1-59606-479-X&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Format:&lt;/td&gt;
    &lt;td&gt;Kindle&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Pages:&lt;/td&gt;
    &lt;td&gt;32&lt;/td&gt;
  &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;
As you may have guessed, this is yet another short story by Scalzi that
was rolled into the &lt;cite&gt;Subterranean Scalzi Super Bundle&lt;/cite&gt;.  This one is
a bit longer than the ones I&#39;ve previously reviewed, and is also
illustrationed.  Unlike some of the others, it&#39;s not available on-line for
free... as a written work at least.  There&#39;s an
&lt;a href=&quot;http://subterraneanpress.com/magazine/winter_2010/audio_judge_sn_goes_golfing_by_john_scalzi&quot;&gt;abridged audio version&lt;/a&gt; available for free from Subterranean Press&#39;s web
site, though.  Like the other stories I&#39;ve reviewed so far, it&#39;s humor,
but I think it&#39;s a bit more successful and substantial than the previous
short stories.
&lt;/p&gt;

&lt;p&gt;
Judge Bufan Nigun Sn is an extremely foul-tempered alien judge who loves
to golf, despite being terrible at it.  He&#39;s a sort of circuit court judge
for a larger galactic civilization, of which Earth is now part.  (There&#39;s
a smattering of background world-building, but it&#39;s not the core of the
story.)  Golf is his passion, in several senses of the word: his habit of
getting into nasty fights with his fellow players and otherwise making
public and occasionally injurious scenes has gotten him banned from every
course in the Washington DC area, both public and private.  Except, that
is, for Dulles Woods, a dire, badly-maintained course designed via
nepotism and theft whose business model is primarily based on letting the
people banned from every other course golf there.  And charging them extra
to let caddies accompany them.
&lt;/p&gt;

&lt;p&gt;
The plot of this story is about a particular game of golf, dramatically
foreshadowed by the opening sentence.  But the story is really about Judge
Sn&#39;s relationship to golfing and to the notorious Dulles Woods.  It&#39;s one
of the better jobs I&#39;ve seen of writing a thoroughly unlikable person into
a gloriously foul-tempered charm.  It&#39;s also a story about a golf course
and golfer who thoroughly deserve each other, and about how it feels to
suddenly have something go right after grinding out hours and hours of
work on a hobby that is supposed to be fun but manages to fall into some
horribly compelling middle ground between enjoyment and rage-inducing
frustration.
&lt;/p&gt;

&lt;p&gt;
Speaking as someone who is known to grind out video game completions while
swearing at the television, I can sympathize.
&lt;/p&gt;

&lt;p&gt;
I got thoroughly hooked by Scalzi&#39;s descriptions of Judge Sn&#39;s mental
state and enjoyed this story far more than I expected to.  Sadly, when the
plot does finally arrive, I thought it was a letdown.  Scalzi throws in a
highly improbable coincidence to create action, and while that&#39;s a
legitimate plot technique (particularly in humor), it works best when the
author goes back afterwards and fills in the back story of the
coincidence.  Pratchett does this extremely well.  Scalzi, alas, doesn&#39;t
really bother, and while suspension of disbelief isn&#39;t as relevant for
this sort of story, I thought it was a missed opportunity.  The ending
seemed to be missing some sort of punch or background twist.
&lt;/p&gt;

&lt;p&gt;
That said, I really liked the character study and I think the story is
well worth the 99 cents it&#39;s still selling for on the Kindle (and quite
possibly other platforms; I haven&#39;t checked).  If buying short stories on
the Kindle is something you want to do, I recommend this one to your
attention.
&lt;/p&gt;

&lt;p&gt;Rating: 7 out of 10&lt;/p&gt; </description> 
	<pubDate>Tue, 09 Apr 2013 03:34:00 +0000</pubDate>

</item> 
<item>
	<title>Soeren Sonnenburg: Shogun got accepted at Google Summer of Code 2013</title>
	<guid>http://sonnenburgs.de/soeren/item/shogun-got-accepted-google-summer-code-2013/</guid>
	<link>http://sonnenburgs.de/soeren/item/shogun-got-accepted-google-summer-code-2013/</link>
     <description>  &lt;p&gt;We are happy to announce that the &lt;a href=&quot;http://www.shogun-toolbox.org&quot;&gt;shogun machine learning toolbox&lt;/a&gt; will participate in this years google summer of code :-)
&lt;/p&gt;
&lt;p&gt;SHOGUN is designed for unified large-scale learning for a broad range of feature types and learning settings, like classification, regression, or exploratory data analysis.
&lt;/p&gt;
&lt;p&gt;
In case you are a talented student interested in implementing and learning about machine learning algorithms - we are looking for you!
&lt;/p&gt;
&lt;p&gt;
We have collected a number of ideas &lt;a href=&quot;http://sonnenburgs.de/soeren/category/blog/feed#linkgsoc1&quot;&gt;[1]&lt;/a&gt; that we consider worthwhile implementing. And don&#39;t forget to apply &lt;a href=&quot;http://sonnenburgs.de/soeren/category/blog/feed#linkgsoc2&quot;&gt;[2]&lt;/a&gt;!
&lt;/p&gt;
&lt;p id=&quot;linkgsoc1&quot;&gt;
[1] &lt;a href=&quot;http://shogun-toolbox.org/page/Events/gsoc2013_ideas&quot;&gt;http://shogun-toolbox.org/page/Events/gsoc2013_ideas&lt;/a&gt;&lt;/p&gt;
&lt;p id=&quot;linkgsoc2&quot;&gt;
[2] &lt;a href=&quot;http://google-melange.appspot.com/gsoc/org/google/gsoc2013/shogun&quot;&gt;http://google-melange.appspot.com/gsoc/org/google/gsoc2013/shogun&lt;/a&gt;&lt;/p&gt; </description> 
	<pubDate>Mon, 08 Apr 2013 20:17:30 +0000</pubDate>

</item> 
<item>
	<title>Daniel Pocock: Google Summer of Code, tips for students</title>
	<guid>http://danielpocock.com/44 at http://danielpocock.com</guid>
	<link>http://danielpocock.com/google-summer-of-code-tips-for-students</link>
     <description>  &lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;I&#39;ve had quite a few queries about the project ideas for Google Summer of Code on the &lt;a href=&quot;http://www.lumicall.org/google-summer-of-code&quot;&gt;Lumicall&lt;/a&gt; and &lt;a href=&quot;http://wiki.debian.org/SummerOfCode2013/Projects&quot;&gt;Debian&lt;/a&gt; project pages and I&#39;m publishing some notes here to help people get the best chance of participating, while also helping people&#39;s expectations.&lt;/p&gt;
&lt;p&gt;Firstly, &lt;em&gt;Google is responsible for administering the program and payments, they have the last word on which projects and students participate&lt;/em&gt; and free software developers like myself have no direct control over this.  In other words, while I would encourage students to make contributions to free software projects to familiarize themselves with the way we work, I can not promise that this will automatically lead to selection.  If you are a student, do go ahead and feel free to comment on or make contributions to projects, this helps mentors to see your capabilities very quickly, but don&#39;t do any more than you would have done if the GSoC program didn&#39;t exist.  In any case, building up a portfolio of work that is &lt;a href=&quot;https://github.com/dpocock/&quot;&gt;visible on sites like github&lt;/a&gt; does help your employment prospects in the long run.  If a development manager is looking at 100 CVs for a job vacancy, and one of them has a strong portfolio on github or Debian, there is a good chance that one person will get an interview - although it doesn&#39;t guarantee they get the job.&lt;/p&gt;
&lt;h3&gt;Where to start?&lt;/h3&gt;
&lt;p&gt;If you are a student and you are already heavily involved in some free software project then you probably don&#39;t need to read the rest of this.  The reality is that GSoC is meant to help bring more people into the free software community and this means we need to help people get their foot in the door.  That is what I am addressing here, with examples from my own possible projects.&lt;/p&gt;
&lt;p&gt;When I went through university in the 90s, there was a very strong UNIX culture in our computer science department and the wider engineering faculty.  There were also winds of change, for example, a new dean who wanted to change everything to Windows and a central IT management agenda to abolish campus computers and force students to carry and maintain their own laptops.  Around the world, every campus has a different approach.  I was fortunate to have UNIX topics like the &lt;a href=&quot;http://en.wikipedia.org/wiki/Vi&quot;&gt;vi text editor&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Shell_script&quot;&gt;shell programming&lt;/a&gt; and even &lt;a href=&quot;http://en.wikipedia.org/wiki/LaTeX&quot;&gt;LaTeX&lt;/a&gt; taught as a formal part of the course, students coming after me may have missed those opportunities.  I understand that some students have not encountered these concepts at all today.  That said, most mentors have a fairly wide tolerance for these things: it is not expected that students know these things, rather, it is an opportunity for you to start learning them whether it is part of your course or not.&lt;/p&gt;
&lt;p&gt;The key concept here is to be a self-starter: it is not what you know, but your enthusiasm to go and try the things you don&#39;t know.  That is the very thing you can start doing now, even before the program commences.  Doing this will definitely help you identity the areas of free software and Debian that you are most likely to get excited about, and that will lead to a successful project.&lt;/p&gt;
&lt;h3&gt;Some general ideas to get started&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;If your campus hasn&#39;t taught UNIX in a formal sense, please familiarise yourself with the basics.  While some companies do have more jobs working with other platforms, and some campuses have sadly tried to adapt their courses to prepare students for that limited subset of companies, &lt;em&gt;all the best jobs I&#39;ve had involve UNIX or Linux&lt;/em&gt;. I&#39;ve never worked for a hedge fund that didn&#39;t use Linux.  &lt;a href=&quot;http://www.hollywoodtoday.net/2013/03/27/dreamworks-animation-the-croods-tops-9100-linux-render-years/&quot;&gt;Hollywood&lt;/a&gt; uses Linux, &lt;a href=&quot;http://www.linuxjournal.com/content/open-source-space-age&quot;&gt;NASA does too&lt;/a&gt;, but learning Linux is not rocket science.  Basic things to understand include &lt;a href=&quot;http://en.wikipedia.org/wiki/Vi&quot;&gt;the vi text editor&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Shell_script&quot;&gt;shell scripts&lt;/a&gt; and using a command line tool for version control, &lt;a href=&quot;http://git-scm.com/&quot;&gt;preferably git&lt;/a&gt;.  As you will be the system administrator of your own desktop or laptop, it&#39;s essential to understand some basic concepts like &lt;a href=&quot;http://en.wikipedia.org/wiki/Logical_Volume_Manager_%28Linux%29&quot;&gt;volume management&lt;/a&gt; too.&lt;/li&gt;
&lt;li&gt;If you need to run some Windows software (some courses do require that), use &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; or a similar solution to run both Windows and Linux on your computer or laptop.  The VirtualBox documentation is very good and will help you start quickly.  My own laptop runs Debian 7 (wheezy) as the main operating system, and I have Windows and Solaris in VirtualBox for some business applications.&lt;/li&gt;
&lt;li&gt;My own course included a project that involved downloading the open source &lt;a href=&quot;http://www.gnu.org/software/make/&quot;&gt;GNU make&lt;/a&gt; program, writing a patch and testing it.  If you&#39;ve never done something like that, please try.  Instead of downloading a project tarball, these days you will typically clone the project&#39;s git repository.  Even if you only make some trivial change that you will never share, it is good to prove that you can compile and successfully execute something like this.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Some specific ideas for my own projects&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;For Lumicall or Android development, just work your way through the &lt;a href=&quot;http://www.lumicall.org/source-code-and-build-instructions&quot;&gt;build instructions&lt;/a&gt; that are published for all contributors.  Trying the &lt;a href=&quot;http://f-droid.org/manual/fdroid.html#Setup&quot;&gt;f-droid build instructions&lt;/a&gt; is also a good way to start.&lt;/li&gt;
&lt;li&gt;For any of the Debian projects, please make sure you have installed Debian 7 (wheezy) on a desktop, laptop or virtual machine.  Just follow the &lt;a href=&quot;http://www.debian.org/releases/wheezy/amd64/&quot;&gt;installation guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Once you have installed Debian, try installing whichever one of my packages interests you.  Try to configure and use it.  Prove that the package works in a normal installation.  Look at the log files.  Run the test cases.&lt;/li&gt;
&lt;li&gt;Next, try obtaining the source code and building the package.  Debian makes it very easy.  Here is an example for &lt;a href=&quot;http://packages.debian.org/source/wheezy/resiprocate&quot;&gt;reSIProcate&lt;/a&gt;, the same works for any other package.  As root:
&lt;p&gt;&lt;/p&gt;&lt;pre&gt;# apt-get update
# apt-get build-dep resiprocate
&lt;/pre&gt;
&lt;p&gt;will obtain all the necessary build tools.  Then, as a normal user:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;pre&gt;$ mkdir ~/src/resiprocate
$ cd ~/src/resiprocate
$ apt-get source resiprocate
$ cd resiprocate
$ dpkg-buildpackage -rfakeroot -j12
&lt;/pre&gt;
&lt;p&gt;In a few minutes, you should find the packages (*.deb files) are created.
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Now, you could try making some small change to the package and compiling it again.  Verify that your change works.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;If you&#39;ve successfully got to this point, then there is every chance you will be able to successfully complete a GSoC project.  If you struggled along the way, that is OK too, the important thing to do is to engage with the community and learn how to ask for help.  The &lt;a href=&quot;http://wiki.debian.org/SummerOfCode2013/#Ideas_list_.2F_Participating_.2F_Applying&quot;&gt;Debian GSoC wiki&lt;/a&gt; provides some excellent ideas about engaging with the project using IRC chat and mailing lists.  It is also very worthwhile trying to find a &lt;a href=&quot;http://wiki.debian.org/LocalGroups&quot;&gt;local group&lt;/a&gt; or a free software event that &lt;a href=&quot;http://www.debian.org/events/&quot;&gt;Debian is attending&lt;/a&gt; near you and spending a few hours with people who can look at any problems you have and give you quick solutions.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; </description> 
	<pubDate>Mon, 08 Apr 2013 09:12:45 +0000</pubDate>

</item> 
<item>
	<title>Matthias Klumpp: Tanglu status report</title>
	<guid>http://blog.tenstral.net/?p=1361</guid>
	<link>http://blog.tenstral.net/2013/04/tanglu-status-report.html</link>
     <description>  &lt;p&gt;Hello everyone! I am very excited to report about the awesome progress we made with Tanglu, the new Debian-based Linux-Distribution. &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:)&quot; class=&quot;wp-smiley&quot; /&gt; &lt;/p&gt;
&lt;p&gt;First of all, some off-topic info: I don’t feel comfortable with posting too much Tanglu stuff to Planet-KDE, as this is often not KDE-related. So, in future Planet-KDE won’t get Tanglu information, unless it is KDE-related &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt;  You might want to take a look at &lt;a href=&quot;http://planet.tanglu.org/&quot;&gt;Planet-Tanglu&lt;/a&gt; for (much) more information.&lt;/p&gt;
&lt;p&gt;So, what happened during the last weeks? Because I haven’t had lectures, I nearly worked full-time on Tanglu, setting up most of the infrastructure we need. (this will change with the next week, where I have lectures again, and I also have work to do on other projects, not just Tanglu ^^) Also, we already have an awesome community of translators, designers and developers. Thanks to them, the &lt;a href=&quot;http://www.tanglu.org/&quot;&gt;Tanglu-Website&lt;/a&gt; is now translated to 6 languages, more are in the pipeline and will be merged later. Also, a new website based on the Django framework is in progress.&lt;/p&gt;
&lt;h3&gt;The Logo-Contest&lt;/h3&gt;
&lt;p&gt;We’ve run a logo-contest, to find a new and official Tanglu logo, as the previous logo draft was too close to the Debian logo (I asked the trademark people at Debian). More than 30 valid votes (you had to be subscribed to a Tanglu Mailinglist) were received for 7 logo proposals, and we now have a final logo:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/tanglu-logo-big.png&quot; rel=&quot;lightbox[1361]&quot; title=&quot;Tanglu status report&quot;&gt;&lt;img src=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/tanglu-logo-big.png&quot; alt=&quot;Tanglu Logo (Text)&quot; height=&quot;180&quot; class=&quot;aligncenter size-full wp-image-1362&quot; width=&quot;500&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I like it very much &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:)&quot; class=&quot;wp-smiley&quot; /&gt; &lt;/p&gt;
&lt;h3&gt;Fun with dak&lt;/h3&gt;
&lt;p&gt;I decided to use dak, the Debian Archive Kit, to handle the Tanglu archive. Choosing dak over smaller and easy-to-use solutions had multiple reasons, the main reason is that dak is way more flexible than the smaller solution (like reprepro or min-dak) and able to handle the large archive of Tanglu. Also, dak is lightning fast. And I would have been involved with dak sooner or later anyway, because I will implement the DEP-11 extension to the Debian Archive later (making the archive application-friendly).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/duck.png&quot; rel=&quot;lightbox[1361]&quot; title=&quot;Tanglu status report&quot;&gt;&lt;img src=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/duck.png&quot; alt=&quot;duck&quot; height=&quot;190&quot; class=&quot;alignright size-full wp-image-1363&quot; width=&quot;240&quot; /&gt;&lt;/a&gt;Working with dak is not exactly fun. The documentation is not that awesome, and dak contains many hardcoded stuff for Debian, e.g. it often expects the “unstable” suite to be present. Also, running dak on Debian Wheezy turned out to be a problem, as the Python module apt_pkg changed the API and dak naturally had problems with that. But with the great help of some Debian ftpmasters (&lt;em&gt;many&lt;/em&gt; thanks to that!), dak is now working for Tanglu, managing the whole archive. There are still some quirks which need to be fixed, but the archive is in an usable state, accepting and integrating packages.&lt;/p&gt;
&lt;p&gt;The work on dak is also great for Debian: I resolved many issues with non-Debian dak installations, and made many parts of dak Wheezy-proof. Also, I added a few functions which might also be useful for Debian itself. All patches have of course been submitted to upstream-dak. &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt; &lt;/p&gt;
&lt;h3&gt;Wanna-build and buildds&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.tenstral.net/wp-content/uploads/2012/10/gear.png&quot; rel=&quot;lightbox[1361]&quot; title=&quot;Tanglu status report&quot;&gt;&lt;img src=&quot;http://blog.tenstral.net/wp-content/uploads/2012/10/gear.png&quot; alt=&quot;Gear&quot; height=&quot;180&quot; class=&quot;alignright  wp-image-1228&quot; width=&quot;180&quot; /&gt;&lt;/a&gt;This is also nearly finished &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:)&quot; class=&quot;wp-smiley&quot; /&gt;  Wanna-build, the software which manages all buildds for an archive, is a bit complicated to use. I still have some issues with it, but it does it’s job so far. (need to talk to the Debian wanna-build admins for help, e.g. wanna-build seems to be unable to handle arch:all-only packages, also, build logs are only submitted in parts)&lt;/p&gt;
&lt;p&gt;The status of Tanglu builds can be viewed at the provisoric &lt;a href=&quot;http://buildd.tanglu.org/&quot;&gt;Buildd-Status pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Setting up a working buildd is also a tricky thing, it involves patching sbuild to escape &lt;a href=&quot;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=696841&quot;&gt;bug #696841&lt;/a&gt; and applying various workarounds to make the buildd work and upload packages correctly. I will write instructions how to set-up and maintain a buildd soon. At time, we have only one i386 buildd up and running, but more servers (in numbers: 3) are prepared and need to be turned into buildds.&lt;/p&gt;
&lt;p&gt;After working on Wanna-build and dak, I fully understand why Canonical developed Launchpad and it’s Soyuz module for Ubuntu. But I think we might be able to achieve something similar, using just the tools Debian already uses (maybe a little less confortable than LP, but setting up an own LP instance would have been much more trouble).&lt;/p&gt;
&lt;h3&gt;Debian archive import&lt;/h3&gt;
&lt;p&gt;The import of packages from the Debian archive has finished. Importing the archive resulted in many issues and some odd findings (I didn’t know that there are packages in the archive which didn’t receive an upload since 2004!), but it has finally finished, and the archive is in a consistent state at time. To have a continuous package import from Debian while a distribution is in development, we need some changes to wanna-build, which will hopefully be possible.&lt;/p&gt;
&lt;h3&gt;Online package search&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;http://packages.tanglu.org/&quot;&gt;Online-Package-Search &lt;/a&gt;is (after resolving many issues, who expected that? &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_razz.gif&quot; alt=&quot;:P&quot; class=&quot;wp-smiley&quot; /&gt; ) up and running. You can search for any package there. Some issues are remaining, e.g. the file-contents-listing doesn’t work, and changelog support is broken, but the basic functionality is there.&lt;/p&gt;
&lt;h3&gt;Tanglu Bugtracker&lt;/h3&gt;
&lt;p&gt;We now also have a bugtracker which is based on the Trac software. The &lt;a href=&quot;http://bugs.tanglu.org/&quot;&gt;Tanglu-Bugtracker&lt;/a&gt; is automatically synced with the Tanglu archive, meaning that you find all packages in Trac to report bugs against them. The dak will automatically update new packages every day. Trac still needs a few confort-adjustments, e.g. submitting replies via email or tracking package versions.&lt;/p&gt;
&lt;h3&gt;Tanglu base system&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/tanglu-platform-small.png&quot; rel=&quot;lightbox[1361]&quot; title=&quot;Tanglu status report&quot;&gt;&lt;img src=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/tanglu-platform-small.png&quot; alt=&quot;tanglu-platform-small&quot; height=&quot;117&quot; class=&quot;alignright size-full wp-image-1364&quot; width=&quot;94&quot; /&gt;&lt;/a&gt;The Tanglu metapackages have been published in a first alpha version. We will support &lt;a href=&quot;http://packages.tanglu.org/aequorea/tanglu-gnome&quot;&gt;GNOME-3&lt;/a&gt; and &lt;a href=&quot;http://packages.tanglu.org/aequorea/tanglu-kde&quot;&gt;KDE4&lt;/a&gt;, as long as this is possible (= enough people working on the packaging). The Tanglu packages will also depend on systemd, which we will need in GNOME anyway, and which also allows some great new features in KDE.&lt;/p&gt;
&lt;p&gt;Side-effect of using systemd is – at least for the start – that Tanglu boots a bit slow, because we haven’t done any systemd adjustments, and because systemd is very old. We will have to wait for the systemd and udev maintainers to merge the packages and release a new version first, before this will improve. (I don’t want to do this downstream in Tanglu, because I don’t know the plans for that at Debian (I only know the information Tollef Fog Heen &amp;amp; Co. provided at FOSDEM))&lt;/p&gt;
&lt;h3&gt;The community&lt;/h3&gt;
&lt;p&gt;The community really surprised me! We got an incredible amount of great feedback on Tanglu, and most of the people liked the idea of Tanglu. I think we are one of the less-flamed new distributions ever started &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt; . Also, without the very active community, kickstarting Tanglu would not have been possible. My guess was that we might be able to have something running next year. Now, with the community help, I see a chance for a release in October &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_smile.gif&quot; alt=&quot;:)&quot; class=&quot;wp-smiley&quot; /&gt; &lt;/p&gt;
&lt;p&gt;The only thing people complained about was the name of the distribution. And to be really honest, I am not too happy with the name. But finding a name was an incredibe difficult process (finding something all parties liked), and Tanglu was a good compromise. “Tanglu” has absolutely no meaning, it was taken because it sounded interesting. The name was created by combining the Brazilian “Tangerine” (Clementine) and the German “Iglu” (igloo). I also dont think the name matters that much, and I am more interested in the system itself than the name of it. Also, companies produce a lot of incredibly weird names, Tanglu is relatively harmless compared to that &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt; .&lt;/p&gt;
&lt;p&gt;In general, thanks to everyone participating in Tanglu! You are driving the project forward!&lt;/p&gt;
&lt;h3&gt;The first (planned) release&lt;/h3&gt;
&lt;p&gt;I hereby announce the name of the first Tanglu release, 1.1 “&lt;a href=&quot;http://en.wikipedia.org/wiki/Aequorea_victoria&quot;&gt;Aequorea Victoria&lt;/a&gt;“. It is Daniel’s fault that Tanglu releases will be named after jellyfishes, you can ask him why if you want &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt;  I picked Aequorea, because this kind of jellyfish was particularly important for research in molecular biology. The GFP protein, a green fluorescent protein (=GFP), caused a small revolution in science and resulted in a Nobel Prize in 2008 for the researchers involved in GFP research (for the interested people: You can tag proteins with GFP and determine their position using light microscopy. GFP also made many other fancy new lab methods possible).&lt;/p&gt;
&lt;p&gt;Because Tanglu itself is more or less experimental at time, I found the connection to research just right for the very first release. We don’t have a time yet when this version will be officially released, but I expect it to be in October, if the development speed increases a little and more developers get interested and work on it.&lt;/p&gt;
&lt;h3&gt;Project Policy&lt;/h3&gt;
&lt;p&gt;We will need to formalize the Tanglu project policy soon, both the technical and the social policies. In general, regarding free software and technical aspects, we strictly adhere to the Dbian Free Software Guidelines, the Debian Social Contract and the Debian Policy. Some extra stuff will be written later, please be patient!&lt;/p&gt;
&lt;h3&gt;Tanglu OIN membership&lt;/h3&gt;
&lt;p&gt;I was approached by the &lt;a href=&quot;http://www.openinventionnetwork.com/&quot;&gt;Open Invention Network&lt;/a&gt;, to join it as member. In general, I don’t have objections to do that, because it will benefit Tanglu. However, the OIN has a very tolerant public stance on software patents, which I don’t like that much. Debian did not join the OIN for this reason. For Tanglu, I think we could still join the OIN without someone thinking that we support the stance on software patents. Joining would simply be pragmatic: We support the OIN as a way to protect the Linux ecosystem from software patents, even if we don’t like the stance on software patents and see it differently.&lt;/p&gt;
&lt;p&gt;Because this affects the whole Tanglu project, I don’t want to decide this alone, but get some feedback from the Tanglu community before making a decision.&lt;/p&gt;
&lt;h3&gt;Can I install Tanglu now?&lt;/h3&gt;
&lt;p&gt;Yes and no. We don’t provide installation images yet, so trying Tanglu is a difficult task (you need to install Debian and then upgrade it to Tanglu) – if you want to experiment with it, I recomment trying Tanglu in a VM.&lt;/p&gt;
&lt;h3&gt;I want to help!&lt;/h3&gt;
&lt;p&gt;Great, then please catch one of us on IRC or subscribe to the mailinglists. The best thing is not to ask for work, but suggest something you want to do, others will then tell you if that is possible and maybe help with the task.&lt;/p&gt;
&lt;p&gt;Packages can for now only be uploaded by Debian Developers, Ubuntu Developers or Debian Maintainers who contacted me directly and whose keys have been verified. This will be changed later, but at the current state of the Tanglu archive (= less safety checks for packages), I only want people to upload stuff who definitely have the knowledge to create sane packages (you can also proove that otherwise, of course). We will later establish a new-member process.&lt;/p&gt;
&lt;p&gt;If you want to provide a Tanglu archive mirror, we would be very happy, so that the main server doesn’t have to carry all the load.&lt;/p&gt;
&lt;p&gt;If you have experience in creating Linux Live-CDs or have worked with the Ubiquity installer, helping with these parts would be awesome!&lt;/p&gt;
&lt;p&gt;Unfortunately, we cannot reuse parts of Linux Mint Debian, because many of their packages don’t build from source and are repackaged binaries, which is a no-go for the Tanglu main archive.&lt;/p&gt;
&lt;h3&gt;Sneak peek&lt;/h3&gt;
&lt;p&gt;And here is a screenshot of the very first Tanglu installation (currently more Debian than Tanglu):&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/tanglu_sneak-peek_screenshot.png&quot; rel=&quot;lightbox[1361]&quot; title=&quot;Tanglu status report&quot;&gt;&lt;img src=&quot;http://blog.tenstral.net/wp-content/uploads/2013/04/tanglu_sneak-peek_screenshot.png&quot; alt=&quot;tanglu_sneak-peek_screenshot&quot; height=&quot;430&quot; class=&quot;aligncenter  wp-image-1370&quot; width=&quot;574&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Something else…&lt;/h3&gt;
&lt;p&gt;I am involved in Debian for a very long time now, first as Debian Maintainer and then as Debian Developer – and I never thought much about the work the Debian system administrators do. I didn’t know how dak worked or how Wanna-build handles the buildds and what exactly the ftpmasters have to do. By not knowing, I mean I knew the very basic theory and what these people do. But this is something different than experiencing how much work setting up and maintaining the infrastructure is and what an awesome job the people do for Debian, keeping it all up and running and secure! Kudos for that, to all people maintaining Debian infrastructure! You rock! (And I will never ever complain about slow buildds or packages which stay in NEW for too long &lt;img src=&quot;http://blog.tenstral.net/wp-includes/images/smilies/icon_wink.gif&quot; alt=&quot;;-)&quot; class=&quot;wp-smiley&quot; /&gt;  )&lt;/p&gt; </description> 
	<pubDate>Mon, 08 Apr 2013 08:24:23 +0000</pubDate>

</item> 
<item>
	<title>Raphael Geissert: How the world ended up in Costa Rica</title>
	<guid>tag:blogger.com,1999:blog-3939164541028317159.post-5364880031221858519</guid>
	<link>http://rgeissert.blogspot.com/2013/04/how-world-ended-up-in-costa-rica.html</link>
     <description>  Even though I haven&#39;t had much time to dedicate to &lt;a href=&quot;http://http.debian.net&quot;&gt;http.debian.net&lt;/a&gt; lately, it has been up and running, or should I say serving?&lt;br /&gt;&lt;br /&gt;Part of its job is to detect mirrors that have temporary issues or are entirely gone, down, unavailable. It does so, and many other things, by monitoring the so-called &quot;trace files&quot;. A very important one being the &quot;&lt;i&gt;master&lt;/i&gt;&quot; (or &quot;origin&quot;) trace file.&lt;br /&gt;&lt;br /&gt;With the recent &lt;a href=&quot;http://www.debian.org/News/2013/20130320&quot;&gt;integration of backports into the main archive&lt;/a&gt;, the master trace file of the backports mirrors also changed. Long story short, this change caused backports mirrors to no longer be considered by the mirror redirector as candidates. As long as they were up to date.&lt;br /&gt;&lt;br /&gt;After the usual mirror synchronisation delay, more and more mirrors were disabled and subsets of &quot;up to date&quot; candidates re-calculated. This reached a critical point when only one mirror was left in the database. The mirror had not been synchronised for a couple of weeks.&lt;br /&gt;&lt;br /&gt;This mirror is located in Costa Rica, and as the only candidate left in the database it was the only one used to serve requests for the backports archive. No matter where the client was located in the world.&lt;br /&gt;&lt;br /&gt;The issue was later noticed and the necessary updates to the mirrors master list made. Mirrors started to be re-considered as they were re-checked (with some delay due to the &lt;a href=&quot;http://rgeissert.blogspot.com/2012/12/nicer-but-stricter.html&quot;&gt;rate limiter&lt;/a&gt;) and the subsets re-calculated. In a few hours everything was back to normality.&lt;br /&gt;&lt;br /&gt;Correctness and fault-tolerance don&#39;t always get together very well... </description> 
	<pubDate>Mon, 08 Apr 2013 07:30:02 +0000</pubDate>
  <author>noreply@blogger.com (Raphael Geissert)</author>  
</item> 
<item>
	<title>Bits from Debian: Debian joins Free &amp; Open Source Software Outreach Program for Women</title>
	<guid>tag:bits.debian.org,2013-04-08:2013/04/joining-opw.html</guid>
	<link>http://bits.debian.org/2013/04/joining-opw.html</link>
     <description>  &lt;p&gt;The GNOME Foundation started the &lt;a href=&quot;http://live.gnome.org/OutreachProgramForWomen&quot;&gt;Free &amp;amp; Open Source Software Outreach
Program for Women, OPW&lt;/a&gt;,
in 2010. In the January-April 2013 round, many other FOSS organizations
joined the program. We are happy to announce that Debian will also join
in the next round from June-September and we&#39;ll offer one internship.&lt;/p&gt;
&lt;p&gt;You can find more details about Debian&#39;s participation in the program
at &lt;a href=&quot;http://wiki.debian.org/OutreachProgramForWomen&quot;&gt;Debian OPW page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Call for mentors and projects&lt;/h2&gt;
&lt;p&gt;OPW allows applicants to work on any kind of project, including coding,
design, marketing, web development... The &lt;a href=&quot;http://wiki.debian.org/SummerOfCode2013/Projects&quot;&gt;Debian Google Summer of Code projects&lt;/a&gt;
will be offered also as possible projects for OPW, but GSoC
only allows coding projects. If you have any idea of a non-coding
project and you want to mentor it, please contact us in the
&lt;a href=&quot;http://lists.alioth.debian.org/mailman/listinfo/soc-coordination&quot;&gt;soc-coordination mailing list&lt;/a&gt;
adding [OPW] in subject.&lt;/p&gt;
&lt;p&gt;OPW works in the same way as GSoC except Google doesn&#39;t play a part here.
The same advice that is provided for GSoC mentors works for OPW mentors.&lt;/p&gt;
&lt;h2&gt;Call for participants&lt;/h2&gt;
&lt;p&gt;The main goal of this program is to increase the number of women in
FOSS, so all women who are not yet a Debian Developer or a Debian
Maintainer are encouraged to apply. There are no age restrictions and
applicants don&#39;t need to be a student.&lt;/p&gt;
&lt;p&gt;If you want to apply, you must follow three steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Choose a project &lt;a href=&quot;http://wiki.debian.org/OutreachProgramForWomen&quot;&gt;from this list&lt;/a&gt;.
There are two lists, one for GSoC and another with non-coding tasks that
can be only offered by the OPW. Those lists may change and add or remove
more projects in the next few weeks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make a small contribution to Debian. Projects will add a task the
applicant must complete as part of the pre-selection process. If no task
is provided, you are welcome to ask the mentors of the project. You can
also make a different extra task of the one listed to show your skills
and interest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a page in the Debian wiki with your application. You can do so
under pseudonym, but in that case, please give us information about
yourself privately by email to the coordinators listed in the &lt;a href=&quot;http://wiki.debian.org/OutreachProgramForWomen&quot;&gt;Debian OPW page&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt; </description> 
	<pubDate>Mon, 08 Apr 2013 06:01:00 +0000</pubDate>

</item> 
<item>
	<title>Bits from Debian: DebConf14 to be held in Portland, Oregon, USA</title>
	<guid>tag:bits.debian.org,2013-04-08:2013/04/debconf14-in-portland-usa.html</guid>
	<link>http://bits.debian.org/2013/04/debconf14-in-portland-usa.html</link>
     <description>  &lt;p&gt;We are pleased to announce the 15th annual Debian Conference (DebConf14) is to be held in Portland, Oregon, USA in August 2014, with specific dates yet to be announced.&lt;/p&gt;
&lt;p&gt;Portland is an open source hotspot in the Pacific Northwest of the US.  It is a technologically savvy community, home to Intel and the adopted home of Linus Torvalds.  The city plays host to many Free Software conferences including &lt;a href=&quot;http://www.oscon.com&quot;&gt;OSCON&lt;/a&gt;, and is where &lt;a href=&quot;http://www.linuxplumbersconf.org&quot;&gt;Linux Plumbers&lt;/a&gt; originated.&lt;/p&gt;
&lt;p&gt;The local team has been involved in mulitple DebConfs in the past, and is excited to bring their experience and ideas to fruition in a city well-positioned to host such a prestigious event.&lt;/p&gt; </description> 
	<pubDate>Sun, 07 Apr 2013 22:01:00 +0000</pubDate>

</item> 
<item>
	<title>Rapha&amp;#235;l Hertzog: My Free Software Activities in March 2013</title>
	<guid>https://raphaelhertzog.com/?p=2907</guid>
	<link>http://raphaelhertzog.com/2013/04/07/my-free-software-activities-in-march-2013/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/hertzog.png&quot; width=&quot;65&quot; height=&quot;93&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;&lt;img src=&quot;http://raphaelhertzog.com/files/2012/07/activity-report-300x300.jpg&quot; title=&quot;Activity report&quot; height=&quot;300&quot; width=&quot;300&quot; alt=&quot;&quot; class=&quot;alignleft size-medium wp-image-2728&quot; /&gt;This is my monthly summary of my free software related activities. If you’re among the people who &lt;a href=&quot;http://raphaelhertzog.com/go/donate/&quot;&gt;made a donation to support my work&lt;/a&gt; (114.19 €, thanks everybody!), then you can learn how I spent your money. Otherwise it’s just an interesting status update on my various projects.&lt;/p&gt;
&lt;h3&gt;Simple-CDD and debian-cd&lt;/h3&gt;
&lt;p&gt;I tried to use wheezy’s version of debian-cd and simple-cdd to generate an automatic installer. In this process, I filed a couple of bugs on simple-cdd (&lt;a href=&quot;http://bugs.debian.org/701693&quot;&gt;#701963&lt;/a&gt;: type-handling package is gone and should not be listed in default.downloads, and &lt;a href=&quot;http://bugs.debian.org/701998&quot;&gt;#701998&lt;/a&gt;: the &lt;code&gt;--keyboard&lt;/code&gt; parameter is not working with wheezy’s debian-installer) and I commited fixes for a  few issues in debian-cd:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://anonscm.debian.org/viewvc/debian-cd?view=revision&amp;amp;revision=2518&quot;&gt;r2518&lt;/a&gt;: adjust Makefile for new xorriso requirement&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://anonscm.debian.org/viewvc/debian-cd?view=revision&amp;amp;revision=2520&quot;&gt;r2520&lt;/a&gt;: add missing depends on dosfstools&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://anonscm.debian.org/viewvc/debian-cd?view=revision&amp;amp;revision=2521&quot;&gt;r2521&lt;/a&gt;: use &lt;code&gt;--no-check-gpg&lt;/code&gt; when querying debootstrap&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://anonscm.debian.org/viewvc/debian-cd?view=revision&amp;amp;revision=2522&quot;&gt;r2522&lt;/a&gt;: make debian-cd work with a mirror without sources)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Debian France&lt;/h3&gt;
&lt;p&gt;I completed the &lt;a href=&quot;http://france.debian.net&quot;&gt;new website for Debian France&lt;/a&gt; and I put it online. Later I merged some supplementary enhancements prepared by Tanguy Ortolo (and I gave him commits rights at the same time).&lt;/p&gt;
&lt;p&gt;I tried to update our Galette installation to the latest upstream version but I reverted to the former version after having encountered two problems (filed &lt;a href=&quot;http://redmine.ulysses.fr/issues/577&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://redmine.ulysses.fr/issues/578&quot;&gt;here&lt;/a&gt;). In the process, I created a Debian package for galette (you can &lt;a href=&quot;http://git.debian.org/?p=collab-maint/galette.git&quot;&gt;grab it on git.debian.org&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I also suggested an &lt;a href=&quot;http://redmine.ulysses.fr/issues/576&quot;&gt;idea of improvement for Galette’s paypal plugin&lt;/a&gt; and it has been quickly implemented. Thus I updated the plugin installed on france.debian.net.&lt;/p&gt;
&lt;h3&gt;Kali related work&lt;/h3&gt;
&lt;p&gt;It’s been a few months that I have been helping the Kali team to prepare this &lt;a href=&quot;http://raphaelhertzog.com/2013/03/13/kali-linux-1-0-a-new-debian-derivative/&quot;&gt;new Debian derivative&lt;/a&gt;. Now that the derivative has gone public, I can attribute some of my Debian work to my collaboration with the Kali team.&lt;/p&gt;
&lt;p&gt;This month I contributed a few features and fixes to debian-installer and live-build:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.debian.org/702257&quot;&gt;#702257&lt;/a&gt;: new preseed entry to disable CDROM entries&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.debian.org/703072&quot;&gt;#703072&lt;/a&gt;: hid-generic module is missing from input-modules udeb (affecting experimental kernel only)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://live.debian.net/gitweb/?p=live-build.git;a=commitdiff;h=8bcbda8&quot;&gt;Fix win32-loader support in live-build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After the launch, we registered Kali in the &lt;a href=&quot;http://wiki.debian.org/Derivatives/Census&quot;&gt;derivative census&lt;/a&gt;. Paul Wise quickly reported some misfiled bugs from early Kali users and I discovered that reportbug was not behaving properly even though we correctly updated base-files (see &lt;a href=&quot;http://bugs.debian.org/703678&quot;&gt;#703678&lt;/a&gt; on reportbug and &lt;a href=&quot;http://bugs.debian.org/703677&quot;&gt;#703677&lt;/a&gt; on lsb-release).&lt;/p&gt;
&lt;h3&gt;Misc packaging work&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I sponsored a &lt;a href=&quot;http://lists.debian.org/debian-devel-changes/2013/03/msg01455.html&quot;&gt;new upstream version of dnsjava&lt;/a&gt; because it’s required by Jitsi.&lt;/li&gt;
&lt;li&gt;I prepared rebuild 0.4.1.1 and uploaded it to testing-proposed-updates for a RC bug fix.&lt;/li&gt;
&lt;li&gt;I uploaded Publican 3.1.5 to experimental and filed &lt;a href=&quot;http://bugs.debian.org/703514&quot;&gt;#703514&lt;/a&gt; to request a new upstream version of docbook-xsl that is needed by Publican.&lt;/li&gt;
&lt;li&gt;I filed &lt;a href=&quot;http://bugs.debian.org/703995&quot;&gt;#703995&lt;/a&gt; to fix apt-setup’s handling of the apt-setup/multiarch preseed option.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;DPL election&lt;/h3&gt;
&lt;p&gt;I also spent quite some time to read and participate to &lt;a href=&quot;https://lists.debian.org/debian-vote/2013/03/author.html#00053&quot;&gt;the discussions on debian-vote&lt;/a&gt; since it was campaigning time for the &lt;a href=&quot;http://www.debian.org/vote/2013/vote_001&quot;&gt;DPL candidates&lt;/a&gt;…&lt;/p&gt;
&lt;h3&gt;Thanks&lt;/h3&gt;
&lt;p&gt;This was a rather active month if you take into account the fact that I got a second son — Lucas — on March 6th.&lt;/p&gt;
&lt;p&gt;See you next month for a new summary of my activities.&lt;/p&gt;
&lt;p style=&quot;font-size: smaller;&quot;&gt;&lt;a href=&quot;http://raphaelhertzog.com/2013/04/07/my-free-software-activities-in-march-2013/#comments&quot;&gt;3 comments&lt;/a&gt; | Liked this article? &lt;a href=&quot;http://raphaelhertzog.com/support-my-work/&quot;&gt;Click here&lt;/a&gt;. | My blog is &lt;a href=&quot;http://flattr.com/thing/26545/apt-get-install-debian-wizard&quot;&gt;Flattr-enabled&lt;/a&gt;.&lt;/p&gt; </description> 
	<pubDate>Sun, 07 Apr 2013 16:29:40 +0000</pubDate>

</item> 
<item>
	<title>Olivier Berger: Migrating picture tags from KPhotoAlbum to digiKam (or others) through IPTC</title>
	<guid>urn:md5:87d942a51ac07d1d946e1da146f7af02</guid>
	<link>http://www.olivierberger.com/weblog/index.php?post/2013/04/07/Migrating-picture-tags-from-KPhotoAlbum-to-digiKam-%28or-others%29-through-IPTC</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/obergix.png&quot; width=&quot;63&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I&#39;ve occasionally used KPhotoAlbum for a few years and eventually added many tags to the pictures.&lt;/p&gt;
&lt;p&gt;But I&#39;ve decided I wanted to try other tools, and digiKam seems to be the best option from the many reviews I&#39;ve read.&lt;/p&gt;
&lt;p&gt;Still, there&#39;s apparently no automatic feature to import into digiKam the tags set in KPhotoAlbum.&lt;/p&gt;
&lt;p&gt;Fortunately, some smart people have implemented Perl tools allowing to overcome this issue.&lt;/p&gt;
&lt;p&gt;The process involves modifying the pictures to save the tags inside the files, using the IPTC standard. Then, digiKam will be able to load the tags from the modified files.&lt;/p&gt;
&lt;p&gt;Here&#39;s a copy of the (translated) &lt;code&gt;&lt;a href=&quot;http://www.olivierberger.com/weblog/public/kphotoalbum2iptc_pl.txt&quot;&gt;kphotoalbum2iptc.pl&lt;/a&gt;&lt;/code&gt; script (the original as in french) I copied from &lt;a href=&quot;http://blog.jesuislibre.org/2009/4/20/export-vos-donnees-de-kphotoalbum-vers-iptc/&quot;&gt;this blog post&lt;/a&gt; (in french too).&lt;/p&gt;
I&#39;ve been able to generate .deb packages for the required 2 perl libs dependencies using the method described in the referenced post , with : &lt;code&gt;dh-make-perl  --build --cpan Image::Kimdaba&lt;/code&gt; and &lt;code&gt;dh-make-perl  --build --cpan Image::IPTCInfo&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;Thanks to Pierre Doucet and Bruno Adele for sharing this. Hope this helps.&lt;br /&gt; </description> 
	<pubDate>Sun, 07 Apr 2013 12:54:00 +0000</pubDate>

</item> 
<item>
	<title>Andrew Pollock: [life/repatexpat] Getting online</title>
	<guid>http://blog.andrew.net.au/2013/04/07#getting_online</guid>
	<link>http://blog.andrew.net.au/2013/04/07#getting_online</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/apollock.png&quot; width=&quot;88&quot; height=&quot;126&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;
I&#39;d decided ahead of time that I wanted to use &lt;a href=&quot;http://internode.on.net/&quot;&gt;Internode&lt;/a&gt; as my ISP, and had ordered a
Naked DSL service from them and also decided to bundle my mobile phone with
them as well. For reasons that only made sense to me 7 years ago, I&#39;ve been
paying Telstra to keep my mobile number going, but I&#39;ve long since lost the
SIM. My current phone has a micro-SIM anyway, so I needed a replacement SIM.
&lt;/p&gt;
&lt;p&gt;
My grand plan had been to order the SIM, order the number port from Telstra
to Internode, and then, well, profit from the moment I stuck the SIM in my
phone. Unfortunately the port didn&#39;t go through as planned, and I was left
incommunicado for the better part of two and a half days. I felt like I had
my hands tied behind my back not having a mobile data service. It was also
mildly annoying not being able to call people or be contactable, given the
amount of running around I was doing. But it got resolved and is fast
becoming a distant memory.
&lt;/p&gt;
&lt;p&gt;
The DSL service required a Telstra technician to come out (I&#39;m not actually
sure why) and that was scheduled for Thursday. I happened to catch him while
he was at my building&#39;s MDF, and had a bit of a chat with him. He was a
Scotsman, and I didn&#39;t get all the details, but he was going on about how he
was only there to operate on the exchange side of the MDF, and I&#39;d have to
get someone else to jumper it up to my apartment.
&lt;/p&gt;
&lt;p&gt;
This wasn&#39;t what I expected from an installation service, but sure enough
when I finally got around to plugging the ADSL modem in on Saturday morning,
there was no line sync to be had. A call to Internode confirmed that he&#39;d
only jumpered it up to exchange side of the MDF.
&lt;/p&gt;
&lt;p&gt;
What was even more annoying was I&#39;m pretty sure I saw him yanking out jumper
wires from the MDF when he was working on it. Jumper wires that connected
the exchange side of the MDF to my apartment.
&lt;/p&gt;
&lt;p&gt;
I was not thrilled with the idea of waiting (and paying) for a cabling
contractor to come out and hook up a couple of bits of jumper wire, so I put
out a call on Facebook for a Krone tool and a tone generator, and Brent was
able to come through for me. He dropped the gear around while I was out
shopping with Kristy, and when we got back, I located the pair for my unit,
and rejumpered the existing jumper wire that I&#39;m pretty sure the Telstra
technician had disconnected. Lo and behold, my ADSL started working. I felt
pretty proud of myself. It&#39;s fun operating at Layer 1 every now and then.
&lt;/p&gt;
&lt;p&gt;
The &lt;a href=&quot;http://fritzbox.com.au/product-fritz-wlan7270.html&quot;&gt;FRITZ!Box
Fon WLAN 7270&lt;/a&gt; is quite the beast of a box. Not only is it an ADSL modem,
it&#39;s a wireless router, DECT base station, VoIP thingy and an answering
machine! I&#39;ve managed to connect my Engin account up to it, so once I get a
DECT handset, I&#39;ll be able to make VoIP calls through it. I don&#39;t need to
run Asterisk any more.
&lt;/p&gt; </description> 
	<pubDate>Sun, 07 Apr 2013 02:54:00 +0000</pubDate>

</item> 
<item>
	<title>Chris Lamb: Thames Turbo Sprint Triathlon 2013 Race 1</title>
	<guid>http://chris-lamb.co.uk/posts/thames-turbo-sprint-triathlon-2013-race-1</guid>
	<link>http://chris-lamb.co.uk/posts/thames-turbo-sprint-triathlon-2013-race-1</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/lamby.png&quot; width=&quot;70&quot; height=&quot;87&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;img src=&quot;https://chris-lamb.co.uk/wp-content/2013/hampton_wick_pool.jpg&quot; alt=&quot;/wp-content/2013/hampton_wick_pool.jpg&quot; /&gt;
&lt;img src=&quot;https://chris-lamb.co.uk/wp-content/2013/bike_tt_01.jpg&quot; alt=&quot;/wp-content/2013/bike_tt_01.jpg&quot; /&gt;
&lt;p&gt;On Monday I took part in my first triathlon, a &quot;sprint&quot; distance race organised by &lt;a href=&quot;http://raceseries.thamesturbo.com&quot; class=&quot;reference external&quot;&gt;Thames Turbo Triathlon Club&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&quot;swim&quot; class=&quot;section&quot;&gt;
&lt;h1&gt;Swim&lt;/h1&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;Distance&lt;/dt&gt;
&lt;dd&gt;428m (+ pool exit chute)&lt;/dd&gt;
&lt;dt&gt;Time&lt;/dt&gt;
&lt;dd&gt;10:23 (2:26/100m)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I was glad to be given a low race number as it would reduce the time standing around 0°C in swimming gear. The 28°C heated pool was a welcome relief and I was quickly on my way, although perhaps overcooking it in the first half.&lt;/p&gt;
&lt;p&gt;Overall, I was quite pleased with my swim time as I had cut it by well over 50% during March; there are perhaps 1-2 minutes of fairly easy gains still to be made as well.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;t1-time-5-32&quot; class=&quot;section&quot;&gt;
&lt;h1&gt;T1 (time: 5:32)&lt;/h1&gt;
&lt;p&gt;Due to the cold temperature and forecast for snow, the race director insisted that competitors added extra layers covering their arms and torso on the bike. An additional &quot;free&quot; 5 minutes was also granted for T1 in order that clothing was not skipped in expense of time. I eventually wore a long-sleeve base layer, tights, a short-sleeved jersey, arm warmers and two pairs of gloves.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;bike&quot; class=&quot;section&quot;&gt;
&lt;h1&gt;Bike&lt;/h1&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;Distance&lt;/dt&gt;
&lt;dd&gt;13.8 miles (+ mounting/demounting chutes)&lt;/dd&gt;
&lt;dt&gt;Time&lt;/dt&gt;
&lt;dd&gt;39:59 (19.5 mph)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I overtook 10-15 riders in the first half of the bike leg, a couple of them even seeking me out to later to congratulate me on looking so fast. I was thus more than a little disappointed when I discovered my final bike split as I was hoping for at least a sub-39 minute time.&lt;/p&gt;
&lt;p&gt;Analysing my GPS later I can see my average speed was over 1.5mph slower in the second half, yet I cannot recall being limited by fatigue or headwind in the last 6 miles. I was either overly reliant on other riders to &quot;reel in&quot; during the first half (but had run out of people to catch in the latter stage) or I simply was not giving 100%.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;t2-time-3-30&quot; class=&quot;section&quot;&gt;
&lt;h1&gt;T2 (time: 3:30)&lt;/h1&gt;
&lt;p&gt;Leaving T2 I failed to start both my GPS and stopwatch correctly so I do not have splits of my time. I also did not pick up my running gloves resulting in distractingly cold hands in Bushy Park.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;run&quot; class=&quot;section&quot;&gt;
&lt;h1&gt;Run&lt;/h1&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;Distance&lt;/dt&gt;
&lt;dd&gt;5k&lt;/dd&gt;
&lt;dt&gt;Time&lt;/dt&gt;
&lt;dd&gt;24:21 (4:52/km)&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Throughout the first kilometer my legs were extremely sluggish and I simply could not get them to do what I wanted - typical triathlon &quot;brick legs&quot;. I did not know it at the time but I was also running up a slight—but extended—incline.&lt;/p&gt;
&lt;p&gt;I struggled to get to the 1k marker and briefly stopped to mentally regroup. I joined another runner a few moments later and we ran the rest of the 5k at a fairly easy pace.&lt;/p&gt;
&lt;p&gt;It&#39;s clear that the lack of serious brick workouts compromised my run time, as well as my inability to dial down the pace once it was clearly too optimistic. Knowing the elevation profile of the run should have adjusted my expectations too, leading to a better overall time.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;overall&quot; class=&quot;section&quot;&gt;
&lt;h1&gt;Overall&lt;/h1&gt;
&lt;dl class=&quot;docutils&quot;&gt;
&lt;dt&gt;Total time&lt;/dt&gt;
&lt;dd&gt;1:18:44&lt;/dd&gt;
&lt;dt&gt;Position&lt;/dt&gt;
&lt;dd&gt;127/261&lt;/dd&gt;
&lt;dt&gt;Position male&lt;/dt&gt;
&lt;dd&gt;109/202&lt;/dd&gt;
&lt;dt&gt;Position 25-29 male&lt;/dt&gt;
&lt;dd&gt;16/25&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Despite finishing just to the left of the overall bell curve, it is difficult avoid feeling disappointed with my time as it was hindered by well-documented and avoidable errors. The sub-optimal pacing throughout meant I still had something left &quot;in the tank&quot; at the end, adding to a general feeling of under-achieving on the way home.&lt;/p&gt;
&lt;p&gt;Preperation was also less than ideal - two days before the race I had twinged my back in a 70-mile reconnaissance ride (!) by overusing my clip-on bars although this only affected me mentally in the race. I additionally ate too much before and during the race in retrospect.&lt;/p&gt;
&lt;p&gt;Nevertheless, there must be some value in learning these lessons first-hand and and early on.&lt;/p&gt;
&lt;img src=&quot;https://chris-lamb.co.uk/wp-content/2013/tt_1_times.jpg&quot; alt=&quot;/wp-content/2013/tt_1_times.jpg&quot; /&gt;
&lt;p&gt;(&lt;a href=&quot;http://racetimingsystems.net/Results/IndividualResult.aspx?Id=559141&quot; class=&quot;reference external&quot;&gt;Full results&lt;/a&gt;)&lt;/p&gt;
&lt;/div&gt; </description> 
	<pubDate>Sat, 06 Apr 2013 10:21:58 +0000</pubDate>

</item> 
<item>
	<title>Daniel Pocock: Switzerland Rigi-Bahn railway, Swiss rail travel</title>
	<guid>http://danielpocock.com/40 at http://danielpocock.com</guid>
	<link>http://danielpocock.com/switzerland-rigi-bahn</link>
     <description>  &lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;With &lt;a href=&quot;http://debconf13.debconf.org&quot;&gt;DebConf13&lt;/a&gt; registrations opening very soon, it&#39;s about time to share some more about Swiss travel.&lt;/p&gt;
&lt;p&gt;For all those who enjoyed the &lt;a href=&quot;http://danielpocock.com/switzerland-glacier-express&quot;&gt;Glacier Express&lt;/a&gt; video, now there is another.  This is the &lt;a href=&quot;http://www.rigi.ch&quot;&gt;Rigi Bahn&lt;/a&gt; rack railway which goes from &lt;a href=&quot;http://en.wikipedia.org/wiki/Vitznau&quot;&gt;Vitznau&lt;/a&gt; up to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Rigi&quot;&gt;top of Mount Rigi&lt;/a&gt; (often just referred to as Rigi).  At the top, it meets another train which goes to the junction of main railway lines at &lt;a href=&quot;http://en.wikipedia.org/wiki/Arth-Goldau&quot;&gt;Arth-Goldau&lt;/a&gt;, and a cable car to &lt;a href=&quot;http://en.wikipedia.org/wiki/Weggis&quot;&gt;Weggis&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The video starts at the station in Vitznau (beside the ferry terminal) and rises up rapidly in a breathtaking ride to the snowy peak at approximately 2,000 meters.  There are spectacular views of mountains to the south across the lake, and look out for the wild animals on the way.  You need at least a 2Mbit connection to stream this video:&lt;/p&gt;
&lt;p&gt;&amp;lt;video controls=&quot;&quot; height=&quot;340&quot; poster=&quot;http://danielpocock.com/sites/danielpocock.com/files/rigi-poster.jpg&quot; width=&quot;560&quot;&amp;gt;&lt;br /&gt;&amp;lt;source src=&quot;http://video.danielpocock.com/DSC_1789.mp4&quot; type=&quot;video/mp4&quot;&amp;gt;&amp;lt;/source&amp;gt;&lt;br /&gt;&amp;lt;source src=&quot;http://video.danielpocock.com/DSC_1789.webm&quot; type=&quot;video/webm&quot;&amp;gt;&amp;lt;/source&amp;gt;&lt;br /&gt;&amp;lt;/video&amp;gt;&lt;/p&gt;
&lt;p&gt;and here are download links for those who prefer to download now and watch later (about 250MB):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://video.danielpocock.com/DSC_1789.mp4&quot;&gt;MPEG format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://video.danielpocock.com/DSC_1789.webm&quot;&gt;WebM format&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Swiss railway tickets&lt;/h3&gt;
&lt;p&gt;When looking at the price of rail passes, keep in mind the maximum price paid by a Swiss resident is never more than 8 CHF per day, because that is the cost of the unlimited annual ticket that many people have.  People who don&#39;t have the unlimited pass have what is called a `half price card&#39; which costs 150 CHF per year and allows them to buy any ticket at half the advertised price.  This means that only the tourists pay the full advertised price, which is usually quite exorbitant.  It is an extremely effective system of discrimination.  A touist pays 8 CHF just for a 1 day pass for the center of a city like Zurich.&lt;/p&gt;
&lt;p&gt;Switzerland does offer some short term unlimited passes that provide some discounts to visitors, it is necessary to think carefully about how many days you want to use to get the optimal package:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;http://www.swisstravelsystem.com&quot;&gt;Swiss Travel System&lt;/a&gt; web site offers the passes for all of Switzerland.  Visitors can buy a multi-day unlimited pass, and also get several days of half-price travel as well.  For 5 days unlimited travel within 1 month, the cost is 364 CHF, includes half price travel for all other days in the month.  Shorter and longer periods available.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://www.tellpass.ch/&quot;&gt;Tell Pass&lt;/a&gt;, named after &lt;a href=&quot;http://en.wikipedia.org/wiki/William_Tell&quot;&gt;William Tell&lt;/a&gt; is significantly cheaper, offering unlimited travel just within the central mountain area.  The Tell Pass includes use of the Rigi Bahn train shown in this blog, and is valid for travel to Andrematt, where you have to buy an extra ticket to ride on the &lt;a href=&quot;http://danielpocock.com/switzerland-glacier-express&quot;&gt;Glacier Express&lt;/a&gt; train from the other blog.  That is not so bad though, because you can buy a one-way ticket from Andermatt up to Natschen and then walk back down.  The region covered by the Tell Pass is really quite big, centered around &lt;a href=&quot;http://en.wikipedia.org/wiki/Luzern&quot;&gt;Luzern&lt;/a&gt;, it goes all the way west to &lt;a href=&quot;http://en.wikipedia.org/wiki/Interlaken&quot;&gt;Interlaken&lt;/a&gt; and south-east to &lt;a href=&quot;http://en.wikipedia.org/wiki/Andermatt&quot;&gt;Andermatt&lt;/a&gt; in the high mountains.  Tell Pass costs 246 CHF for 15 days half-price travel including 5 days unlimited travel.  Shorter periods available too.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.swisstravelsystem.com/en/home/tickets-en/ticketfinder-en/regional-passes.html&quot;&gt;More regional passes&lt;/a&gt; like the Tell Pass are available for people who want to spend less money by just visiting one area of Switzerland.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sbb.ch/en&quot;&gt;The SBB.ch web site&lt;/a&gt; has all the timetables for the trains, ferries, Postbuses and other services.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; </description> 
	<pubDate>Sat, 06 Apr 2013 08:25:30 +0000</pubDate>

</item> 
<item>
	<title>Steve Kemp: So I have a wheezy desktop</title>
	<guid>http://blog.steve.org.uk/so_i_have_a_wheezy_desktop.html</guid>
	<link>http://blog.steve.org.uk/so_i_have_a_wheezy_desktop.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/skx.png&quot; width=&quot;76&quot; height=&quot;105&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I look after a bunch of servers, working for &lt;a href=&quot;http://www.bytemark.co.uk/&quot;&gt;Bytemark&lt;/a&gt; that is not a surprise, but I only touch a very small number of desktop systems.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;tt&gt;precious&lt;/tt&gt; - My desktop&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;This is the machine upon which I develop, check my personal mail, play my music &amp;amp; etc.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;tt&gt;steve&lt;/tt&gt; - My work machine&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;To keep the &lt;a href=&quot;http://blog.steve.org.uk/on_working_from_home.html&quot;&gt;working from home&lt;/a&gt; separation going I have a machine I only use for work purposes.&lt;/p&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;tt&gt;travel&lt;/tt&gt;/&lt;tt&gt;travel2&lt;/tt&gt; - EEPC box&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;I have two EEPC machines, a personal 701 and a work-provided 901.&lt;/p&gt;
&lt;p&gt;Honestly these rarely get used.   One is for when I&#39;m on holiday or traveling, the second for when I&#39;m on-call.&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Yesterday I got round to upgrading both the toy EEPC machines to wheezy.  The good news?  Both of them upgraded/reinstalled easily.  Hardware was all detected, sleeping, hibernation, wifi, etc all &quot;just worked&quot;.&lt;/p&gt;
&lt;p&gt;Unfortunately I am now running GNOME 3.x and the experience is unpleasant.  This is a shame, because I&#39;ve enjoyed GNOME 2.x &amp;amp; bluetile for the past few years.&lt;/p&gt;
&lt;p&gt;The only other concern is that &lt;a href=&quot;http://packages.debian.org/pwsafe&quot;&gt;pwsafe&lt;/a&gt; appears to be scheduled for removal from Debian GNU/Linux - the list of open bugs shows some cause, but there are bugs there that are trivial to fix.&lt;/p&gt;
&lt;p&gt;For the moment I&#39;ve rebuilt the package and if I cannot find a suitable alternative - available for squeeze and wheezy - then I will host the package on my &lt;a href=&quot;http://packages.steve.org.uk/&quot;&gt;package repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In conclusion:  Debian, you did good.  GNOME, I&#39;ve loved and appreciated you for years, but you might not be the desktop I want these days.  It&#39;s not you, it&#39;s me.&lt;/p&gt; </description> 
	<pubDate>Sat, 06 Apr 2013 04:27:58 +0000</pubDate>

</item> 
<item>
	<title>Andrew Pollock: [life/repatexpat] Day #6 of repatriation -- the crash continues</title>
	<guid>http://blog.andrew.net.au/2013/04/06#day6</guid>
	<link>http://blog.andrew.net.au/2013/04/06#day6</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/apollock.png&quot; width=&quot;88&quot; height=&quot;126&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;
I was really not doing well by yesterday, I had developed quite the runny
nose. I&#39;ve discovered that it&#39;s neigh on impossible (from my sample set of
two pharmacies) to get pseudoephedrine over the counter in this country. In
the US, you have to provide ID and they report all purchases to the
government and if you start buying too much, they come and kick down the
door of your meth lab. Here, you seem to need a prescription. One pharmacy
told me that 1 in 10 pharmacies will sell it over the counter. I ended up
with the Australian equivalent of &lt;a href=&quot;http://en.wikipedia.org/wiki/Afrin_(nasal_spray)&quot;&gt;Afrin&lt;/a&gt;, which I
don&#39;t particularly like, but it at least dried up my nose. Discussions on
Facebook suggest that I may have been dealing with second-rate pharmacies,
and the &quot;big ones&quot; would be more useful. I was also advised to try begging
and pleading for Claritin-D. The damn meth labs have ruined it for
everybody. It&#39;s too bad they can&#39;t come up with an additive that is safe to
ingest, but would fuck up the meth cooking process.
&lt;/p&gt;
&lt;p&gt;
Not content with only two marathon shopping days, Kristy came back for a
third day of driving me all around town, as my quest for a sofa bed and a
dining table continued.
&lt;/p&gt;
&lt;p&gt;
It turns out that one does not simply walk into a furniture store and walk
out with a sofa bed (or a dining table, for that matter). These things all
seem to be on boats from China, or at best interstate warehouses, and most
places can sell you something they know is in transit at best, but they&#39;re
loathe to sell floor stock (for obvious reasons), and they seem to not have
anything in a Brisbane warehouse (plenty of stuff was in Sydney or Melbourne
and they&#39;d ship it up). &lt;a href=&quot;http://www.plush.com.au/&quot;&gt;Plush&lt;/a&gt;had a
chaise sofa bed that had a nice sprung mattress, and was due in late this
month or early next, and they would lend me something in the meantime, so
they got my business. I look forward to having something to sit on.
&lt;/p&gt;
&lt;p&gt;
We then had an epic time at Bunnings getting all sorts of random household
stuff, with the obligatory sausage sizzle before and after. Oh, how I have
missed proper sausages! It turns out I&#39;m looking for something that doesn&#39;t
seem to exist over here, Rubbermaid don&#39;t seem to make the plastic &quot;shed&quot;
cupboards in Australia, so I&#39;ll have to look elsewhere (&lt;a href=&quot;http://www.clarkrubber.com.au/utility-rattan-cabinet.html&quot;&gt;Clark
Rubber&lt;/a&gt; seems to make something approximately like what I&#39;m looking for).
&lt;/p&gt;
&lt;p&gt;
Then I picked up some towels from Westfield Chermside and resumed the
search for a dining table. I was really liking the idea of at least one
bench seat, and we finally found a matching table, a bench seat, some
shelving and a coffee table that would work as an entertainment unit, at &lt;a href=&quot;http://www.ozdesignfurniture.com.au/&quot;&gt;OZ Design Furniture&lt;/a&gt;. They
had a 20% off sale that made it all fairly reasonable. The entertainment
unit was available immediately, and the rest of the stuff should be
delivered in a couple of weeks. That just leaves finding some dining chairs
that will go with it.
&lt;/p&gt;
&lt;p&gt;
OZ Design Furniture had the most unusual delivery charging system. They
charge by the flight of stairs. Living on the 2nd floor does have its
disadvantages. At least I won&#39;t be moving out of here any time soon.
&lt;/p&gt;
&lt;p&gt;
By the end of the day, I was totally done, but very happy to have finally
sorted out the elusive remaining bits of furniture. I had my first night
sleeping in my new home.
&lt;/p&gt; </description> 
	<pubDate>Sat, 06 Apr 2013 02:54:00 +0000</pubDate>

</item> 
<item>
	<title>Matthew Garrett: Update on leaked UEFI signing keys - probably no significant risk</title>
	<guid>http://mjg59.dreamwidth.org/24463.html</guid>
	<link>http://mjg59.dreamwidth.org/24463.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/mjg59.png&quot; width=&quot;69&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  According to the update &lt;a href=&quot;http://adamcaudill.com/2013/04/04/security-done-wrong-leaky-ftp-server/&quot;&gt;here&lt;/a&gt;, the signing keys are supposed to be replaced by the hardware vendor. If vendors do that, this ends up being uninteresting from a security perspective - you could generate a signed image, but nothing would trust it. It should be easy enough to verify, though. Just download a firmware image from someone using AMI firmware, pull apart the capsule file, decompress everything and check whether the leaked public key is present in the binaries.&lt;br /&gt;&lt;br /&gt;The real risk here is that even if most vendors have replaced that key, some may not have done. There&#39;s certainly an argument that shipping test keys at all increases the probability that a vendor will accidentally end up using those rather than generating their own, and it&#39;s difficult to rule out the possibility that that&#39;s happened.&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;http://www.dreamwidth.org/tools/commentcount?user=mjg59&amp;amp;ditemid=24463&quot; alt=&quot;comment count unavailable&quot; height=&quot;12&quot; style=&quot;vertical-align: middle;&quot; width=&quot;30&quot; /&gt; comments </description> 
	<pubDate>Fri, 05 Apr 2013 23:21:05 +0000</pubDate>

</item> 
<item>
	<title>Lior Kaplan: The commit police: reference you bugs properly</title>
	<guid>http://liorkaplan.wordpress.com/?p=471</guid>
	<link>http://liorkaplan.wordpress.com/2013/04/05/the-commit-police-reference-you-bugs-properly/</link>
     <description>  &lt;p&gt;Besides my RTL work on Libreoffice, every once in a while I just go over the regular commit log to see what have changed. I don’t necessary understand each line in the commit, but do get the general idea from the commit message. Being more dependent on the commit messages makes me review them more thoroughly (hence the topic of this post).&lt;/p&gt;
&lt;p&gt;As many projects, Libreoffice has &lt;a href=&quot;http://lists.freedesktop.org/archives/libreoffice/2012-February/026028.html&quot;&gt;notifications of commits&lt;/a&gt; related to bugs reports when the bug number is properly mentioned in the commit message. This is very useful for other developers and also for QA people. After verification of a bug is fixed, I often use the commits listed on the bug report to cherry pick them to an older branch. Going to search for an unreferenced commit isn’t much fun.&lt;/p&gt;
&lt;p&gt;One of the things I notice is different ways people reference bugs – from not referencing them at all to referencing them in various ways like linking to the bugs system, just writing the number (without the fdo# prefix) and other creative ways… This is also true for first time contributors, which might not know the standards or the “rules”. When I see such a case I usually put a manual notification in the bug report, and mail the author of doing so. For new or sporadic contributors this is also an opportunity to welcome and thank them for the commit and even encourage future contributions.&lt;/p&gt;
&lt;p&gt;I have been asked why aren’t that info on the wiki, so I went looking and found out the info is in the right place under the “&lt;a href=&quot;https://wiki.documentfoundation.org/Development/GetInvolved&quot;&gt;Development/GetInvolved&lt;/a&gt;” page. The relevant part is:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;When you type a commit message:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;start the first line with a bug reference like &lt;strong&gt;fdo#12345&lt;/strong&gt;, if you have one for your commit (see details below)&lt;/li&gt;
&lt;li&gt;use the rest of the first line as a concise summary of your changes&lt;/li&gt;
&lt;li&gt;the 2nd line remains empty&lt;/li&gt;
&lt;li&gt;and starting on the 3rd line you can explain how and what changes have been made for what reasons.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thanks in advance and happy coding (:&lt;/p&gt;
&lt;br /&gt;Filed under: &lt;a href=&quot;http://liorkaplan.wordpress.com/category/libreoffice/&quot;&gt;LibreOffice&lt;/a&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/liorkaplan.wordpress.com/471/&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://feeds.wordpress.com/1.0/comments/liorkaplan.wordpress.com/471/&quot; alt=&quot;&quot; border=&quot;0&quot; /&gt;&lt;/a&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 21:54:09 +0000</pubDate>

</item> 
<item>
	<title>Richard Hartmann: Release Critical Bug report for Week 14</title>
	<guid>http://richardhartmann.de/blog/posts/2013/04/05-Debian_Release_Critical_Bug_report_for_Week_14/</guid>
	<link>http://richardhartmann.de/blog/posts/2013/04/05-Debian_Release_Critical_Bug_report_for_Week_14/</link>
     <description>  &lt;p&gt;Over the week, around noon CEST, we had:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monday: 44 total&lt;/li&gt;
&lt;li&gt;Tuesday 43 total&lt;/li&gt;
&lt;li&gt;Wednesday: 49 total&lt;/li&gt;
&lt;li&gt;Thursday: 53 total&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;a href=&quot;http://udd.debian.org/bugs.cgi&quot;&gt;UDD bugs
interface&lt;/a&gt; currently knows about the following release critical
bugs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;In Total: &lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=any&amp;amp;merged=ign&amp;amp;rc=1&quot;&gt;
718&lt;/a&gt;&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Affecting wheezy: &lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy&amp;amp;merged=ign&amp;amp;rc=1&quot;&gt;
51&lt;/a&gt;&lt;/strong&gt; That&#39;s the number we need to get down to zero
before the release. They can be split in two big categories:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Affecting wheezy and unstable: &lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_and_sid&amp;amp;merged=ign&amp;amp;rc=1&quot;&gt;
32&lt;/a&gt;&lt;/strong&gt; Those need someone to find a fix, or to finish the
work to upload a fix to unstable:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_and_sid&amp;amp;patch=only&amp;amp;merged=ign&amp;amp;done=ign&amp;amp;fnewerval=7&amp;amp;rc=1&amp;amp;sortby=id&amp;amp;sorto=asc&amp;amp;ctags=1&amp;amp;cdeferred=1&quot;&gt;
9&lt;/a&gt; bugs are tagged &#39;patch&#39;.&lt;/strong&gt; Please help by reviewing
the patches, and (if you are a DD) by uploading them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_and_sid&amp;amp;merged=ign&amp;amp;done=only&amp;amp;fnewerval=7&amp;amp;rc=1&amp;amp;sortby=id&amp;amp;sorto=asc&amp;amp;ctags=1&amp;amp;cdeferred=1&quot;&gt;
1&lt;/a&gt; bugs are marked as done, but still affect unstable.&lt;/strong&gt;
This can happen due to missing builds on some architectures, for
example. Help investigate!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_and_sid&amp;amp;patch=ign&amp;amp;merged=ign&amp;amp;done=ign&amp;amp;fnewerval=7&amp;amp;rc=1&amp;amp;sortby=id&amp;amp;sorto=asc&amp;amp;ctags=1&amp;amp;ctags=1&amp;amp;cdeferred=1&quot;&gt;
22&lt;/a&gt; bugs are neither tagged patch, nor marked done.&lt;/strong&gt;
Help make a first step towards resolution!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Affecting wheezy only: &lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_not_sid&amp;amp;merged=ign&amp;amp;fnewerval=7&amp;amp;rc=1&amp;amp;sortby=id&amp;amp;sorto=asc&amp;amp;chints=1&amp;amp;ctags=1&amp;amp;cdeferred=1&amp;amp;crttags=1&quot;&gt;
19&lt;/a&gt;&lt;/strong&gt; Those are already fixed in unstable, but the fix
still needs to migrate to wheezy. You can help by submitting
unblock requests for fixed packages, by investigating why packages
do not migrate, or by reviewing submitted unblock requests.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_not_sid&amp;amp;merged=ign&amp;amp;fnewerval=7&amp;amp;rc=1&amp;amp;sortby=id&amp;amp;sorto=asc&amp;amp;chints=1&amp;amp;ctags=1&amp;amp;cdeferred=1&amp;amp;crttags=1&amp;amp;unblock-hint=only&quot;&gt;
9&lt;/a&gt; bugs are in packages that are unblocked by the release
team.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://udd.debian.org/bugs.cgi?release=wheezy_not_sid&amp;amp;merged=ign&amp;amp;fnewerval=7&amp;amp;rc=1&amp;amp;sortby=id&amp;amp;sorto=asc&amp;amp;chints=1&amp;amp;ctags=1&amp;amp;cdeferred=1&amp;amp;crttags=1&amp;amp;unblock-hint=ign&quot;&gt;
10&lt;/a&gt; bugs are in packages that are not unblocked.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How do we compare to the Squeeze release cycle?&lt;/p&gt;
&lt;table border=&quot;1&quot;&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;th&gt;Week&lt;/th&gt;
&lt;th&gt;Squeeze&lt;/th&gt;
&lt;th&gt;Wheezy&lt;/th&gt;
&lt;th&gt;Diff&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;284 (213+71)&lt;/td&gt;
&lt;td&gt;468 (332+136)&lt;/td&gt;
&lt;td&gt;+184 (+119/+65)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;261 (201+60)&lt;/td&gt;
&lt;td&gt;408 (265+143)&lt;/td&gt;
&lt;td&gt;+147 (+64/+83)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;261 (205+56)&lt;/td&gt;
&lt;td&gt;425 (291+134)&lt;/td&gt;
&lt;td&gt;+164 (+86/+78)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;271 (200+71)&lt;/td&gt;
&lt;td&gt;401 (258+143)&lt;/td&gt;
&lt;td&gt;+130 (+58/+72)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;283 (209+74)&lt;/td&gt;
&lt;td&gt;366 (221+145)&lt;/td&gt;
&lt;td&gt;+83 (+12/+71)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;256 (177+79)&lt;/td&gt;
&lt;td&gt;378 (230+148)&lt;/td&gt;
&lt;td&gt;+122 (+53/+69)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;256 (180+76)&lt;/td&gt;
&lt;td&gt;360 (216+155)&lt;/td&gt;
&lt;td&gt;+104 (+36/+79)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;204 (148+56)&lt;/td&gt;
&lt;td&gt;339 (195+144)&lt;/td&gt;
&lt;td&gt;+135 (+47/+90)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;178 (124+54)&lt;/td&gt;
&lt;td&gt;323 (190+133)&lt;/td&gt;
&lt;td&gt;+145 (+66/+79)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;115 (78+37)&lt;/td&gt;
&lt;td&gt;289 (190+99)&lt;/td&gt;
&lt;td&gt;+174 (+112/+62)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;93 (60+33)&lt;/td&gt;
&lt;td&gt;287 (171+116)&lt;/td&gt;
&lt;td&gt;+194 (+111/+83)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;82 (46+36)&lt;/td&gt;
&lt;td&gt;271 (162+109)&lt;/td&gt;
&lt;td&gt;+189 (+116/+73)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;25 (15+10)&lt;/td&gt;
&lt;td&gt;249 (165+84)&lt;/td&gt;
&lt;td&gt;+224 (+150/+74)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;14 (8+6)&lt;/td&gt;
&lt;td&gt;244 (176+68)&lt;/td&gt;
&lt;td&gt;+230 (+168/+62)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2 (0+2)&lt;/td&gt;
&lt;td&gt;224 (132+92)&lt;/td&gt;
&lt;td&gt;+222 (+132/+90)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;release!&lt;/td&gt;
&lt;td&gt;212 (129+83)&lt;/td&gt;
&lt;td&gt;+212 (+129/+83)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;release+1&lt;/td&gt;
&lt;td&gt;194 (128+66)&lt;/td&gt;
&lt;td&gt;+194 (+128/+66)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;release+2&lt;/td&gt;
&lt;td&gt;206 (144+62)&lt;/td&gt;
&lt;td&gt;+206 (+144/+62)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;release+3&lt;/td&gt;
&lt;td&gt;174 (105+69)&lt;/td&gt;
&lt;td&gt;+174 (+105/+69)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;release+4&lt;/td&gt;
&lt;td&gt;120 (72+48)&lt;/td&gt;
&lt;td&gt;+120 (+72/+48)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;release+5&lt;/td&gt;
&lt;td&gt;115 (74+41)&lt;/td&gt;
&lt;td&gt;+115 (+74/+41)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;release+6&lt;/td&gt;
&lt;td&gt;93 (47+46)&lt;/td&gt;
&lt;td&gt;+93 (+47/+46)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;release+7&lt;/td&gt;
&lt;td&gt;50 (24+26)&lt;/td&gt;
&lt;td&gt;+50 (+24/+26)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;release+8&lt;/td&gt;
&lt;td&gt;51 (32+19)&lt;/td&gt;
&lt;td&gt;+51 (+32/+19)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;release+9&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;release+10&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;release+11&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;release+12&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Graphical overview of bug stats thanks to azhag:&lt;br /&gt;
&lt;img src=&quot;http://richardhartmann.de/blog/../../../../img/rc_bugs_report_en_2013-14.png&quot; /&gt;&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 20:28:32 +0000</pubDate>

</item> 
<item>
	<title>Phil Hands: AllTrials campaign</title>
	<guid>http://wiki.hands.com//chezfil/entry/alltrials/</guid>
	<link>http://wiki.hands.com//chezfil/entry/alltrials/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/philh.png&quot; width=&quot;99&quot; height=&quot;104&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Ben Goldacre (&lt;a href=&quot;http://badscience.net/&quot;&gt;Bad Science&lt;/a&gt;), is running a campaign for all medical trials to be published.&lt;/p&gt;
&lt;p&gt;It seems that &lt;a href=&quot;http://www.alltrials.net/wp-content/uploads/2013/01/Missing-trials-briefing-note.pdf&quot;&gt;best current evidence&lt;/a&gt; indicates that about half of the trials for treatments currently in use remain unpublished.&lt;/p&gt;
&lt;p&gt;That&#39;s pretty astounding when you think about it. Given that many of the trials that &lt;em&gt;are&lt;/em&gt; published only compare new treatments against placebo, rather than against the best available existing treatment, and often barely show them as being more effective than homeopathy&lt;tt&gt;^W&lt;/tt&gt;sugar, one has to wonder how dire were the results that are not being published.&lt;/p&gt;
&lt;p&gt;If you prefer to have science done in the open, then I&#39;d encourage you to visit &lt;a href=&quot;http://www.alltrials.net/&quot;&gt;www.alltrials.net&lt;/a&gt; and sign the petition and/or give &lt;a href=&quot;http://www.senseaboutscience.org/&quot;&gt;them&lt;/a&gt; a donation.&lt;/p&gt;
&lt;p&gt;The fix is pretty straight-forward: Simply insist that clinical trials have to register before they start in order to be considered valid, and that all registered trials have to report their results. It need not be expensive to do -- a git repo. shared across the industry, containing a file for each trial in a standard format would do the trick probably. I imagine they&#39;ll come up with a more expensive solution, but in comparison to the cost of running a decent sized trial, it&#39;ll still be pocket change.&lt;/p&gt;
&lt;p&gt;(A &lt;a href=&quot;http://www.alltrials.net/blog/note-from-the-campaign/&quot;&gt;note from the campaign&lt;/a&gt;, sent to existing petition signatories, is what prompted this blog post -- please read it and be inspired to help)&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 20:14:14 +0000</pubDate>

</item> 
<item>
	<title>Matthew Garrett: Leaked UEFI signing keys</title>
	<guid>http://mjg59.dreamwidth.org/24306.html</guid>
	<link>http://mjg59.dreamwidth.org/24306.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/mjg59.png&quot; width=&quot;69&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  (See &lt;a href=&quot;http://mjg59.dreamwidth.org/24463.html&quot;&gt;here&lt;/a&gt; for an update to this)&lt;br /&gt;&lt;br /&gt;A hardware vendor &lt;a href=&quot;http://adamcaudill.com/2013/04/04/security-done-wrong-leaky-ftp-server/&quot;&gt;apparently had a copy of an AMI private key on a public FTP site&lt;/a&gt;. This is concerning, but it&#39;s not immediately obvious how dangerous this is for a few reasons. The first is that this is apparently the firmware signing key, not any of the Secure Boot keys. That means it can&#39;t be used to sign a UEFI executable or bootloader, so can&#39;t be used to sidestep Secure Boot directly. The second is that it&#39;s AMI&#39;s key, not a board vendor - we don&#39;t (yet) know if this key is used to sign any actual shipping firmware images, or whether it&#39;s effectively a reference key. And, thirdly, the code apparently dates from early 2012 - even if it was an actual signing key, it may have been replaced before any firmware based on this code shipped.&lt;br /&gt;&lt;br /&gt;But there&#39;s still the worst case scenario that this key &lt;em&gt;is&lt;/em&gt; used to sign most (or all) AMI-based vendor firmware. Can this be used to subvert Secure Boot? Plausibly. The attack would involve producing a new, signed firmware image with Secure Boot either disabled or with an additional key installed, and then to reflash that firmware. Firmware images are very board-specific, so unless you&#39;re engaging in a very targeted attack you either need a large repository of firmware for every board you want to attack, or you need to perform in-place modification.&lt;br /&gt;&lt;br /&gt;Taking a look at the firmware update tool used for AMI systems, the latter might be possible. It seems that the AMI firmware driver allows you to dump the existing ROM to a file. It&#39;d then be a matter of pulling apart the firmware image, modifying the key database, putting it back together, signing it and flashing it. It looks like doing this does require that the user enter the firmware password if one&#39;s set, so the simplest mitigation strategy would be to do that.&lt;br /&gt;&lt;br /&gt;So. If this key is used by most vendors shipping AMI-based firmware, and if it&#39;s a current (rather than test) key, then it may well be possible for it to be deployed in an automated malware attack that subverts the Secure Boot trust model on systems running AMI-based firmware. The obvious lesson here is that handing out your private keys to third parties that you don&#39;t trust is a pretty bad idea, as is including them in source repositories.&lt;br /&gt;&lt;br /&gt;(Wow, was &lt;a href=&quot;http://lists.debian.org/debian-devel/2004/10/msg01643.html&quot;&gt;this&lt;/a&gt; really as long ago as 2004? How little things change)&lt;br /&gt;&lt;br /&gt;&lt;img src=&quot;http://www.dreamwidth.org/tools/commentcount?user=mjg59&amp;amp;ditemid=24306&quot; alt=&quot;comment count unavailable&quot; height=&quot;12&quot; style=&quot;vertical-align: middle;&quot; width=&quot;30&quot; /&gt; comments </description> 
	<pubDate>Fri, 05 Apr 2013 19:18:36 +0000</pubDate>

</item> 
<item>
	<title>Benjamin Mako Hill: Students for Free Culture Conference FCX2013</title>
	<guid>http://mako.cc/copyrighteous/?p=2314</guid>
	<link>http://mako.cc/copyrighteous/students-for-free-culture-conference-fcx2013</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/mako.gif&quot; width=&quot;65&quot; height=&quot;93&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;&lt;a href=&quot;http://mako.cc/copyrighteous/wp-content/uploads/2013/04/fcx2013.png&quot;&gt;&lt;img src=&quot;http://mako.cc/copyrighteous/wp-content/uploads/2013/04/fcx2013.png&quot; alt=&quot;FCX2013 Logo&quot; height=&quot;191&quot; class=&quot;alignnone size-full wp-image-2315&quot; width=&quot;328&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On the weekend of April 20-21, &lt;a href=&quot;http://freeculture.org/&quot; class=&quot;reference external&quot;&gt;Students for Free Culture&lt;/a&gt; is going to be holding its annual conference, &lt;a href=&quot;http://fcx2013.org/&quot; class=&quot;reference external&quot;&gt;FCX2013&lt;/a&gt;, at &lt;a href=&quot;http://www.nyls.edu/&quot; class=&quot;reference external&quot;&gt;New York Law School&lt;/a&gt; in New York City. As a long-time SFC supporter and member, I am &lt;em&gt;enormously proud&lt;/em&gt; to be giving the opening keynote address.&lt;/p&gt;
&lt;p&gt;Although the program for Sunday is still shaping up, the &lt;a href=&quot;http://fcx2013.org/fcxprogram.html&quot; class=&quot;reference external&quot;&gt;published Saturday schedule&lt;/a&gt; looks &lt;em&gt;great&lt;/em&gt;. If previous years are any indication, the conference can serve as an incredible introduction to free culture, free software, wikis, remixing, copyright, patent and trademark reform, and participatory culture. For folks that are already deeply involved, FCX is among the best places I know to connect with other passionate, creative, people working on free culture issues.&lt;/p&gt;
&lt;p&gt;I’ve been closely following and involved with SFC for years and I am particularly excited about the group that is driving the organization forward this year. If you will be in or near New York that weekend — or if you can make the trip — you should definitely try to attend.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://fcx2013.org/&quot; class=&quot;reference external&quot;&gt;FCX2013&lt;/a&gt; is &lt;em&gt;pay what you can&lt;/em&gt; with a $15 suggested donation. You can &lt;a href=&quot;http://fcx2013.org/fcxregistration.html&quot; class=&quot;reference external&quot;&gt;register online now&lt;/a&gt;. &lt;a href=&quot;http://freeculture.org/blog/2013/03/06/register-for-fcx2013/&quot; class=&quot;reference external&quot;&gt;Travel assistance&lt;/a&gt; — especially for members of active SFC chapters — may still be available. I hope to see you there!&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 15:13:36 +0000</pubDate>

</item> 
<item>
	<title>Clint Adams: And the men who hold high places</title>
	<guid>http://xana.scru.org/xana2/mintings/nocountryforbenjaminsnow/</guid>
	<link>http://xana.scru.org/xana2/mintings/nocountryforbenjaminsnow/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/clint.png&quot; width=&quot;80&quot; height=&quot;88&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Antonia came into the room.  “Where&#39;s Alieta?” she asked.&lt;/p&gt;

&lt;p&gt;“We don&#39;t know,” replied Luda.  It was true; we hadn&#39;t seen Alieta
in quite some time, and we had no idea where she was.&lt;/p&gt;

&lt;p&gt;Antonia left.  Varvara eyed me mischievously and said, “You could
call her.”&lt;/p&gt;

&lt;p&gt;“How?” I asked.&lt;/p&gt;

&lt;p&gt;“Touch the grandmother clock and you will figure it out.”&lt;/p&gt;

&lt;p&gt;I touched the clock trepidly.  Nothing happened.  I opened my mouth
to speak, but the word I had been about to say resonated in my mind
as if spoken through a comb filter.  I concentrated.  “Alieta,”
dozens of human-like voices sang over and over in different
harmonies.  I let go.&lt;/p&gt;

&lt;p&gt;“What was that?” I demanded.&lt;/p&gt;

&lt;p&gt;“Clock,” Varvara said dismissively.&lt;/p&gt;

&lt;p&gt;“Come on, let&#39;s do laundry,” Luda grunted.&lt;/p&gt;

&lt;p&gt;We carried our laundry out to the garage, which is where the washer
and dryer lived.  Alieta slipped in through one of the open garage
doors, and surreptitiously pulled Varvara over for a whispered
conversation.&lt;/p&gt;

&lt;p&gt;Antonia wandered in and squinted in Alieta&#39;s general direction.
Luda quickly pulled Varvara in front of her.  “It&#39;s just Varvara,”
she announced.&lt;/p&gt;

&lt;p&gt;Antonia&#39;s eyes glazed over and she went back into the house.
Alieta pursed her lips and studied the wall as if there
might be some reflective object that had alerted her mother
to her presence.  Then she grabbed Varvara by the hand, pulled
her over to push the buttons that closed the garage doors,
and dragged her into the house.&lt;/p&gt;

&lt;p&gt;I watched the garage doors close.  Then I watched the one on
the left reverse direction.  I opened my mouth to notify someone
of this, but the doors reversed direction again, and proceeded
to partially open and close as if possessed.  I tried to hide
behind Luda, without success.&lt;/p&gt;

&lt;p&gt;Now she was watching as well, as reality seemed to to shimmer
and bend.  The roof became arched, and there were loud mechanical
noises as our environs transformed.  When it finished, the
place where the garage doors had been was now a wall of screens
displaying video as you might encounter in a television store.
More disconcertingly, we were in front of a railing which
overlooked what appeared to be a car dealership showroom.&lt;/p&gt;

&lt;p&gt;Luda sucked in her breath.  “Benjamin Snow, you were into
some serious shit,” she muttered.&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 14:13:52 +0000</pubDate>

</item> 
<item>
	<title>Michal &amp;#268;iha&amp;#345;: Unknown phpMyAdmin features - server monitoring</title>
	<guid>http://blog.cihar.com/archives/2013/04/05/unknown-phpmyadmin-features-server-monitoring/?utm_source=rss2</guid>
	<link>http://blog.cihar.com/archives/2013/04/05/unknown-phpmyadmin-features-server-monitoring/?utm_source=rss2</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/nijel.png&quot; width=&quot;64&quot; height=&quot;67&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;&lt;a href=&quot;http://www.phpmyadmin.net/&quot;&gt;phpMyAdmin&lt;/a&gt; has in last year received various useful features, which are not that well known. I&#39;ve decided to give them some promotion before releasing &lt;a href=&quot;http://www.phpmyadmin.net/&quot;&gt;phpMyAdmin&lt;/a&gt; 4.0.&lt;/p&gt;
&lt;p&gt;The server monitoring part is already present since phpMyAdmin 3.5, but some of the parts were further improved in 4.0.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.phpmyadmin.net/home_page/images/screenshots/monitor.png&quot;&gt;&lt;img src=&quot;http://www.phpmyadmin.net/home_page/images/screenshots/monitor-small.png&quot; alt=&quot;Server monitor&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Server monitor (as you can see on picture above or on &lt;a href=&quot;http://demo.phpmyadmin.net/master-config/server_status_monitor.php&quot;&gt;demo server&lt;/a&gt;) allows you to follow server status in real time. Besides predefined charts, you can choose to follow any of MySQL server status variables or some system parameters.&lt;/p&gt;
&lt;p&gt;If you see something weird in the charts, you can select interval and inspect slow or general query log (if you have enabled it). This can help you finding most problematic queries for your server.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.phpmyadmin.net/home_page/images/screenshots/advisor.png&quot;&gt;&lt;img src=&quot;http://www.phpmyadmin.net/home_page/images/screenshots/advisor-small.png&quot; alt=&quot;Server configuration advisor&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Advisor (on picture above or on &lt;a href=&quot;http://demo.phpmyadmin.net/master-config/server_status_advisor.php&quot;&gt;demo server&lt;/a&gt;) is another way to improve server performance - it comes with extensive set of &lt;a href=&quot;https://github.com/phpmyadmin/phpmyadmin/blob/master/libraries/advisory_rules.txt&quot;&gt;rules&lt;/a&gt;, which can help you tuning performance for your workload. Your server has to be running for significant time to give some reasonable recommendations (so don&#39;t expect these on the demo server, which is restarted quite often). However it is still recommended to read server documentation before doing any adjustments, as the setting might have some side effects, which will affect your workload as well.&lt;/p&gt;
&lt;p&gt;Of course these are not magic pill to cure your unresponsive server, but can help you a lot in finding possible bottlenecks.&lt;/p&gt;

&lt;p style=&quot;font-size: smaller;&quot;&gt;
Filed under: 


&lt;a href=&quot;http://blog.cihar.com/archives/english/&quot;&gt;English&lt;/a&gt;

&lt;a href=&quot;http://blog.cihar.com/archives/phpmyadmin/&quot;&gt;Phpmyadmin&lt;/a&gt;

|

&lt;a href=&quot;http://blog.cihar.com/archives/2013/04/05/unknown-phpmyadmin-features-server-monitoring/#comments&quot;&gt;0 comments&lt;/a&gt;
|
&lt;a href=&quot;https://flattr.com/submit/auto?user_id=nijel&amp;amp;url=http://blog.cihar.com/archives/2013/04/05/unknown-phpmyadmin-features-server-monitoring/&amp;amp;title=Michal Čihař: Unknown phpMyAdmin features - server monitoring&amp;amp;description=phpMyAdmin has in last year received various useful features, which are not that well known. I&#39;ve decided to give them some promotion before releasing phpMyAdmin 4.0.&amp;amp;language=en_GB&amp;amp;tags=blog,english,phpmyadmin&amp;amp;category=text&quot;&gt;Flattr this!&lt;/a&gt;
&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 10:00:00 +0000</pubDate>
  <author>michal@cihar.com (Michal Čihař)</author>  
</item> 
<item>
	<title>Olivier Berger: “Using RDF metadata for traceability among projects and distributions” presented at DistroRecipes 2013</title>
	<guid>http://www-public.telecom-sudparis.eu/~berger_o/weblog/?p=1059</guid>
	<link>http://www-public.telecom-sudparis.eu/~berger_o/weblog/2013/04/05/using-rdf-metadata-for-traceability-among-projects-and-distributions-presented-at-distrorecipes-2013/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/obergix.png&quot; width=&quot;63&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I’ve given a &lt;a href=&quot;https://distro-recipes.org/en/lightning/metadata-and-traceability/&quot;&gt;lightning talk&lt;/a&gt; at Distro Recipes 2013 about what I’ve been working on for several months: adding Semantic meta-data to Debian PTS, and stuff.&lt;/p&gt;
&lt;p&gt;Here are my slides :&lt;br /&gt;
&amp;lt;iframe allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot; height=&quot;356&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; mozallowfullscreen=&quot;mozallowfullscreen&quot; scrolling=&quot;no&quot; src=&quot;http://www.slideshare.net/slideshow/embed_code/18183576&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; webkitallowfullscreen=&quot;webkitallowfullscreen&quot; width=&quot;427&quot;&amp;gt; &amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;An &lt;a href=&quot;http://www-public.telecom-sudparis.eu/~berger_o/presentation-DistroRecipes-2013.pdf&quot; title=&quot;Conférence “L’économie du logiciel libre et la percée d’OpenStack dans le cloud” le 27/03 à Évry&quot;&gt;in PDF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to the Hupstream staff and other participants of Distro Recipes for the interesting discussions and contacts. Looking forward to participating to the next edition.&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 09:12:57 +0000</pubDate>

</item> 
<item>
	<title>Daniel Pocock: Quickstart: Integrating SIP support into any application with reSIProcate</title>
	<guid>http://danielpocock.com/43 at http://danielpocock.com</guid>
	<link>http://danielpocock.com/quickstart-integrating-sip-with-resiprocate</link>
     <description>  &lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;Today&#39;s applications are more dynamic and interactive than ever before, typically offering the user many ways to collaborate or get live data about their community or environment as they need it.&lt;/p&gt;
&lt;p&gt;Two open standards exist with a broad focus on real-time messaging and session control, SIP and XMPP (Jabber).  Both of them have been supercharged by the development of technologies like WebRTC that makes every browser into a communications endpoint.  Here, we look at integrating SIP into any C++ application (either client or server).  We use the industry standard SIP stack &lt;a href=&quot;http://www.resiprocate.org&quot;&gt;reSIProcate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The quickest way to get started is with a Debian, Ubuntu or Fedora development environment.  reSIProcate is conveniently packaged on all those platforms (for Fedora, it is not yet in yum and must be built from the tarball using rpmbuild).&lt;/p&gt;
&lt;h3&gt;Getting the environment set up&lt;/h3&gt;
&lt;p&gt;Once you have Debian or Ubuntu installed, just do:&lt;/p&gt;
&lt;pre&gt;# apt-get build-dep resiprocate
# apt-get install libresiprocate-1.8-dev
&lt;/pre&gt;&lt;p&gt;This will install all the necessary tools, libraries and header files.  Headers are under /usr/include/resip&lt;/p&gt;
&lt;h3&gt;Writing some code&lt;/h3&gt;
&lt;p&gt;The object orientated nature of C++ is heavily leveraged by reSIProcate, and this makes it easy to code.  The stack is based on a callback paradigm: you create some objects based on well-defined interfaces, give your objects to the stack, and put the stack into a loop.  The stack will call your object when some event occurs (e.g. new incoming call, new text message)&lt;/p&gt;
&lt;p&gt;The easiest way to see this in practice is to browse the test cases.  The test cases under the &lt;a href=&quot;https://svn.resiprocate.org/viewsvn/resiprocate/main/resip/dum/test/&quot;&gt;resip/dum&lt;/a&gt;(mirrored on &lt;a href=&quot;https://github.com/resiprocate/resiprocate/tree/master/resip/dum/test&quot;&gt;github&lt;/a&gt;) section of the source tree provide good high-level examples of the type of code an application writes when using reSIProcate in an existing application.&lt;/p&gt;
&lt;h3&gt;Sending a SIP text message&lt;/h3&gt;
&lt;p&gt;Based on the &lt;a href=&quot;https://svn.resiprocate.org/viewsvn/resiprocate/main/resip/dum/test/basicMessage.cxx?revision=9367&amp;amp;view=markup&quot;&gt;basicMessage&lt;/a&gt; test case, I&#39;ve created a trivial piece of code below to send a text message over SIP.  The whole demo project is uploaded into &lt;a href=&quot;https://github.com/resiprocate/sendsipmsg&quot;&gt;github&lt;/a&gt;, see the &lt;a href=&quot;https://github.com/resiprocate/sendsipmsg/blob/master/README&quot;&gt;README&lt;/a&gt; for instructions on how to build and run.&lt;/p&gt;
&lt;p&gt;Here, we have a quick look at the one object in the demo, it is notified on the progress of the SIP text message:&lt;/p&gt;
&lt;pre&gt;class ClientMessageHandler : public ClientPagerMessageHandler {
public:
   ClientMessageHandler()
      : finished(false),
        successful(false)
   {
   };

   virtual void onSuccess(ClientPagerMessageHandle, const SipMessage&amp;amp; status)
   {
      InfoLog(&amp;lt;&amp;lt;&quot;ClientMessageHandler::onSuccess\n&quot;);
      successful = true;
      finished = true;
   }

   virtual void onFailure(ClientPagerMessageHandle, const SipMessage&amp;amp; status, std::auto_ptr&amp;lt;contents&amp;gt; contents)
   {
      ErrLog(&amp;lt;&amp;lt;&quot;ClientMessageHandler::onFailure\n&quot;);
      successful = false;
      finished = true;
   }

   bool isFinished() { return finished; };
   bool isSuccessful() { return successful; };

private:
   bool finished;
   bool successful;
};


int main(int argc, char *argv[])
{
   // boilerplate initialisation code...
...
   NameAddr naTo(to.c_str());
   ClientPagerMessageHandle cpmh = clientDum.makePagerMessage(naTo);

   Data messageBody(&quot;Hello world!&quot;);
   auto_ptr&amp;lt;contents&amp;gt; content(new PlainContents(messageBody));
   cpmh.get()-&amp;gt;page(content);
...
}
&amp;lt;/contents&amp;gt;&amp;lt;/contents&amp;gt;&lt;/pre&gt;&lt;h3&gt;Going further with reSIProcate&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Look at the &lt;a href=&quot;https://svn.resiprocate.org/viewsvn/resiprocate/main/resip/dum/test/&quot;&gt;other test cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Look at some of the &lt;a href=&quot;https://svn.resiprocate.org/viewsvn/resiprocate/main/apps/&quot;&gt;contributed applications&lt;/a&gt;, which include two click-to-call programs.&lt;/li&gt;
&lt;li&gt;For browser integration, look at the &lt;a href=&quot;http://www.resiprocate.org/WebRTC_and_SIP_Over_WebSockets&quot;&gt;SIP over WebSockets&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;Feel free to ask questions on the &lt;a href=&quot;http://list.resiprocate.org/mailman/listinfo&quot;&gt;mailing lists&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 06:26:09 +0000</pubDate>

</item> 
<item>
	<title>Andrew Pollock: [life/repatexpat] Day #5 of repatriation -- the crash</title>
	<guid>http://blog.andrew.net.au/2013/04/05#day5</guid>
	<link>http://blog.andrew.net.au/2013/04/05#day5</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/apollock.png&quot; width=&quot;88&quot; height=&quot;126&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;
The jet lag, the lack of sleep, and the general pace of the week has caught
up with me. I&#39;m feeling decidedly run down today.
&lt;/p&gt;
&lt;p&gt;
Leah volunteered to drive me around a bit today, and it was great to catch
up with her. I decided to check out a white 2004 Forester that I&#39;d found on
&lt;a href=&quot;http://www.carsales.com.au/&quot;&gt;carsales.com.au&lt;/a&gt; the night before.
&lt;/p&gt;
&lt;p&gt;
I took it for a test drive, and it seemed fine. I transferred my &lt;a href=&quot;http://www.nrma.com.au/&quot;&gt;NRMA&lt;/a&gt;
membership back to the &lt;a href=&quot;http://www.racq.com.au/&quot;&gt;RACQ&lt;/a&gt; and upped
it to something decent, and arranged for them to do an inspection on Monday.
Depending on when the inspection report gets to me, I&#39;ll head back there
with a bank cheque and I&#39;ll have a car.
&lt;/p&gt;
&lt;p&gt;
I had another half-hearted look at furniture after lunch (I really wasn&#39;t
feeling it) and then headed over to Woolloongabba to take a look at the
condition of Sarah&#39;s apartment.
&lt;/p&gt;
&lt;p&gt;
The low light of the day was leaving my packet of car-related paperwork
(including my temporary driver&#39;s licence) on the roof of her car as we left
Woolloongabba. It should only be mildly inconvenient, but I was annoyed with
myself for being so dumb.
&lt;/p&gt;
&lt;p&gt;
Tomorrow should be pretty quiet. I just have my bed getting delivered at
8:30am, then I&#39;ll stay in my apartment from then on. I think I&#39;ll just take
it easy.
&lt;/p&gt; </description> 
	<pubDate>Fri, 05 Apr 2013 02:54:00 +0000</pubDate>

</item> 
<item>
	<title>Andrew Pollock: [life/repatexpat] Day #2 of repatriation</title>
	<guid>http://blog.andrew.net.au/2013/04/04#day2</guid>
	<link>http://blog.andrew.net.au/2013/04/04#day2</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/apollock.png&quot; width=&quot;88&quot; height=&quot;126&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;
This was the first &quot;normal&quot; (i.e. not part of the Easter &quot;long weekend&quot;)
day. As it happened, Easter Monday was surprisingly retail-friendly anyway.
&lt;/p&gt;
&lt;p&gt;
My friend Kristy picked me up in the morning, and we dropped past the real
estate agent for my apartment to see if the tenants had happened to drop the
keys back yet (they hadn&#39;t) and then we went to Ikea and bought a bed for
Zoe a bunch of other random stuff. I also bought a bed frame and mattress
while we were at the neighbouring &lt;a href=&quot;http://public.mirvacretail.com.au/mirvacs/search?site_name=Logan%20MegaCentre&amp;amp;site_id=16&quot;&gt;Logan
MegaCentre&lt;/a&gt; (it&#39;s not a bad shopping
centre)
&lt;/p&gt;
&lt;p&gt;
The bed frame is wooden and is taking 6-8 weeks to be made, so in the
meantime, because I bought a mattress from them, they&#39;re lending me a
mattress base. That&#39;s getting delivered on Saturday.
&lt;/p&gt;
&lt;p&gt;
We then headed over to &lt;a href=&quot;http://www.harveynorman.com.au/&quot;&gt;Harvey
Norman&lt;/a&gt; in Fortitude Valley. We&#39;d just got started there when the real
estate agent called to say the tenants had dropped the keys back, so we
stopped and headed back over to meet the property manager at the apartment
and get the keys.
&lt;/p&gt;
&lt;p&gt;
After that, we headed back to Harvey Norman and bought a fridge, TV, and a
bunch of small appliances, and then headed back to the apartment to do some
Ikea assembly. We&#39;d just about finished putting Zoe&#39;s bed together when we
discovered we&#39;d gotten the wrong width slats for her bed. It turns out there
are two widths of the &quot;Sultan Lade&quot; slats, and they&#39;re right next to each
other in the warehouse. We&#39;d picked up from the correct location, but I
think the piles had become jumbled. Lesson learned: cross check the SKU as
well as the pickup location.
&lt;/p&gt;
&lt;p&gt;
It was a long day, and I was enormously grateful to Kristy for driving me
all over the place, and generally helping me shop. I think it ended up being
a 15 hour day for her.
&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 23:44:00 +0000</pubDate>

</item> 
<item>
	<title>Daniel Silverstone: Adventures in Haskell — LLVM for BF…</title>
	<guid>http://blog.digital-scurf.org/2013/04/04#adventures-llvm-bf</guid>
	<link>http://blog.digital-scurf.org/2013/04/04#adventures-llvm-bf</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/kinnison.png&quot; width=&quot;75&quot; height=&quot;96&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I didn’t publicise it very widely when I uploaded it, but I did an &lt;a href=&quot;http://www.youtube.com/watch?v=G8WW3bGIZFc&quot;&gt;&lt;span class=&quot;caps&quot;&gt;LLVM&lt;/span&gt; compiler for BF&lt;/a&gt; as a Haskell video.  You guys should go learn about Haskell and &lt;span class=&quot;caps&quot;&gt;LLVM&lt;/span&gt;.  &lt;span class=&quot;caps&quot;&gt;YAY&lt;/span&gt;&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 19:43:52 +0000</pubDate>

</item> 
<item>
	<title>Bernhard R. Link: Git package workflows</title>
	<guid>http://blog.brlink.eu/index.html#i62</guid>
	<link>http://blog.brlink.eu/index.html#i62</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/brlink.png&quot; width=&quot;70&quot; height=&quot;98&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Given the recent discussions on &lt;a href=&quot;http://PLAnet.debian.org/&quot;&gt;planet.debian.org&lt;/a&gt; I use the opportunity to describe how you can handle upstream history in a &lt;a href=&quot;http://git-dpm.alioth.debian.org/&quot;&gt;git-dpm&lt;/a&gt; workflow.&lt;/p&gt;
&lt;p&gt;One of the primary points of git-dpm is that you should be able to just check out the Debian branch, get the &lt;tt&gt;.orig.tar&lt;/tt&gt; file(s) (for example using pristine-tar, by &lt;tt&gt;git-dpm prepare&lt;/tt&gt; or by just downloading them) and then calling &lt;tt&gt;dpkg-buildpackage&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Thus the contents of the Debian branch need to be clean from &lt;tt&gt;dpkg-source&lt;/tt&gt;&#39;s point of view, that is do not contain any files the &lt;tt&gt;.orig.tar&lt;/tt&gt; file(s) contains not nor any modified files.
&lt;/p&gt;
&lt;p&gt;&lt;b&gt;The easy way&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;The easiest way to get there is by importing the upstream tarball(s) as a git commit, which one will usually do with &lt;tt&gt;git-dpm import-new-upstream&lt;/tt&gt; as that also does some of the bookkeeping.&lt;/p&gt;
&lt;p&gt;This new git commit will have (by default) the previous upstream commit and any parent you give with &lt;tt&gt;-p&lt;/tt&gt; as parents. (i.e. with &lt;tt&gt;-p&lt;/tt&gt; it will be a merge commit) and its content will be the contents of the tarball (with multiple &lt;tt&gt;orig&lt;/tt&gt; files, it gets more complicated).&lt;/p&gt;
&lt;p&gt;The idea is of course that you give the upstream tag/commit belonging to this release tarball with &lt;tt&gt;-p&lt;/tt&gt; so that it becomes part of your history and so git blame can find those commits.&lt;/p&gt;
&lt;p&gt;Thus you get a commit with the exact orig contents (so pristine-tar can more easily create small deltas) and the history combined.&lt;/p&gt;.
&lt;p&gt;Sometimes there are files in the upstream tarball that you do not want to have in your Debian branch (as you remove them in &lt;tt&gt;debian/rules clean&lt;/tt&gt;), then when using this method you will have those files in the upstream branch but you delete them in the Debian branch. (This is why &lt;tt&gt;git-dpm merge-patched&lt;/tt&gt; (the operation to merge a new branch with upstream + patches with your previous &lt;tt&gt;debian/&lt;/tt&gt; directory) will look which files relative to the previous upstream branch are deleted and delete them also in the newly merged branch by default).
&lt;/p&gt;&lt;p&gt;&lt;b&gt;The complicated way&lt;/b&gt;&lt;/p&gt;
There is only a way without importing the &lt;tt&gt;.orig.tar&lt;/tt&gt; file(s), though that is a bit more complicated: The idea is that if your upstream&#39;s git repository contains all the files needed for building your Debian package (for example if you call &lt;tt&gt;autoreconf&lt;/tt&gt; in your Debian package and clean all the generated files in the clean target, or if upstream has a less sophisticated release process and their .tar contains only stuff from the git repository), you can just use the upstream git commit as base for your Debian branch.&lt;p&gt;
&lt;/p&gt;&lt;p&gt;Thus you can make upstream&#39;s commit/tag your upstream branch, by recording it with &lt;tt&gt;git-dpm new-upstream&lt;/tt&gt; together with the &lt;tt&gt;.orig.tar&lt;/tt&gt; it belongs to (Be careful, git-dpm does not check if that branch contains any files different than your &lt;tt&gt;.orig.tar&lt;/tt&gt; and could not decide if it misses any files you need to build even if it tried to tell).&lt;/p&gt;
&lt;p&gt;Once that is merged with the &lt;tt&gt;debian/&lt;/tt&gt; directory to create the Debian branch, you run &lt;tt&gt;dpkg-buildpackage&lt;/tt&gt;, which will call &lt;tt&gt;dpkg-source&lt;/tt&gt; which compares your working directory with the contents of the &lt;tt&gt;.orig.tar&lt;/tt&gt; with the patches applied. As it will only see files not there but no files modified or added (if everything was done correctly), one can work directly in the git checkout without needing to import the &lt;tt&gt;.orig.tar&lt;/tt&gt; files at all (altough the pristine-tar deltas might get a bit bigger).&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 18:39:37 +0000</pubDate>

</item> 
<item>
	<title>Jon Dowland: awk</title>
	<guid>http://jmtd.net/log/awk/</guid>
	<link>http://jmtd.net/log/awk/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/jmtd.png&quot; width=&quot;65&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Recently, I&#39;ve been using &lt;code&gt;awk&lt;/code&gt; in shell scripts more and more often.&lt;/p&gt;

&lt;p&gt;When I saw &lt;a href=&quot;http://thomas.goirand.fr/blog/?p=94&quot;&gt;Thomas&#39; Blog&lt;/a&gt; I reeled a bit
from of the &lt;code&gt;make&lt;/code&gt;/&lt;code&gt;shell&lt;/code&gt; quoted within. (Sorry Thomas! It&#39;s still a thought
provoking blog post):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEBVERS         ?= $(shell dpkg-parsechangelog | sed -n -e &#39;s/^Version: //p&#39;)
VERSION         ?= $(shell echo &#39;$(DEBVERS)&#39; | sed -e &#39;s/^[\[:digit:]]*://&#39; -e &#39;s/[-].*//&#39;)
DEBFLAVOR       ?= $(shell dpkg-parsechangelog | grep -E ^Distribution: | cut -d&quot; &quot; -f2)
DEBPKGNAME      ?= $(shell dpkg-parsechangelog | grep -E ^Source: | cut -d&quot; &quot; -f2)
DEBIAN_BRANCH   ?= $(shell cat debian/gbp.conf | grep debian-branch | cut -d&#39;=&#39; -f2 | awk &#39;{print $1}&#39;)
GIT_TAG         ?= $(shell echo &#39;$(VERSION)&#39; | sed -e &#39;s/~/_/&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I couldn&#39;t help but re-write it to be more efficient (and in the case of
&lt;code&gt;DEBIAN_BRANCH&lt;/code&gt;, more correct):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEBVERS        := $(shell dpkg-parsechangelog | awk &#39;/^Version:/ {print $$2}&#39;)
VERSION        := $(shell echo &#39;$(DEBVERS)&#39; | sed -e &#39;s/^[0-9]*://&#39; -e &#39;s/-.*//&#39;)
DEBFLAVOR      := $(shell dpkg-parsechangelog | awk &#39;/^Distribution:/ {print $$2}&#39;)
DEBPKGNAME     := $(shell dpkg-parsechangelog | awk &#39;/^Source:/ {print $$2}&#39;)
DEBIAN_BRANCH  := $(shell awk &#39;BEGIN{FS=&quot;[= ]+&quot;} /debian-branch/ {print $$2}&#39; debian/gbp.conf)
GIT_TAG        := $(subst ~,_,$(VERSION))
&lt;/code&gt;&lt;/pre&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 16:21:25 +0000</pubDate>

</item> 
<item>
	<title>Martin Pitt: Urgent PostgreSQL security updates for Debian/Ubuntu</title>
	<guid>http://www.piware.de/?p=869</guid>
	<link>http://www.piware.de/2013/04/urgent-postgresql-security-updates-for-debianubuntu/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/pitti.png&quot; width=&quot;74&quot; height=&quot;98&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;PostgreSQL just released &lt;a href=&quot;http://www.postgresql.org/about/news/1456/&quot;&gt;security updates&lt;/a&gt;. 9.1 (as found in Debian testing and unstable and Ubuntu 11.10 and later) is affected by a critical remote vulnerability which potentially allows anyone who can access the TCP port (without credentials) to corrupt local files. If your PostgreSQL database exposes the TCP port to any potentially untrusted location, please shut down your servers and update &lt;strong&gt;now&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;PostgreSQL 8.4 for Debian stable (squeeze) and Ubuntu 8.04 LTS and 10.04 LTS also got an update, but these are much less urgent.&lt;/p&gt;
&lt;p&gt;Debian and Ubuntu advisories for all stable releases, as well as Debian testing are going out as we speak. The updates are already on &lt;code&gt;security.debian.org&lt;/code&gt; and &lt;code&gt;security.ubuntu.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I also uploaded updates for Debian unstable (8.4, 9.1, and 9.2 in experimental) and the &lt;a href=&quot;https://launchpad.net/~pitti/+archive/postgresql&quot;&gt;Ubuntu backports PPA&lt;/a&gt;, but it will take a bit for these to build as we don’t have embargoed staging builds for those. Christoph updated the &lt;code&gt;apt.postgresql.org&lt;/code&gt; repository as well.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; If you use the current Ubuntu raring Beta-2 candidate images, you will still have the old version. So if you do anything serious with those installations, please make sure to upgrade immediately.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Debian and Ubuntu security announcements have been sent out, and all packages in the backports PPA are built.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href=&quot;http://www.postgresql.org/support/security/faq/2013-04-04/&quot;&gt;official FAQ&lt;/a&gt; if you want to know some more details about the nature of the vulnerabilities.&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 14:41:01 +0000</pubDate>

</item> 
<item>
	<title>Daniel Pocock: Comparing packaging workflows in Debian and beyond</title>
	<guid>http://danielpocock.com/42 at http://danielpocock.com</guid>
	<link>http://danielpocock.com/comparing-packaging-workflows-in-debian-and-beyond</link>
     <description>  &lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;My blog post yesterday about &lt;a href=&quot;http://danielpocock.com/autotools-project-distribution-and-packaging-on-debian&quot;&gt;Debian&#39;s git packaging workflows&lt;/a&gt; was meant to help fill some gaps in the documentation of this process, one of the most significant being the diagram.&lt;/p&gt;
&lt;p&gt;I was surprised to find that some people felt my post argues that distribution tarballs are a must-have or that separate repositories are the optimal solution.  In fact, my post was more a reflection of how things are being done, and it is great to see contributions from &lt;a href=&quot;http://joeyh.name/blog/entry/upstream_git_repositories/&quot;&gt;Joey&lt;/a&gt;, &lt;a href=&quot;http://www.eyrie.org/~eagle/journal/2013-04/001.html&quot;&gt;Russ&lt;/a&gt; and &lt;a href=&quot;http://thomas.goirand.fr/blog/?p=94&quot;&gt;Thomas&lt;/a&gt; proposing ways to integrate the workflow in a single repository and also raising questions about the future of tarballs.  Some of the changes outlined by Russ only entered the tools after many people were already using the workflow I have described.&lt;/p&gt;
&lt;p&gt;Given the rise of collaboration, through &lt;a href=&quot;http://alioth.debian.org/projects/collab-maint/&quot;&gt;collab-maint&lt;/a&gt; and packaging teams, it is more important than ever that workflows and tools are easily understood and documented.  This lets new contributors (including people new to Debian) jump in more quickly and with less risk of disruption.  It would be great to see some of these latest ideas covered more thoroughly with diagrams and I&#39;m happy for people to rip-off my &lt;a href=&quot;http://danielpocock.com/sites/danielpocock.com/files/release-packaging-workflow.dia&quot;&gt;dia source file&lt;/a&gt; for my own diagram and amend it as they please (under the generous terms of the GPL v3)&lt;/p&gt;
&lt;h3&gt;A look at other packaging systems&lt;/h3&gt;
&lt;p&gt;With the role of the tarball in people&#39;s sights, it&#39;s worth looking outside Debian for a moment:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;b&gt;Android&lt;/b&gt; packaging is radically different.  All packages have a single integer version number.  The pretty version number displayed to the user is meaningless.  Due to the continuously increasing integer version, and the way that database schemas are versioned, it is not really possible to even keep multiple release branches in a repository.  For an example, see the version in the &lt;a href=&quot;http://www.lumicall.org&quot;&gt;Lumicall&lt;/a&gt; &lt;a href=&quot;https://github.com/opentelecoms-org/lumicall/blob/master/AndroidManifest.xml&quot;&gt;AndroidManifest.xml&lt;/a&gt; and the &lt;a href=&quot;https://github.com/opentelecoms-org/lumicall/blob/master/src/org/lumicall/android/db/DatabaseHelper.java#L29&quot;&gt;database upgrade function&lt;/a&gt;.  Google Play/Android Market makes no rules about how a project manages its code.  &lt;a href=&quot;http://f-droid.org&quot;&gt;f-droid&lt;/a&gt;, the open source market for apps, builds projects like Lumicall directly from git, it relies on them having an ant build file in the standard format generated by the SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.opencsw.org&quot;&gt;&lt;b&gt;OpenCSW&lt;/b&gt;&lt;/a&gt; does not keep upstream tarballs at all.  They keep a single git repository for tracking all packages.  Each package is built from a Makefile (&lt;a href=&quot;http://sourceforge.net/apps/trac/gar/browser/csw/mgar/pkg/ganglia/trunk/Makefile&quot;&gt;sample&lt;/a&gt;), and their tool suite takes care of downloading the upstream sources (using a URL specified in the Makefile) and verifying against checksums tracked in the repository (&lt;a href=&quot;http://sourceforge.net/apps/trac/gar/browser/csw/mgar/pkg/ganglia/trunk/checksums&quot;&gt;sample&lt;/a&gt;).  The common style of the Makefiles makes it very easy for somebody familiar with the tools to work on just about any of the packages, and anybody who knows how to write a Makefile can start quickly.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Of course, these are just a few examples.  These days, software is distributed in many different ways, whether it is a runnable VM image or an embedded device implanted during surgery.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 14:00:51 +0000</pubDate>

</item> 
<item>
	<title>Hideki Yamane: waagent_1.2-1_amd64.changes ACCEPTED into unstable</title>
	<guid>tag:blogger.com,1999:blog-908933936314756945.post-4787604560720786219</guid>
	<link>http://henrich-on-debian.blogspot.com/2013/04/waagent12-1amd64changes-accepted-into.html</link>
     <description>  &lt;div style=&quot;text-align: left;&quot; dir=&quot;ltr&quot;&gt;Thank you, ftpmasters.&lt;br /&gt;&lt;br /&gt;waagent (&lt;a href=&quot;https://github.com/Windows-Azure/WALinuxAgent&quot; target=&quot;_blank&quot;&gt;Windows Azure Linux Agent&lt;/a&gt;) hits Debian repository now... Yes, &quot;Windows Azure&quot; is cloud computing service provided by Microsoft.&lt;/div&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 13:11:10 +0000</pubDate>
  <author>noreply@blogger.com (Hideki Yamane)</author>  
</item> 
<item>
	<title>Thomas Goirand: Git packaging workflow</title>
	<guid>http://thomas.goirand.fr/blog/?p=94</guid>
	<link>http://thomas.goirand.fr/blog/?p=94</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/zigo.png&quot; width=&quot;65&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Seeing what has been posted recently in planet.d.o, I would like to share as well my thoughts and work-flow, and tell that I do agree with Joey Hess on many of his arguments. Especially when he tells that Debian fetishises upstream tarballs. We’re in 2013, at the age of Internet, and more and more upstream authors are using Git, and more and more they don’t care about releasing tarballs. I’ve seen some upstream authors who simply stopped doing so completely, as a Git tag is really enough. I also fully agree than disk space and network speed isn’t much of a problem these days.&lt;/p&gt;
&lt;p&gt;When there are tags available, I use the following debian/gbp.conf:&lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;[DEFAULT]
upstream-branch = master
debian-branch = debian
upstream-tag = %(version)s
compression = xz

[git-buildpackage]
export-dir = ../build-area/&lt;/pre&gt;
&lt;p&gt;On many of my packages, I now just use Git tags from upstream if they are available. To make it more easy, I now nearly always use the following piece of code in my debian/rules files:&lt;/p&gt;
&lt;pre class=&quot;brush:shell&quot;&gt;DEBVERS         ?= $(shell dpkg-parsechangelog | sed -n -e &#39;s/^Version: //p&#39;)
VERSION         ?= $(shell echo &#39;$(DEBVERS)&#39; | sed -e &#39;s/^[[:digit:]]*://&#39; -e &#39;s/[-].*//&#39;)
DEBFLAVOR       ?= $(shell dpkg-parsechangelog | grep -E ^Distribution: | cut -d&quot; &quot; -f2)
DEBPKGNAME      ?= $(shell dpkg-parsechangelog | grep -E ^Source: | cut -d&quot; &quot; -f2)
DEBIAN_BRANCH   ?= $(shell cat debian/gbp.conf | grep debian-branch | cut -d&#39;=&#39; -f2 | awk &#39;{print $1}&#39;)
GIT_TAG         ?= $(shell echo &#39;$(VERSION)&#39; | sed -e &#39;s/~/_/&#39;)

get-upstream-sources:
        git remote add upstream git://git.example.org/proj/foo.git || true
        git fetch upstream
        if ! git checkout master ; then \
                echo &quot;No upstream branch: checking out&quot; ; \
                git checkout -b master upstream/master ; \
        fi
        git checkout $(DEBIAN_BRANCH)

make-orig-file:
        if [ ! -f ../$(DEBPKGNAME)_$(VERSION).orig.tar.xz ] ; then \
                git archive --prefix=$(DEBPKGNAME)-$(GIT_TAG)/ $(GIT_TAG) | xz &amp;gt;../$(DEBPKGNAME)_$(VERSION).orig.tar.xz ; \
        fi
        [ ! -e ../build-area ] &amp;amp;&amp;amp; mkdir ../build-area || true
        [ ! -e ../build-area/$(DEBPKGNAME)_$(VERSION).orig.tar.xz ] &amp;amp;&amp;amp; cp ../$(DEBPKGNAME)_$(VERSION).orig.tar.xz ../build-area || true&lt;/pre&gt;
&lt;p&gt;Packaging a new upstream VERSION now means that I only have to edit the debian/changelog, do ./debian/rules get-upstream-source so that I get new commits and tags, then “git merge -X theirs VERSION” to import the changes, then finally invoke ./debian/rules make-orig-file to create the orig.tar.xz. My debian branch is now ready for git-buildpackage. Note that the sed with the GIT_TAG thing is there because unfortunately, Git doesn’t support the ~ char in tags, and that most of the time, upstream do not use _ in version numbers. Let’s say upstream is releasing version 1.2.3rc1, then I simply do “git tag 1.2.3_rc1 1.2.3rc1″ so that I have a new tag which points to the same commit as 1.2.3rc1, but that can be used for the Debian 1.2.3~rc1-1 release and the make-orig-file.&lt;/p&gt;
&lt;p&gt;All this might looks overkill at first, but in fact it is really convenient and efficient. Also, even though there is a master branch above, it isn’t needed to build the package. Git is smarter than this, so even if you haven’t checked out upstream master branch from the “upstream” remote, make-orig-file and git-buildpackage will simply continue to work. Which is cool, because this means you can store a single branch on Alioth (which is what I do).&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 11:31:03 +0000</pubDate>

</item> 
<item>
	<title>Michal &amp;#268;iha&amp;#345;: phpMyAdmin translations status</title>
	<guid>http://blog.cihar.com/archives/2013/04/04/phpmyadmin-translations-status/?utm_source=rss2</guid>
	<link>http://blog.cihar.com/archives/2013/04/04/phpmyadmin-translations-status/?utm_source=rss2</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/nijel.png&quot; width=&quot;64&quot; height=&quot;67&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;&lt;a href=&quot;http://www.phpmyadmin.net/&quot;&gt;phpMyAdmin&lt;/a&gt; 4.0-rc1 is out and it&#39;s really time to work on &lt;a href=&quot;https://l10n.cihar.com/projects/phpmyadmin/master/&quot;&gt;translations&lt;/a&gt; if you want them to be ready for final release..&lt;/p&gt;
&lt;p&gt;So let&#39;s look at which &lt;a href=&quot;https://l10n.cihar.com/projects/phpmyadmin/master/&quot;&gt;translations&lt;/a&gt; are at 100% right now (new ones are bold):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/ca/&quot;&gt;Catalan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/cs/&quot;&gt;Czech&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/da/&quot;&gt;Danish&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/nl/&quot;&gt;Dutch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/en_GB/&quot;&gt;English (United Kingdom)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/et/&quot;&gt;Estonian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/fr/&quot;&gt;French&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/el/&quot;&gt;Greek&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/pt_BR/&quot;&gt;Portuguese (Brazil)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/es/&quot;&gt;Spanish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/sv/&quot;&gt;Swedish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/tr/&quot;&gt;Turkish&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost complete:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/gl/&quot;&gt;Galician&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/de/&quot;&gt;German&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/pl/&quot;&gt;Polish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/ru/&quot;&gt;Russian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/zh_CN/&quot;&gt;Simplified Chinese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://l10n.cihar.com/engage/phpmyadmin/sl/&quot;&gt;Slovenian&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As you can see, there is still lot of languages missing, this might be your opportunity to &lt;a href=&quot;http://www.phpmyadmin.net/home_page/improve.php#translate&quot;&gt;contribute to phpMyAdmin&lt;/a&gt;. Also you are welcome to translate &lt;a href=&quot;https://l10n.cihar.com/projects/phpmyadmin/master/&quot;&gt;phpMyAdmin 4.0 using translation server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If your language is already fully translated and you want to help as well, you can translate our &lt;a href=&quot;https://l10n.cihar.com/projects/phpmyadmin/documentation/&quot;&gt;documentation&lt;/a&gt; as well.&lt;/p&gt;

&lt;p style=&quot;font-size: smaller;&quot;&gt;
Filed under: 


&lt;a href=&quot;http://blog.cihar.com/archives/english/&quot;&gt;English&lt;/a&gt;

&lt;a href=&quot;http://blog.cihar.com/archives/phpmyadmin/&quot;&gt;Phpmyadmin&lt;/a&gt;

|

&lt;a href=&quot;http://blog.cihar.com/archives/2013/04/04/phpmyadmin-translations-status/#comments&quot;&gt;0 comments&lt;/a&gt;
|
&lt;a href=&quot;https://flattr.com/submit/auto?user_id=nijel&amp;amp;url=http://blog.cihar.com/archives/2013/04/04/phpmyadmin-translations-status/&amp;amp;title=Michal Čihař: phpMyAdmin translations status&amp;amp;description=phpMyAdmin 4.0-rc1 is out and it&#39;s really time to work on translations if you want them to be ready for final release..&amp;amp;language=en_GB&amp;amp;tags=blog,english,phpmyadmin&amp;amp;category=text&quot;&gt;Flattr this!&lt;/a&gt;
&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 10:00:00 +0000</pubDate>
  <author>michal@cihar.com (Michal Čihař)</author>  
</item> 
<item>
	<title>Bits from Debian: Improvements in Debian&#39;s core infrastructure</title>
	<guid>tag:bits.debian.org,2013-04-04:2013/04/bytemark-donation.html</guid>
	<link>http://bits.debian.org/2013/04/bytemark-donation.html</link>
     <description>  &lt;p&gt;Thanks to a generous donation by &lt;a href=&quot;http://bytemark.co.uk&quot; title=&quot;Bytemark Hosting&quot;&gt;Bytemark Hosting&lt;/a&gt;, Debian
started deploying machines for its core infrastructure services in a
new data center in York, UK.&lt;/p&gt;
&lt;p&gt;This hardware and hosting donation will allow the &lt;a href=&quot;http://dsa.debian.org&quot; title=&quot;Debian Systems Administration (DSA) team&quot;&gt;Debian Systems
Administration (DSA) team&lt;/a&gt; to distribute Debian&#39;s core services across a
greater number of geographically diverse locations, and improve, in
particular, the fault-tolerance and availability of end-user facing services.
Additionally, the storage component of this donation will dramatically reduce
the storage challenges that Debian currently faces.&lt;/p&gt;
&lt;p&gt;The hardware provided by &lt;a href=&quot;http://bytemark.co.uk&quot; title=&quot;Bytemark Hosting&quot;&gt;Bytemark Hosting&lt;/a&gt; consists of a fully-populated
&lt;a href=&quot;http://h18004.www1.hp.com/products/blades/components/enclosures/c-class/c7000/&quot;&gt;HP C7000 BladeSystem chassis&lt;/a&gt; containing 16 server blades:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;12 BL495cG5 blades with 2x Opteron 2347 and 64GB RAM each&lt;/li&gt;
&lt;li&gt;4 BL465cG7 blades with 2x Opteron 6100 series and 128GB RAM each&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and several HP Modular Storage Arrays:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 MSA2012sa&lt;/li&gt;
&lt;li&gt;6 MSA2000 expansion shelves&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with 108 drive bays in total, mostly 500GB SATA drives, some 2TB, some 600GB
15kRPM SAS, providing a total of 57 TB.&lt;/p&gt;
&lt;p&gt;57 TB today could host roughly 80 times the current &lt;a href=&quot;http://www.debian.org/mirror/size&quot;&gt;Debian
archive&lt;/a&gt; or 3 times
the &lt;a href=&quot;http://snapshot.debian.org/&quot;&gt;Debian Snapshot&lt;/a&gt; archive. But remember both archives are constantly growing!&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 08:00:00 +0000</pubDate>

</item> 
<item>
	<title>Russ Allbery: Debian packaging of Git upstreams</title>
	<guid>http://www.eyrie.org/~eagle/journal/2013-04/001.html</guid>
	<link>http://www.eyrie.org/~eagle/journal/2013-04/001.html</link>
     <description>  &lt;p&gt;
Since there&#39;s a discussion of packaging software for Debian that uses Git
upstream on Planet Debian
&lt;a href=&quot;http://danielpocock.com/autotools-project-distribution-and-packaging-on-debian&quot;&gt;right&lt;/a&gt;
&lt;a href=&quot;http://joeyh.name/blog/entry/upstream_git_repositories/&quot;&gt;now&lt;/a&gt;, I
wanted to weigh in and advocate for my current workflow for this
situation, which I&#39;m quite fond of.  It&#39;s worth noting that I&#39;m also
upstream for quite a few of the packages I maintain, all in Git, and I use
(almost) exactly the same structure for packaging my own software as for
packaging anyone else&#39;s.  So I have some experience with both sides of
this.
&lt;/p&gt;

&lt;p&gt;
First off, I completely agree with Joey: if upstream is already using Git,
there&#39;s no reason not to base the Debian packaging on the upstream
repository, and many, many reasons to do so.  One of the biggest
advantages is that when repositories share a common basis and have been
regularly merged, you can easily cherry-pick commits, which is wonderful
for security releases and situations where you need a quick bug fix from
an unreleased upstream branch.  I make very heavy use of this when
packaging OpenAFS.
&lt;/p&gt;

&lt;p&gt;
I do, however, like to base the Debian packaging on the released tarball,
if for no other reason than that&#39;s the artifact that other people can more
easily confirm.  Yes, you can do the same thing with a Git tag, but the
tarball is what upstream considers a release, so if one is available, I
think it makes the most sense to base the packaging on it.  I do this even
for my own software.
&lt;/p&gt;

&lt;p&gt;
Thankfully, it&#39;s not that difficult to do both.  Sam Hartman was the one
who showed me this technique, and (after I used a manual script for some
time for a couple of packages) Guido Günther incorporated the support into
git-import-orig.  The key idea is to still import the tarball into the
upstream branch, but instead of making that import a simple commit, you
make it a merge commit referencing the upstream release tag or commit from
their Git repository.
&lt;/p&gt;

&lt;p&gt;
This means that you still get the exact contents of the release tarball on
the upstream branch (and pristine-tar works as normal), but that branch is
also based on the full upstream line of development.  Therefore, so is
your packaging branch (master or what have you) since you merge upstream
into it.  You can then charry-pick and take advantage of all of the normal
Git features when following upstream development.
&lt;/p&gt;

&lt;p&gt;
This is dead simple to do with git-import-orig.  Just add the upstream
repository as a remote for your Git repository, make sure it&#39;s up to date
with &lt;code&gt;git fetch&lt;/code&gt; and you have the upstream tags, and then pass the
flag &lt;code&gt;--upstream-vcs-tag &amp;lt;tag&amp;gt;&lt;/code&gt; to git-import-orig whenever importing
the upstream release tarball.  git-import-orig will handle the
construction of the merge commit for you and everything will just work,
exactly like it normally does with git-buildpackage except with a more
complete history.
&lt;/p&gt;

&lt;p&gt;
This support was added in git-buildpackage 0.6.0~git20120324, so it&#39;s
available in unstable and testing.
&lt;/p&gt;

&lt;p&gt;
(I was going to update my &lt;a href=&quot;http://www.eyrie.org/~eagle/notes/debian/git.html&quot;&gt;notes on
Debian packaging with Git&lt;/a&gt; to include this information before posting
this, but I see that it will require some restructuring and quite a few
changes to that document and I don&#39;t have time tonight.  Hopefully soon.)
&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 05:55:00 +0000</pubDate>

</item> 
<item>
	<title>Andrew Pollock: [life/repatexpat] Day #4 of repatriation -- delivery central</title>
	<guid>http://blog.andrew.net.au/2013/04/04#day4</guid>
	<link>http://blog.andrew.net.au/2013/04/04#day4</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/apollock.png&quot; width=&quot;88&quot; height=&quot;126&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;
Today was spent at my apartment with Zoe. Harvey Norman were scheduled to
deliver the fridge, washing machine and TV. Someone from Telstra was
scheduled to come out and monkey with the MDF to get the naked ADSL
happening, and my desk was scheduled to be delivered.
&lt;/p&gt;
&lt;p&gt;
My parents drove us over in the morning, with some of our suitcases. Zoe was
very happy with her new room and bed.
&lt;/p&gt;
&lt;p&gt;
I was going to get a 1 hour advance warning of Harvey Norman coming, so we
all went for a little walk around the neighbourhood to explore. It turns out
there&#39;s a convenience store right next door, which is, well extremely
convenient. I won&#39;t need to even hop in the car to get last minute bread or
milk or anything like that. Very happy about that. There&#39;s also a really
gorgeous little &lt;a href=&quot;http://www.hawthornegarage.com.au/&quot;&gt;boutique
deli/gourmet grocery&lt;/a&gt; that is easily within walking distance. The
neighbourhood is indeed very nice.
&lt;/p&gt;
&lt;p&gt;
Mid-morning, Brent dropped around with his daughter to say hi. Zoe had a
good time playing with her as well, and we went out for lunch at the
Hawthorne Garage. At the end of lunch, Harvey Norman called to say they&#39;d be
an hour away, which was well timed.
&lt;/p&gt;
&lt;p&gt;
Zoe declined to nap again, so we just hung out waiting for the delivery. In
the middle of them delivering, the desk delivery happened as well, and then
as Brent was leaving, the Telstra guy turned up, so it all happened at once.
&lt;/p&gt;
&lt;p&gt;
I set up the TV and DVD player and Zoe happily christened it all by watching
some Play School DVDs, and then my Dad came back and picked us up.
&lt;/p&gt;
&lt;p&gt;
So the apartment is now almost habitable. I just need my bed. That&#39;s
scheduled for Saturday. I&#39;m planning on sleeping there on Saturday night.
&lt;/p&gt;
&lt;p&gt;
In the furniture department, I&#39;m still lacking a sofa, a dining table and
something to put the TV on. Leah has volunteered to help me shop tomorrow,
but I&#39;m starting to think I should focus on resolving the lack of a car,
then I can do any further shopping myself.
&lt;/p&gt;
&lt;p&gt;
Nick had set me up with a car wholesaler who was going to search for a used
Subaru Forester for me, but so far he hasn&#39;t turned anything up, so I&#39;m
thinking I need to widen my net a little and use some other avenues as well.
I&#39;d really wanted for the car finding to be outsourced as much as possible
so I could focus on other things, but it&#39;s not looking like that&#39;s going to
be the case, and I really need mobility.
&lt;/p&gt;
&lt;p&gt;
I got a notification from Internode after I&#39;d left today that the Internet
should now be working, so I need to configure the ADSL router when I next
get a chance and confirm that&#39;s the case, then I&#39;m all sorted for being
technologically able to work from home.
&lt;/p&gt; </description> 
	<pubDate>Thu, 04 Apr 2013 02:54:00 +0000</pubDate>

</item> 
<item>
	<title>Sylvain Le Gall: Sekred a password helper for puppet.</title>
	<guid>urn:md5:039276d635d27ef047f758fe5ccf0999</guid>
	<link>http://le-gall.net/sylvain+violaine/blog/index.php?post/2013/04/01/Sekred-a-password-helper-for-puppet.</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/gildor.png&quot; width=&quot;65&quot; height=&quot;81&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Puppet is a nice tool but it has a significant problem with passwords:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it is recommended to store puppet manifests (*.pp) and related files in a VCS (i.e. git)&lt;/li&gt;
&lt;li&gt;it is not recommended to store password in a VCS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This lead to complex situation and various workaround that more or less work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;serve password in a separate file/DB or do an &lt;em&gt;extlookup&lt;/em&gt; on the master (pre-set passwords)&lt;/li&gt;
&lt;li&gt;store password on the server and get them through a &lt;em&gt;generate&lt;/em&gt; function (random password but on the master)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these workarounds are complex, don&#39;t allow you to share the password you have set easily and most of the time are stored in another place than the target node.&lt;/p&gt;


&lt;p&gt;So I have decided to create my own solution: &lt;strong&gt;&lt;a href=&quot;http://forge.ocamlcore.org/projects/sekred/&quot;&gt;sekred&lt;/a&gt;&lt;/strong&gt; (LGPL-2.1).&lt;/p&gt;


&lt;p&gt;The idea of sekred is to generate the password on the target node and made it available to the user that needs it. Then the user just have to &lt;em&gt;ssh&lt;/em&gt; into the host and get the password.&lt;/p&gt;


&lt;p&gt;Pro:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the password is generated and stored on the node&lt;/li&gt;
&lt;li&gt;no VCS commit of your password&lt;/li&gt;
&lt;li&gt;no DB storage of your password beside the local filesystem of the host&lt;/li&gt;
&lt;li&gt;no need to use a common pre-set password for all you host, the password is randomly generated for only one host&lt;/li&gt;
&lt;li&gt;to steal the password you need to crack the host first but if you have root access on the host, accessing a random generated password is pointless&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the password is stored in clear text&lt;/li&gt;
&lt;li&gt;the password is only protected by the filesystem ACL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let see some concrete examples.&lt;/p&gt;


&lt;h2&gt;Setting mysql root password&lt;/h2&gt;


&lt;p&gt;This is a very simple problem. When you first install mysql on Debian Squeeze, the root password is not set. That&#39;s bad. Let set it using sekred and puppet.&lt;/p&gt;

&lt;pre&gt;node &quot;mysqlserver&quot; {

  package {
    [&quot;mysql-server&quot;,
     &quot;mysql-client&quot;,
     &quot;sekred&quot;]:
      ensure =&amp;gt; installed;
  }

  service {
    &quot;mysqld&quot;:
      name =&amp;gt; &quot;mysql&quot;,
      ensure =&amp;gt; running,
      hasrestart =&amp;gt; true,
      hasstatus =&amp;gt; true;
  }

  exec {
    &quot;mysql-set-root-password&quot;:
      command =&amp;gt; &quot;mysqladmin -u root password $(sekred get root@mysql)&quot;,
      onlyif =&amp;gt; &quot;mysql -u root&quot;,  # Trigger only if password-less root account.
      require =&amp;gt; [Service[&quot;mysqld&quot;], Package[&quot;mysql-client&quot;, &quot;sekred&quot;]];
  }
}
&lt;/pre&gt;


&lt;p&gt;And to get the root password for mysql, just login into the node &quot;mysqlserver&quot;:&lt;/p&gt;
&lt;pre&gt;$&amp;gt; sekred get root@mysql
Cie8ieza
&lt;/pre&gt;


&lt;h2&gt;Setting password for SSH-only user&lt;/h2&gt;


&lt;p&gt;This example is quite typical of the broken fully automated scenario with passwords:
- you setup a remote host only accessible through SSH
- you create a user and set its SSH public key to authorize access
- your user &lt;strong&gt;cannot&lt;/strong&gt; access its account because SSH prevent password-less account login!&lt;/p&gt;


&lt;p&gt;In other word, you need to login into the node, set a password for the user and mail him back.... That defeats a little bit the &quot;automation&quot; provided by puppet.&lt;/p&gt;


&lt;p&gt;Here is what I do with sekred:&lt;/p&gt;

&lt;pre&gt;define user::template () {
  user {
    $name:
      ensure =&amp;gt; present,
      membership =&amp;gt; minimum,
      shell =&amp;gt; &quot;/bin/bash&quot;,
      ....
  }
  include &quot;ssh_keys::$name&quot;

  # Check password less account and set one, if required.
  $user_passwd=&quot;$(sekred get --uid $name $name@login)&quot;
  exec {
    &quot;user-set-default-password-$name&quot;:
      command =&amp;gt; &quot;echo $name:$user_passwd | chpasswd&quot;,
      onlyif =&amp;gt; &quot;test \&quot;$(getent shadow $name | cut -f2 -d:)\&quot; = \&quot;!\&quot;&quot;,
      require =&amp;gt; [User[$name], Package[&quot;sekred&quot;]];
  }
}
&lt;/pre&gt;


&lt;p&gt;So the command &lt;em&gt;&quot;test \&quot;$(getent shadow $name | cut -f2 -d:)\&quot; = \&quot;!\&quot;&quot;&lt;/em&gt; test for a password-less account. If this is the case, it creates a password using &lt;em&gt;sekred get --uid $name $name@login&lt;/em&gt; and set it through &lt;em&gt;chpasswd&lt;/em&gt;.&lt;/p&gt;


&lt;p&gt;Note that &lt;em&gt;$user_passwd&lt;/em&gt; use a shell expansion that will be evaluated when running the command only, on the host. The &lt;em&gt;--uid&lt;/em&gt; flag of sekred assign the ownership of the password to the given user id.&lt;/p&gt;


&lt;p&gt;So now the user (foo) can login into the node and retrieve its password using &lt;em&gt;sekred get foo@login&lt;/em&gt;.&lt;/p&gt;


&lt;h2&gt;Try it!&lt;/h2&gt;


&lt;p&gt;Sekred was a very short project but I am pretty happy with it. It solves a long standing problem and helps to cover an extra mile of automation when setting up new nodes.&lt;/p&gt;


&lt;p&gt;The homepage is &lt;a href=&quot;http://forge.ocamlcore.org/projects/sekred/&quot; title=&quot;here&quot;&gt;here&lt;/a&gt; and you can download it &lt;a href=&quot;http://forge.ocamlcore.org/frs/?group_id=331&quot; title=&quot;here&quot;&gt;here&lt;/a&gt;. Feel free to send patches, bugs and feature requests (&lt;a href=&quot;http://forge.ocamlcore.org/tracker/?group_id=331&quot;&gt;here, login required&lt;/a&gt;).&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 23:31:44 +0000</pubDate>

</item> 
<item>
	<title>Jonas Smedegaard: Debian Pure Blends - Creating sustainable hacks</title>
	<guid>http://dr.jones.dk//blends/paris/</guid>
	<link>http://dr.jones.dk//blends/paris/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/js.png&quot; width=&quot;61&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Today Thursday April 4th I give a talk at &lt;a href=&quot;https://distro-recipes.org/en/&quot;&gt;Distro-recipes&lt;/a&gt; in Paris
about &lt;a href=&quot;http://wiki.debian.org/DebianPureBlends&quot; title=&quot;Debian Pure Blends&quot;&gt;Debian Pure Blends&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dr.jones.dk/blends/talk/paris&quot;&gt;Slides&lt;/a&gt; and &lt;a href=&quot;http://source.jones.dk/?p=jones/content.git;a=blob;f=blends/talk/paris.mkd&quot;&gt;sources&lt;/a&gt; for them.&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 22:46:29 +0000</pubDate>

</item> 
<item>
	<title>Luke Faraone: Teaching free/open source to high school students</title>
	<guid>tag:blogger.com,1999:blog-1354659632607599854.post-6560709913846522046</guid>
	<link>http://blog.luke.wf/2013/04/spark-freeculture-class.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/lfaraone-mini.png&quot; width=&quot;65&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  A few weeks ago I taught a class on &lt;i&gt;Open Source: Contributing to free culture&lt;/i&gt; (&lt;a href=&quot;https://esp.mit.edu/teach/Spark/2013/catalogpreview/7183&quot;&gt;catalog entry&lt;/a&gt;) for &lt;a href=&quot;http://esp.mit.edu/learn/Spark/index.html&quot;&gt;Spark&lt;/a&gt;, a one-day program put on by the student-run MIT &lt;a href=&quot;http://esp.mit.edu/&quot;&gt;Educational Studies Program&lt;/a&gt;. I was fortunate to have two helpful co-teachers, &lt;a href=&quot;http://hallada.net/&quot;&gt;Tyler Hallada&lt;/a&gt; and &lt;a href=&quot;http://mit.edu/jhurwitz/www/&quot;&gt;Jacob Hurwitz&lt;/a&gt;, who assisted with the lesson plan and the in class lecture.&lt;br /&gt;&lt;br /&gt;We ended up teaching 3 sessions of the 1hr 50min class that Saturday, with about 10 students in each session.&lt;br /&gt;&lt;br /&gt;I was pretty impressed by the quality of the students; a number of them had used &lt;a href=&quot;https://www.gnu.org/gnu/linux-and-gnu.html&quot;&gt;GNU/Linux&lt;/a&gt; before, but even those who hadn&#39;t were able to gain something from the experience. The class was broken up into three segments:&lt;br /&gt;&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Lecture on a brief history of open source and the free software movement&lt;/li&gt;&lt;li&gt;Small research project on an open source project&lt;/li&gt;&lt;li&gt;Lab where students could work through &lt;a href=&quot;https://openhatch.org/missions/&quot;&gt;OpenHatch&#39;s training missions&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;div&gt;The point was to mix up what could otherwise be a very boring lecture.&lt;br /&gt;&lt;br /&gt;I think we might have missed the mark on the last bit, as I get the feeling that we didn&#39;t end up giving the students good actionables. While the quality of OpenHatch is high and the organization&#39;s &lt;a href=&quot;http://campus.openhatch.org/&quot;&gt;campus outreach&lt;/a&gt; programs are amazing, skills practice only goes so far without clear direction to apply said skills. I&#39;ll be following up with the class participants to see how they&#39;re progressing on their own open source contributor journey, and will post updates if I have any.&lt;br /&gt;&lt;br /&gt;While not an OpenHatch event, if this sort of thing interests you, OpenHatch runs &lt;a href=&quot;http://openhatch.org/events/&quot;&gt;a series of events&lt;/a&gt; like this one and has a &lt;a href=&quot;http://lists.openhatch.org/mailman/listinfo/events&quot;&gt;mailing list&lt;/a&gt; for discussing planning and sharing best practices. Subscribe and say hi!&lt;br /&gt;&lt;br /&gt;The presentation is enclosed below, and of course is licensed under &lt;a href=&quot;https://creativecommons.org/licenses/by-sa/3.0/us/&quot;&gt;CreativeCommons Attribution-ShareAlike 3.0&lt;/a&gt;. [&lt;a href=&quot;http://web.mit.edu/lfaraone/www/spark13-freeculture.pdf&quot;&gt;PDF&lt;/a&gt;]&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&amp;lt;iframe allowfullscreen=&quot;true&quot; frameborder=&quot;0&quot; height=&quot;389&quot; mozallowfullscreen=&quot;true&quot; src=&quot;https://docs.google.com/presentation/d/14R1o_5rOfjCw19mFtxZj29HQOhlJWK0F53MNj5tL8iU/embed?start=false&amp;amp;amp;loop=false&amp;amp;amp;delayms=3000&quot; webkitallowfullscreen=&quot;true&quot; width=&quot;480&quot;&amp;gt;&amp;lt;/iframe&amp;gt; &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 22:16:21 +0000</pubDate>
  <author>noreply@blogger.com (Luke Faraone)</author>  
</item> 
<item>
	<title>Junichi Uekawa: playing with constexpr.</title>
	<guid>http://www.netfort.gr.jp/~dancer/diary/daily/2013-Apr-4.html.en#2013-Apr-4-07:12:02</guid>
	<link>http://www.netfort.gr.jp/~dancer/diary/daily/2013-Apr-4.html.en#2013-Apr-4-07:12:02</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/dancer.png&quot; width=&quot;75&quot; height=&quot;97&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  playing with constexpr.
	  Much better than C++ templates.
        &lt;p&gt;&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 22:12:02 +0000</pubDate>

</item> 
<item>
	<title>Julien Danjou: Hy, Lisp in Python</title>
	<guid>http://julien.danjou.info/blog/2013/lisp-python-hy</guid>
	<link>http://julien.danjou.info/blog/2013/lisp-python-hy</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/jdanjou.png&quot; width=&quot;100&quot; height=&quot;84&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I&#39;ve meant to look at &lt;a href=&quot;http://github.com/paultag/hy&quot;&gt;Hy&lt;/a&gt; since
&lt;a href=&quot;http://http://blog.pault.ag/&quot;&gt;Paul Tagliamonte&lt;/a&gt; started to talk to me about
it, but never took a chance until now.
Yesterday, Paul indicated it was a good time for me to start looking at it,
so I spent a few hours playing.&lt;/p&gt;
&lt;h1&gt;But what&#39;s Hy?&lt;/h1&gt;
&lt;p&gt;Python is very nice: it has a great community and a wide range of useful
libraries. But let&#39;s face it, it misses a great language.&lt;/p&gt;
&lt;p&gt;Hy is an implementation of a
&lt;a href=&quot;http://en.wikipedia.org/wiki/Lisp_(programming_language)&quot;&gt;Lisp&lt;/a&gt; on top of
Python.&lt;/p&gt;
&lt;p&gt;Technically, Hy is built directly with a custom made parser (for now) which
then translates expressions using the
&lt;a href=&quot;http://docs.python.org/2/library/ast.html&quot;&gt;Python AST&lt;/a&gt; module to generate
code, which is then run by Python. Therefore, it shares the same properties
as Python, and is a Lisp-1 (i.e. with a single namespace for symbols and
functions).&lt;/p&gt;
&lt;p&gt;If you&#39;re interested to listen Paul talking about Hy during last PyCon US, I
recommend watching his lightning talk. As the name implies, it&#39;s only a few
minutes long.&lt;/p&gt;
&amp;lt;iframe allowfullscreen=&quot;allowfullscreen&quot; class=&quot;shadow&quot; frameborder=&quot;0&quot; height=&quot;374&quot; src=&quot;http://www.youtube.com/embed/1vui-LupKJI?wmode=transparent&amp;amp;amp;autohide=1&amp;amp;amp;egm=0&amp;amp;amp;hd=1&amp;amp;amp;iv_load_policy=3&amp;amp;amp;modestbranding=1&amp;amp;amp;rel=0&amp;amp;amp;showinfo=0&amp;amp;amp;showsearch=0#t=16m14s&quot; width=&quot;500&quot;&amp;gt;&amp;lt;/iframe&amp;gt;

&lt;h1&gt;Does it work?&lt;/h1&gt;
&lt;p&gt;I&#39;ve been cloning the code and played around a bit with Hy. And to my
greatest surprise and pleasure, it works quite well. You can imagine writing
Python from there easily. Part of the syntax smells like
&lt;a href=&quot;http://clojure.org&quot;&gt;Clojure&lt;/a&gt;&#39;s, which looks like a good thing since they&#39;re
playing in the same area.&lt;/p&gt;
&lt;p&gt;You can try a &lt;a href=&quot;http://hy.pault.ag/&quot;&gt;Hy REPL&lt;/a&gt; in your Web browser if you
want.&lt;/p&gt;
&lt;p&gt;Here&#39;s what some code look like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;import &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;br /&gt; &lt;br /&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setv&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;requests.get&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://hy.pault.ag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;= &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;req.status_code&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;kv&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.iteritems&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;req.headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;kv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Wrong status code&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
This code would ouput:&lt;/p&gt;
&lt;pre&gt;(&#39;date&#39;, &#39;Wed, 03 Apr 2013 12:09:23 GMT&#39;)
(&#39;connection&#39;, &#39;keep-alive&#39;)
(&#39;content-encoding&#39;, &#39;gzip&#39;)
(&#39;transfer-encoding&#39;, &#39;chunked&#39;)
(&#39;content-type&#39;, &#39;text/html; charset=utf-8&#39;)
(&#39;server&#39;, &#39;nginx/1.2.6&#39;)
&lt;/pre&gt;

&lt;p&gt;As you can see, it&#39;s really simple to write Lispy code that really uses
Python idioms.&lt;/p&gt;
&lt;p&gt;There&#39;s obviously still a lots of missing features in Hy. The language if
far from complete and many parts are moving, but it&#39;s really promising, and
Paul&#39;s doing a great job implementing every idea.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://julien.danjou.info/media/images/hy-photo.jpg&quot; class=&quot;illustration shadow rounded&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I actually started to hack a bit on Hy, and will try to continue to do so,
since I&#39;m really eager to learn a bit more about both Lisp and Python
internals in the process. I&#39;ve already send a few patches on small bugs I&#39;ve
encountered, and proposed a few ideas. It&#39;s really exciting to be able to
influence early a language design that I&#39;ll love to use! Being a recent fan
of Common Lisp, I tend to grab the good stuff from it to add them into Hy.&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 22:01:20 +0000</pubDate>

</item> 
<item>
	<title>Petter Reinholdtsen: Isenkram 0.2 finally in the Debian archive</title>
	<guid>http://people.skolelinux.org/pere/blog/Isenkram_0_2_finally_in_the_Debian_archive.html</guid>
	<link>http://people.skolelinux.org/pere/blog/Isenkram_0_2_finally_in_the_Debian_archive.html</link>
     <description>  &lt;p&gt;Today the &lt;a href=&quot;http://packages.qa.debian.org/isenkram&quot;&gt;Isenkram
package&lt;/a&gt; finally made it into the archive, after lingering in NEW
for many months.  I uploaded it to the Debian experimental suite
2013-01-27, and today it was accepted into the archive.&lt;/p&gt;

&lt;p&gt;Isenkram is a system for suggesting to users what packages to
install to work with a pluggable hardware device.  The suggestion pop
up when the device is plugged in.  For example if a Lego Mindstorm NXT
is inserted, it will suggest to install the program needed to program
the NXT controller.  Give it a go, and report bugs and suggestions to
BTS. :)&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 21:40:00 +0000</pubDate>

</item> 
<item>
	<title>Sylvestre Ledru: LLVM Debian/Ubuntu nightly packages</title>
	<guid>http://sylvestre.ledru.info/blog/xmlsrv/810@http://sylvestre.ledru.info/blog</guid>
	<link>http://sylvestre.ledru.info/blog/sylvestre/2013/04/03/llvm_debian_ubuntu_nightly_packages</link>
     <description>  &lt;p&gt;Lately, I have been working on providing nightly packages of the whole LLVM toolchain.&lt;br /&gt;
With the help of folks from Intel, Google and Apple, I am happy to announce the publication of these packages:&lt;br /&gt;
&lt;a href=&quot;http://llvm.org/apt/&quot;&gt;http://llvm.org/apt/&lt;/a&gt;&lt;/p&gt;
	&lt;p&gt;Built through a Jenkins instance (&lt;a href=&quot;http://llvm-jenkins.debian.net/&quot;&gt;http://llvm-jenkins.debian.net/&lt;/a&gt;), packages for Debian wheezy and Unstable and Ubuntu quantal, precise and raring are created twice a day.&lt;/p&gt;
	&lt;p&gt;3.2 and 3.3 llvm-toolchain packages are currently waiting in the &lt;a href=&quot;http://ftp-master.debian.org/new.html&quot;&gt;Debian NEW queue&lt;/a&gt;. &lt;/p&gt;
	&lt;p&gt;More information on the &lt;a href=&quot;http://blog.llvm.org/2013/04/llvm-debianubuntu-nightly-packages.html&quot;&gt;LLVM blog&lt;/a&gt;.
&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 17:38:29 +0000</pubDate>

</item> 
<item>
	<title>Joey Hess: upstream git repositories</title>
	<guid>http://joeyh.name/blog/entry/upstream_git_repositories/</guid>
	<link>http://joeyh.name/blog/entry/upstream_git_repositories/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/joeyh2.png&quot; width=&quot;84&quot; height=&quot;75&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Daniel Pocock posted
&lt;a href=&quot;http://danielpocock.com/autotools-project-distribution-and-packaging-on-debian&quot;&gt;The multiple repository conundrum in Linux packaging&lt;/a&gt;.
While a generally good and useful post, which upstream developers
will find helpful to understand how Debian packages their software,
it contains this statement:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If it is the first download, the maintainer creates a new git
repository. If it has been packaged before, he clones the repository.
The important point here is that this is not the upstream repository,
it is an independent repository for Debian packaging.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The only thing important about that point is that it highlights an
unnecessary disconnect between the Debian developer and upstream development.
One which upstream will surely find annoying and should certainly not
be bothered with.&lt;/p&gt;

&lt;p&gt;There is absolutely no technical reason to not use the upstream
git repository as the basis for the git repository used in Debian packaging.
I would never package software maintained in a git repository upstream
and not do so.&lt;/p&gt;

&lt;p&gt;The details are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For historical reasons that are continuingly vanishing in importance,
Debian fetishises the tarballs produced by upstream. While upstreams
increasingly consider them an unimportant distraction, Debian insists
in hoarding and rolling around in on its nest of gleaming pristine tarballs.&lt;/p&gt;

&lt;p&gt;I wrote &lt;a href=&quot;http://joeyh.name/blog/../code/pristine-tar/&quot;&gt;pristine-tar&lt;/a&gt; to facilitate this behavior, while
also pointing fun at it, and perhaps introducing a weak spot with which to
eventually slay this particular dragon. It is widely used within Debian.&lt;/p&gt;

&lt;p&gt;.. Anyway, the point is that it&#39;s no problem to import upstream&#39;s tarball
into a clone if their git repository. It&#39;s fine if that tarball includes
files not present in their git repository. Indeed, upstream can do this at
release time if they like. Or Debian developers can do it and push a small
quantity of data back to upstream in a branch.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sometimes tagged releases in upstream git repositories differ from
the files in their released tarballs. This is actually, in my experience,
less due to autotools generated files, and more due to manual and
imperfect release processes, human error, etc.
(Arguably, autotools are a form of human error.)&lt;/p&gt;

&lt;p&gt;When this happens, and the Debian developer is tracking upstream git,
they can quite easily modify their branch to reflect the contents of
the tarball as closely as they desire. Or modify the source package
uploaded to Debian to include anything left out of the tarball.&lt;/p&gt;

&lt;p&gt;My favorite example of this is an upstream who forgot to include
their README in their released tarball. Not a made up example; as mentioned
tarballs are increasingly an irrelevant side-show to upstreams. If
I had been treating the tarball as canonical I would have released a package
with no documentation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Whenever Debian developers interact with upstream, whether it&#39;s by filing
bug reports or sending patches, they&#39;re going to be referring to refs in
the upstream git repository. They need to have that repository available.
The closer and better the relationship with upstream, the more
the DD will use that repository. Anything that pulls them away from
using that repository is going to add friction to dealing with upstream.&lt;/p&gt;

&lt;p&gt;There have, historically, been quite a lot of sources of friction.
From upstreams who choose one VCS while the DD preferred using another,
to DDs low on disk space who decided to only version control the
&lt;code&gt;debian&lt;/code&gt; directory, and not the upstream source code. With disk
space increasingly absurdly cheap, and the preponderance of development
converging on git, there&#39;s no reason for this friction to be allowed to
continue.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So using the upstream git repository is valuable.
And there is absolutely no technical value, and plenty of potential friction
in maintaining a history-disconnected git repository for Debian packaging.&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 16:53:20 +0000</pubDate>

</item> 
<item>
	<title>Michal &amp;#268;iha&amp;#345;: Weblate and Hackweek 9</title>
	<guid>http://blog.cihar.com/archives/2013/04/03/weblate-and-hackweek-9/?utm_source=rss2</guid>
	<link>http://blog.cihar.com/archives/2013/04/03/weblate-and-hackweek-9/?utm_source=rss2</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/nijel.png&quot; width=&quot;64&quot; height=&quot;67&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;You might have already &lt;a href=&quot;https://news.opensuse.org/2013/03/26/hackweek-9-is-coming/&quot;&gt;noticed&lt;/a&gt; that there is &lt;a href=&quot;http://hackweek.suse.com/&quot;&gt;Hackweek 9&lt;/a&gt; coming next week. At SUSE we will get pizzas, icecream and other nice stuff, but most importantly we can spend the week on hacking anything we want.&lt;/p&gt;
&lt;p&gt;Same as &lt;a href=&quot;http://blog.cihar.com/archives/2012/07/05/roadmap-weblate-12/&quot;&gt;last year&lt;/a&gt;, I want to spend most of my Hackweek on &lt;a href=&quot;http://weblate.org/cs/&quot;&gt;Weblate&lt;/a&gt;, nice crowdsourcing tool for translations. The major goal is to finish &lt;a href=&quot;https://github.com/nijel/weblate/issues?milestone=7&amp;amp;page=1&amp;amp;state=open&quot;&gt;1.5 release&lt;/a&gt;, what should not be that hard. The most challenging bits for new machine translation interface are already implemented, and the rest is pretty much only tweaking of existing code.&lt;/p&gt;
&lt;p&gt;Another thing we want to explore is possibility of using Weblate for openSUSE translations. Currently they are mostly kept in SVN, what is blocker for using Weblate, but we will see what can be done there.&lt;/p&gt;

&lt;p style=&quot;font-size: smaller;&quot;&gt;
Filed under: 


&lt;a href=&quot;http://blog.cihar.com/archives/english/&quot;&gt;English&lt;/a&gt;

&lt;a href=&quot;http://blog.cihar.com/archives/phpmyadmin/&quot;&gt;Phpmyadmin&lt;/a&gt;

&lt;a href=&quot;http://blog.cihar.com/archives/suse/&quot;&gt;Suse&lt;/a&gt;

&lt;a href=&quot;http://blog.cihar.com/archives/weblate/&quot;&gt;Weblate&lt;/a&gt;

|

&lt;a href=&quot;http://blog.cihar.com/archives/2013/04/03/weblate-and-hackweek-9/#comments&quot;&gt;0 comments&lt;/a&gt;
|
&lt;a href=&quot;https://flattr.com/submit/auto?user_id=nijel&amp;amp;url=http://blog.cihar.com/archives/2013/04/03/weblate-and-hackweek-9/&amp;amp;title=Michal Čihař: Weblate and Hackweek 9&amp;amp;description=You might have already noticed that there is Hackweek 9 coming next week. At SUSE we will get pizzas, icecream and other nice stuff, but most importantly we can spend the week on hacking anything we want.&amp;amp;language=en_GB&amp;amp;tags=blog,english,weblate,suse,phpmyadmin&amp;amp;category=text&quot;&gt;Flattr this!&lt;/a&gt;
&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 15:30:00 +0000</pubDate>
  <author>michal@cihar.com (Michal Čihař)</author>  
</item> 
<item>
	<title>Jon Dowland: UKUUG and FLOSS UK</title>
	<guid>http://jmtd.net/log/ukuug_and_flossuk/</guid>
	<link>http://jmtd.net/log/ukuug_and_flossuk/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/jmtd.png&quot; width=&quot;65&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;Last year, I failed to write and mention that I&#39;d joined the Council of the
Free/Libre Open-Source Software UK group &lt;a href=&quot;http://flossuk.org/&quot;&gt;FLOSS UK&lt;/a&gt;,
formerly known as the UK UNIX User&#39;s Group (UKUUG). As a council-member, I
helped to organise the recent &lt;a href=&quot;http://www.flossuk.org/Events/Spring2013&quot;&gt;Large Installation Systems Administration
conference that took place in my native Newcastle,
UK&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Five years ago I gave a talk at the (then) UKUUG Linux conference in
Manchester, 2008, about documentation for sysadmins, using ikiwiki.  I recently
noticed that I hadn&#39;t put the abstract or slides up here, &lt;a href=&quot;http://jmtd.net/log/../software/ikiwiki/&quot;&gt;so now I
have&lt;/a&gt;.&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 09:00:26 +0000</pubDate>

</item> 
<item>
	<title>Daniel Pocock: The multiple repository conundrum in Linux packaging</title>
	<guid>http://danielpocock.com/41 at http://danielpocock.com</guid>
	<link>http://danielpocock.com/autotools-project-distribution-and-packaging-on-debian</link>
     <description>  &lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;p&gt;I&#39;m involved with a number of free software projects as both a developer and as the maintainer of packages for various distributions such as &lt;a href=&quot;http://qa.debian.org/developer.php?login=daniel@pocock.com.au&quot;&gt;Debian&lt;/a&gt; (which also feeds packages to Ubuntu) and &lt;a href=&quot;http://www.opencsw.org/maintainers/daniel/&quot;&gt;OpenCSW&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I regularly come across the following situations:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Developers of great software who would like to see it packaged, distributed and promoted conveniently through platforms like Debian&lt;/li&gt;
&lt;li&gt;Users of Linux distributions who are keen to use free software if it is presented in a convenient and accessible manner they are familiar with.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Sadly, despite everybody having the best intentions, there is sometimes a chasm separating these two groups of people.&lt;/p&gt;
&lt;p&gt;Upstream developers are often busy developing new features and don&#39;t have time to work on the intricacies of packaging.  I hope that by sharing a few of my own experiences I can help more developers get their software packaged more easily.&lt;/p&gt;
&lt;p&gt;Fortunately, a number of great tools like &lt;em&gt;git-buildpackage&lt;/em&gt; have emerged for streamlining the packaging process, but this has also created more confusion for developers who have their own git repositories and don&#39;t quite understand how the Debian git repository and patching process relates to their own repository.&lt;/p&gt;
&lt;h3&gt;The autotools world&lt;/h3&gt;
&lt;p&gt;Here, I focus on &lt;a href=&quot;http://www.gnu.org/savannah-checkouts/gnu/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction&quot;&gt;autotools&lt;/a&gt; based software, because this type of software has it&#39;s own peculiar issues when packaging.  In particular, these issues appear when using a version control system to track upstream releases.  Some of the concepts can be applied to the study of regular Makefile or cmake projects as well.&lt;/p&gt;
&lt;p&gt;Here is a diagram giving an overview:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://danielpocock.com/sites/danielpocock.com/files/release-packaging-workflow.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Let&#39;s work through each of the steps in the diagram:&lt;/p&gt;
&lt;h3&gt;The upstream release&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;The developer/release manager updates the version number in&lt;br /&gt;&lt;pre&gt;configure.ac&lt;/pre&gt;&lt;p&gt; (sometimes called configure.in) and tags the code. (Usually this tag is on a dedicated release branch.)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;The developer checks out a copy of the code from the tag into a fresh working directory&lt;/li&gt;
&lt;li&gt;The developer runs the &lt;em&gt;autoreconf&lt;/em&gt;/&lt;em&gt;automake&lt;/em&gt; tools, usually from a &lt;em&gt;bootstrap&lt;/em&gt; script.  These tools create a number of new files that don&#39;t exist in the project repository.  Finally, the developer runs&lt;br /&gt;&lt;pre&gt;make dist&lt;/pre&gt;&lt;p&gt;, which puts all the files,&lt;br /&gt;
including the generated files, into a distribution tarball.  It is worth emphasizing this point: the tarball is not just an archive  of the files from the repository/tag, it also contains a number of&lt;br /&gt;
files generated by &lt;em&gt;autotools&lt;/em&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;The developer uploads the tarball to a web site such as the Sourceforge download page.  Usually a release announcement is made now containing checksums for the tarball.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;At this point, the upstream developer&#39;s work is done and packaging teams from various projects such as Debian will take over.  Sometimes, the upstream developer is also building the packages and continues&lt;br /&gt;
onto the next steps himself:&lt;/p&gt;
&lt;h3&gt;Packaging&lt;/h3&gt;
&lt;ol start=&quot;5&quot;&gt;&lt;li&gt;The package is downloaded by the package maintainer&lt;/li&gt;
&lt;li&gt;If it is the first download, the maintainer creates a new git repository.  If it has been packaged before, he clones the repository.  &lt;em&gt;The important point here is that this is not the upstream repository, it is an independent repository for Debian packaging.&lt;/em&gt;  The maintainer uses the &lt;em&gt;git-import-orig&lt;/em&gt; tool to import the upstream tarball into the packaging repository.  The &lt;em&gt;git-import-orig&lt;/em&gt; tool captures an exact snapshot of the upstream release tarball contents in a branch called &lt;em&gt;upstream&lt;/em&gt;.  One point where the Debian repository differs fundamentally from the upstream repository is that all files from the tarball will be tracked in the Debian git repository, even those automatically generated files that were created by &lt;em&gt;autotools&lt;/em&gt; and don&#39;t exist in the upstream repository.&lt;/li&gt;
&lt;li&gt;The maintainer creates or updates the various artifacts for packaging.  These files are kept on the &lt;em&gt;master&lt;/em&gt; branch, and the tarball contents from the &lt;em&gt;upstream&lt;/em&gt; branch are merged into &lt;em&gt;master&lt;/em&gt; to create packages.&lt;/li&gt;
&lt;li&gt;When the maintainer feels the code is ready, he will check out a clean copy of the repository to build the package from.&lt;/li&gt;
&lt;li&gt;The maintainer executes a tool such as &lt;em&gt;git-buildpackage&lt;/em&gt; or regular &lt;em&gt;dpkg-buildpackage&lt;/em&gt;, which creates the *.deb files.&lt;/li&gt;
&lt;li&gt;The files are checked with a tool like &lt;em&gt;lintian&lt;/em&gt; and some manual testing/installation.  If all is OK, a tag is made in the packaging repository, with a suffix appended to the upstream version number to indicate which iteration of the package it applies to.&lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-upload field-type-file field-label-hidden&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;&lt;table class=&quot;sticky-enabled&quot;&gt;
 &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Attachment&lt;/th&gt;&lt;th&gt;Size&lt;/th&gt; &lt;/tr&gt;&lt;/thead&gt;
&lt;tbody&gt;
 &lt;tr class=&quot;odd&quot;&gt;&lt;td&gt;&lt;span class=&quot;file&quot;&gt;&lt;img src=&quot;http://danielpocock.com/modules/file/icons/application-octet-stream.png&quot; alt=&quot;&quot; class=&quot;file-icon&quot; title=&quot;application/octet-stream&quot; /&gt; &lt;a href=&quot;http://danielpocock.com/sites/danielpocock.com/files/release-packaging-workflow.dia&quot; type=&quot;application/octet-stream; length=4066&quot;&gt;release-packaging-workflow.dia&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;3.97 KB&lt;/td&gt; &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 08:00:43 +0000</pubDate>

</item> 
<item>
	<title>Peter Eisentraut: Installing multiple PostgreSQL versions on Homebrew</title>
	<guid>tag:blogger.com,1999:blog-5541296000399974369.post-8893991954537392380</guid>
	<link>http://petereisentraut.blogspot.com/2013/04/installing-multiple-postgresql-versions.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/petere.png&quot; width=&quot;80&quot; height=&quot;80&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I was going to post this yesterday, but some might have thought that it was a joke.  April 1st is always an annoying day to communicate real information.&lt;/p&gt; &lt;p&gt;If you have been fond of the way Debian and Ubuntu manage multiple PostgreSQL versions in parallel, you can now have the same on OS X with Homebrew:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;brew tap petere/postgresql&lt;br /&gt;brew install postgresql-9.2&lt;br /&gt;# etc.&lt;br /&gt;brew install --HEAD postgresql-common&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;postgresql-common&lt;/code&gt; is the same code as in Debian, only mangled a little.&lt;/p&gt; &lt;p&gt;Now you have all the client programs symlinked through &lt;code&gt;pg_wrapper&lt;/code&gt;, and you can use the server management tools such as:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;pg_createcluster 9.2 main&lt;br /&gt;pg_ctlcluster 9.2 main start&lt;br /&gt;pg_lsclusters&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let me know if you find this useful.&lt;/p&gt; Links: &lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/petere/homebrew-postgresql&quot;&gt;&lt;code&gt;homebrew-postgresql&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/petere/postgresql-common/tree/homebrew&quot;&gt;&lt;code&gt;postgresql-common&lt;/code&gt; &lt;code&gt;homebrew&lt;/code&gt; branch&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 01:59:27 +0000</pubDate>
  <author>noreply@blogger.com (Peter Eisentraut)</author>  
</item> 
<item>
	<title>Paul Tagliamonte: Here’s my talk from PyCon 2013 (I tried to queue it up to...</title>
	<guid>http://blog.pault.ag/post/46982895940</guid>
	<link>http://blog.pault.ag/post/46982895940</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/paultag.png&quot; width=&quot;65&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &amp;lt;iframe allowfullscreen=&quot;allowfullscreen&quot; frameborder=&quot;0&quot; height=&quot;299&quot; src=&quot;http://www.youtube.com/embed/1vui-LupKJI?wmode=transparent&amp;amp;amp;autohide=1&amp;amp;amp;egm=0&amp;amp;amp;hd=1&amp;amp;amp;iv_load_policy=3&amp;amp;amp;modestbranding=1&amp;amp;amp;rel=0&amp;amp;amp;showinfo=0&amp;amp;amp;showsearch=0#t=16m14s&quot; width=&quot;400&quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;Here’s my talk from PyCon 2013 (I tried to queue it up to where I start (@ 16:14)&lt;br /&gt;&lt;br /&gt;A bit more giggley then I intended, but apparently it’s endearing.&lt;br /&gt;&lt;br /&gt;If anyone’s actually interested in Hy, check out &lt;a href=&quot;http://webchat.freenode.net/?channels=hy&quot; target=&quot;_blank&quot;&gt;#hy on irc.freenode.net&lt;/a&gt;, star the code @ &lt;a href=&quot;http://git.io/hy&quot; target=&quot;_blank&quot;&gt;git.io/hy&lt;/a&gt; - it’s actually pretty feature complete. If you want to play with it, check out the &lt;a href=&quot;http://hy.pault.ag/&quot; target=&quot;_blank&quot;&gt;magic repl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;I’ve been pondering taking it a bit more serious, so there is even a bit of &lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;a href=&quot;http://hy.readthedocs.org/en/latest/&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt;&lt;span&gt; thanks to &lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;a href=&quot;http://identi.ca/cwebber&quot; target=&quot;_blank&quot;&gt;Chris Webber&lt;/a&gt;&lt;span&gt; (hey, thanks!).&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Rock on!&lt;/span&gt;&lt;/p&gt; </description> 
	<pubDate>Wed, 03 Apr 2013 01:07:16 +0000</pubDate>

</item> 
<item>
	<title>Jon Dowland: GSettings</title>
	<guid>http://jmtd.net/log/gsettings/</guid>
	<link>http://jmtd.net/log/gsettings/</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/jmtd.png&quot; width=&quot;65&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;With GNOME 3, if you want to override a setting with a new site default,
assuming your app has been updated to use the new &lt;code&gt;gsettings&lt;/code&gt; API and doesn&#39;t
still use the old &lt;code&gt;gconf&lt;/code&gt; one, the best guide on what to do is still &lt;a href=&quot;http://www.burtonini.com/blog/computers/gsettings-override-2011-07-04-15-45&quot;&gt;Ross
Burton&#39;s blog post from two years
ago&lt;/a&gt;,
although you can find most of what you need to know buried deep in the
&lt;a href=&quot;https://developer.gnome.org/gio/stable/GSettings.html#GSettings.description&quot;&gt;GSettings C API
specification&lt;/a&gt;,
which is not the first place I would have looked (lesson learned!)&lt;/p&gt;

&lt;p&gt;Note: In this context I&#39;m in the role of systems administrator, rather than
distributor/vendor or software author. Whereas you are generally advised to use
&lt;code&gt;gsettings&lt;/code&gt; itself and not poke at the backend (&lt;code&gt;dconf&lt;/code&gt; for Linux), the
documentation seems to &lt;a href=&quot;https://live.gnome.org/dconf/SystemAdministrators&quot;&gt;point sysadmins towards dconf hackery rather than
gsettings&lt;/a&gt;. However
&lt;code&gt;gsettings&lt;/code&gt; worked for me, and I got nowhere with &lt;code&gt;dconf&lt;/code&gt; direct.&lt;/p&gt;

&lt;p&gt;Some caveats worth knowing about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Throughout the GNOME documentation and tools, &quot;schema&quot;, &quot;key&quot; and &quot;path&quot; are
used nearly interchangeably to mean roughly the same thing. (I think a path
describes a key within a schema, to be precise.)&lt;/li&gt;
&lt;li&gt;schemas/keys/paths &lt;a href=&quot;https://developer.gnome.org/gio/stable/GSettings.html#GSettings.description&quot;&gt;&quot;must start with and end with a forward slash
character&quot;&lt;/a&gt;,
except when they mustn&#39;t, such as in override files, where you must use a
dot, and you don&#39;t prefix or suffix the schema/key/path with dots. In fact
the command line &lt;code&gt;gsettings&lt;/code&gt; tool only accepts dotted schemas, not
slash-separated ones.&lt;/li&gt;
&lt;li&gt;Sometimes, people choose XML, and save themselves the trouble of writing
a custom parser, but at the expense of ease for humans having to read or
write files. &lt;code&gt;gsettings&lt;/code&gt; uses XML for schema files, but a separate ini-style
format for override files. Everybody wins?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;glib-compile-schemas&lt;/code&gt; requires a path argument, so all your schema and
override files must be in the same place. Sites have to lump stuff into
&lt;code&gt;/usr/share/glib-2.0/schemas&lt;/code&gt; alongside distribution files, rather than
separated out to (say) &lt;code&gt;/usr/local/share/glib-2.0/schemas&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It&#39;s quite possible to get an override file past &lt;code&gt;glib-compile-schemas&lt;/code&gt;
which non-the-less is broken. The result is gsettings clients, including
the &lt;code&gt;gsettings&lt;/code&gt; binary itself, complaining and then segfaulting. Do not
rely on &lt;code&gt;glib-compile-schemas&lt;/code&gt; to ensure compliant override files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;glib-compile-schemas&lt;/code&gt; would appear to read override files in native byte
order, so make sure you name your override so that it sorts after any
distribution-provided overrides. E.g., &lt;code&gt;20_my_gnome-shell.gschema.override&lt;/code&gt;
to sort after &lt;code&gt;10_gnome-shell.gschema.override&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today I had to create 40 guest accounts on our 70-seat Linux cluster, including
randomly generate passwords, set up persistent storage on our NFS server, etc.;
quickly. As a nice-to-have I also wanted to add some application icons to the
GNOME 3 &quot;Favourite Apps&quot; menu for the guests. Would you like to guess which of
those jobs was the easier of the two?&lt;/p&gt; </description> 
	<pubDate>Tue, 02 Apr 2013 15:41:25 +0000</pubDate>

</item> 
<item>
	<title>Hideki Yamane: re-compress debian.tar.{gz.bz2}</title>
	<guid>tag:blogger.com,1999:blog-908933936314756945.post-3969867569256353668</guid>
	<link>http://henrich-on-debian.blogspot.com/2013/04/re-compress-debiantargzbz2.html</link>
     <description>  &lt;div style=&quot;text-align: left;&quot; dir=&quot;ltr&quot;&gt;You can use bzip2 to compress debian.tar source file in debian/source/options. But usually xz is more efficient than bzip2 (in my experience, and I love xz :) So, how about re-compressing those files with xz?&lt;br /&gt;&lt;br /&gt;This is the result.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;2.1G&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;tar&lt;br /&gt;503M&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;current&lt;br /&gt;414M&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;xz_6e&lt;br /&gt;410M&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;xz_9e&lt;/blockquote&gt;&lt;br /&gt;non-compressed file is 2.1GB and we&#39;ve compressed to 0.5GB. If we would use xz, it becomes 0.4GB.&lt;br /&gt;&lt;br /&gt;debian.tar.bz2 files are 6.3M, if we would use gz, it becomes 40M, it means that package maintainers&#39; choice is right.&lt;br /&gt;&lt;br /&gt;&lt;blockquote class=&quot;tr_bq&quot;&gt;6.3M&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;bz2&lt;br /&gt;40M&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;gz&lt;br /&gt;5.8M&lt;span style=&quot;white-space: pre;&quot; class=&quot;Apple-tab-span&quot;&gt; &lt;/span&gt;xz&lt;/blockquote&gt;&lt;br /&gt;&lt;/div&gt; </description> 
	<pubDate>Tue, 02 Apr 2013 14:48:56 +0000</pubDate>
  <author>noreply@blogger.com (Hideki Yamane)</author>  
</item> 
<item>
	<title>Wouter Verhelst: Switching away from mutt</title>
	<guid>http://grep.be/blog/en/computer/icedove</guid>
	<link>http://grep.be/blog/en/computer/icedove</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/wouter3.png&quot; width=&quot;85&quot; height=&quot;80&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;After having used mutt for about a decade, I decided it&#39;s time I move
away from it, for various reasons that I won&#39;t go into here.&lt;/p&gt;
&lt;p&gt;I&#39;ve been evaluating thunderbird^Wicedove now for a few weeks, but I
can already see I won&#39;t keep using it forever, because I find too many
issues with it:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I can&#39;t tell the thing that I never ever ever want to write
HTML-formatted emails. While there is an option &quot;Compose messages in
HTML format&quot; in the &quot;Account settings&quot; dialog, that only seems to impact
the behaviour of the client upon &quot;new mail&quot;, not its reply
behaviour, forcing me to go to Options-&amp;gt;Format and switch it
off.&lt;/li&gt;
&lt;li&gt;To make matters worse, the HTML editor and the plain-text editor are
&lt;em&gt;not the same dialog&lt;/em&gt;. That means it is not possible to switch on
HTML formatting if it wasn&#39;t on originally (not a problem for me, but I
can imagine it being a problem for others), but also that the fugly
quoting style (vertical line next to the text) of the HTML editor is not
removed when you switch from HTML to plain-text. Further on, it has
issues when you want to remove white space, where it will remove entire
quoting levels rather than just an empty line. This is horrible,
horrible behaviour.&lt;/li&gt;
&lt;li&gt;While there is support for multiple email addresses connected to the
same IMAP account, it does appear that there is no support for
automatically choosing the right email address based on user-defined
rules, such as &quot;which mail folder are we currently in&quot;. Having to
remember that I need to select the right mail address is tiresome and
error-prone; e.g., when I&#39;m in a Debian-related mail folder, I want my
mail client to use my Debian mail address &lt;em&gt;automatically&lt;/em&gt;. It
appears the only way in which icedove can automatically select sender
addresses is by checking the recipient list in the To: and Cc: headers
for any of its configured mail addresses, and using that to decide what
to put in the from: header.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Any one of the above would eventually be enough for me to grow tired
of icedove and switch to something else; but the three combined mean
that I&#39;ll be looking for something else fairly soon.&lt;/p&gt;
&lt;p&gt;Suggestions are, of course, welcome.&lt;/p&gt; </description> 
	<pubDate>Tue, 02 Apr 2013 10:02:00 +0000</pubDate>
  <author>w@uter.be (Wouter Verhelst)</author>  
</item> 
<item>
	<title>Jonathan McDowell: Building a new house server</title>
	<guid>http://www.earth.li/~noodles/blog/2013/04/building-a-new-house-server.html</guid>
	<link>http://www.earth.li/~noodles/blog/2013/04/building-a-new-house-server.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/noodles.png&quot; width=&quot;110&quot; height=&quot;118&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;I&#39;ve moved (only a couple of blocks from where I was before), and as the new place has &lt;a href=&quot;http://www.webpass.net/&quot;&gt;Webpass&lt;/a&gt; I&#39;ve reluctantly given up my &lt;a href=&quot;http://www.sonic.net&quot;&gt;Sonic.net&lt;/a&gt; connection, along with its static IPv4 address and ISP IPv6 tunnel. Hard to resist a 200Mb/s ethernet connection for the same price I was paying for 18Mb/s ADSL2 though.&lt;/p&gt;

&lt;p&gt;However that leaves my DGN3500 router somewhat inappropriate for providing my net connection. Freed from the need for an ADSL/cable router I decided it was time to build an all in one house server (I&#39;m a believer in as few always on boxes as possible). I already had a nettop acting as a media box, but wanted to build something that would handle:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gateway for the external network connection
&lt;ul&gt;
&lt;li&gt;Routing to internal ethernet&lt;/li&gt;
&lt;li&gt;2.4GHz wifi router&lt;/li&gt;
&lt;li&gt;5GHz wifi router&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Printer server&lt;/li&gt;
&lt;li&gt;House NAS
&lt;ul&gt;
&lt;li&gt;Backup server (syncing externally as well)&lt;/li&gt;
&lt;li&gt;DLNA server&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mpd server&lt;/li&gt;
&lt;li&gt;ATSC based PVR&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Probably in that order if it turns out I&#39;m asking too much. The intention is the box is the only one that always needs to be on, so I wanted it to be low power consumption. I also wanted the option of hooking it up to the TV if it turned out to have enough grunt, so the case needed to be something suitable for the living room.&lt;/p&gt;

&lt;p&gt;I like Intel&#39;s approach to graphics drivers, in particular the existence of Free video acceleration support, so I went with an &lt;a href=&quot;http://ark.intel.com/products/65694/Intel-Core-i3-3220T-Processor-3M-Cache-2_80-GHz&quot;&gt;Intel Core i3-3220T&lt;/a&gt; as the processor. It&#39;s a 35W Ivybridge processor with HD 2500 graphics, plus I got it for a decent price.&lt;/p&gt;

&lt;p&gt;For the case I chose a &lt;a href=&quot;http://www.e-itx.com/cfi-a2059.html&quot;&gt;CFI A2059&lt;/a&gt;. There&#39;s a local supplier I was able to pick it up from, it has a couple of large fans which helps keeps the noise down while keeping things cool and as I was aiming for backup / file sharing being more important than a media box the 2 hot swap bays tipped the balance away from an AV style case.&lt;/p&gt;

&lt;p&gt;The small case limits the motherboard options. I wanted twin GigE ports so the external was entirely separate from the internal (my switch does VLANs so I could have made do with a single port, but with a 200Mb/s connection I didn&#39;t really want to share the port). The &lt;a href=&quot;http://www.gigabyte.com/products/product-page.aspx?pid=4338&quot;&gt;Gigabyte GA-H77N-WIFI&lt;/a&gt; seemed to fit the bill, with the added advantage of a built in WiFi card (an Intel 2230 in a mini PCI-E slot) which leaves the PCI-E slot free for either a TV tuner or a second WiFi card to cover 5GHz.&lt;/p&gt;

&lt;p&gt;I maxed out the board with 2 &lt;a href=&quot;http://www.gskill.com/products.php?index=482&quot;&gt;8G G.SKILL DDR3-1600&lt;/a&gt; DIMMs. I normally go Crucial because I&#39;ve found them reliable, but these were slightly cheaper and available from the same place as the motherboard.&lt;/p&gt;

&lt;p&gt;Finally I added a &lt;a href=&quot;http://www.seagate.com/internal-hard-drives/desktop-hard-drives/desktop-hdd/?sku=ST4000DM000&quot;&gt;Seagate ST4000DM000&lt;/a&gt; for storage. It actually came from a Backup Plus that &lt;a href=&quot;http://www.costco.com/&quot;&gt;Costco&lt;/a&gt; were selling for about $20 less than the bare drive sells for. The plan is to add at least another 1T drive to RAID1 the most important bits (or possibly a 2T - it depends which of my existing drives I can tidy stuff off most easily).&lt;/p&gt;

&lt;p&gt;Of course it&#39;s running &lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt; and I took the opportunity to try out the RC1 Wheezy image. For extra giggles I did an EFI install; this all worked fine except I didn&#39;t end up with grub-efi installed at the end, instead I had grub-pc. I booted with legacy BIOS enabled and followed Tanguy&#39;s &lt;a href=&quot;http://tanguy.ortolo.eu/blog/article51/debian-efi&quot;&gt;switch to UEFI boot&lt;/a&gt; instructions.&lt;/p&gt;

&lt;p&gt;Further notes on software setup to follow...&lt;/p&gt; </description> 
	<pubDate>Tue, 02 Apr 2013 06:17:38 +0000</pubDate>

</item> 
<item>
	<title>Russ Allbery: Review: An Election</title>
	<guid>http://www.eyrie.org/~eagle/reviews/books/1-59606-496-X.html</guid>
	<link>http://www.eyrie.org/~eagle/reviews/books/1-59606-496-X.html</link>
     <description>  &lt;p&gt;Review: &lt;cite&gt;An Election&lt;/cite&gt;, by John Scalzi&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;td&gt;Publisher:&lt;/td&gt;
    &lt;td&gt;Subterranean&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Copyright:&lt;/td&gt;
    &lt;td&gt;2010&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Printing:&lt;/td&gt;
    &lt;td&gt;2012&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;ISBN:&lt;/td&gt;
    &lt;td&gt;1-59606-496-X&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Format:&lt;/td&gt;
    &lt;td&gt;Kindle&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Pages:&lt;/td&gt;
    &lt;td&gt;24&lt;/td&gt;
  &lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;
This is another story from the &lt;cite&gt;Subterranean Scalzi Super Bundle&lt;/cite&gt;
that probably doesn&#39;t justify a full review, particularly since this time
it&#39;s a short story and not even a novelette, but as with the others it&#39;s
been independently published on the Kindle (and is still available that
way for 99 cents).  So by my obsessive internal consistency that matters
only to me, it gets a full review anyway.
&lt;/p&gt;

&lt;p&gt;
I was mildly surprised to find that this was actually my second reading,
and now vaguely remember that Subterranean had actually sponsored the
story&#39;s appearance on Scalzi&#39;s blog as an
&lt;a href=&quot;http://whatever.scalzi.com/2010/11/01/a-short-fiction-experiment/&quot;&gt;advertising experiment&lt;/a&gt;.  So I originally read the story from Scalzi&#39;s
blog, and if you don&#39;t really want to pay money for it,
&lt;a href=&quot;http://whatever.scalzi.com/2010/11/01/an-election-a-short-story-presented-by-subterranean-press/&quot;&gt;you still can as well&lt;/a&gt;.  Along with a couple of ads that appear to have
bit-rotted.
&lt;/p&gt;

&lt;p&gt;
The chief feature of &lt;cite&gt;An Election&lt;/cite&gt; is the background: a world in
which aliens and humans are intermingled in a political district, going
about their lives against a background of rather extreme multispecies
diversity.  The protagonist, David, decides to run for the upcoming city
council special election, despite living in a district that&#39;s
minority-human and that hasn&#39;t seen a human councilor in forty-four years.
(David also happens to be a gay man, which goes entirely unremarked in the
story and is, in fact, entirely unremarkable given the excitingly diverse
characteristics of his alien neighbors.  I thought that was a nice touch.)
He of course appears to stand no chance, particularly when one of the city
bosses decides to run as well, but ends up with a campaign advisor almost
by accident and determinedly attempts to connect with his neighbors and
earn their votes.
&lt;/p&gt;

&lt;p&gt;
This felt quite typical to me of Scalzi&#39;s humor writing.  The protagonist
is a good-hearted person who gets in rather over his head but is still
determined to do the right thing, while not taking anything too seriously.
The background humor is never particularly threatening and tends towards
slapstick and banter.  I found it similar in tone to most of
&lt;a href=&quot;http://www.eyrie.org/~eagle/reviews/books/0-7653-5700-3.html&quot;&gt;&lt;cite&gt;Agent to the Stars&lt;/cite&gt;&lt;/a&gt;, although of course
much shorter.  As usual, Scalzi&#39;s grasp of conversational banter is
probably the strongest part of the story; the dynamic between David, his
husband James, and his campaign advisor brought several chuckles for me.
&lt;/p&gt;

&lt;p&gt;
This is slight but enjoyable.  I wouldn&#39;t go out of my way to read it, but
it&#39;s a good story to toss into a bundle of other work, and I remember it
holding my interest when reading it on-line.  (Which is rare; usually I
fail to finish any fiction I try to read in a browser unless it&#39;s
extremely short.)
&lt;/p&gt;

&lt;p&gt;Rating: 6 out of 10&lt;/p&gt; </description> 
	<pubDate>Tue, 02 Apr 2013 04:13:00 +0000</pubDate>

</item> 
<item>
	<title>Lisandro Dami&amp;aacute;n Nicanor P&amp;eacute;rez Meyer: On the road to Qt 5: Qt 4.8.4 and qtchooser uploaded to experimental</title>
	<guid>tag:blogger.com,1999:blog-6357172297737057475.post-8755689504451393476</guid>
	<link>http://perezmeyer.blogspot.com/2013/04/on-road-to-qt-5-qt-484-and-qtchooser.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/lisandropm.png&quot; width=&quot;78&quot; height=&quot;100&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  I have just uploaded &lt;a href=&quot;http://qt-project.org/&quot; target=&quot;_blank&quot;&gt;Qt&lt;/a&gt; 4.8.4 to experimental. Apart from being the newest upstream release of the 4 series, it adds the basic support for coexisting with Qt 5. Because of this support it will need to go trough the &lt;a href=&quot;http://ftp-master.debian.org/new.html&quot; target=&quot;_blank&quot;&gt;NEW queue&lt;/a&gt; though, so we will need to be patient.&lt;br /&gt;&lt;br /&gt;Developers will be interested in &lt;a href=&quot;http://qt.gitorious.org/qt/qtchooser&quot; target=&quot;_blank&quot;&gt;qtchooser&lt;/a&gt;, the tool that allows to switch between Qt 4 and 5 development apps. It has also been uploaded to experimental.&lt;br /&gt;&lt;br /&gt;Of course, all this has been possible thanks to the efforts of the wonderful &lt;a href=&quot;http://pkg-kde.alioth.debian.org/&quot; target=&quot;_blank&quot;&gt;Qt/KDE&lt;/a&gt; team =)&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Update:&lt;/b&gt; our efficacious FTP masters have already made Qt pass the NEW queue. Thanks a lot! </description> 
	<pubDate>Mon, 01 Apr 2013 21:41:00 +0000</pubDate>
  <author>noreply@blogger.com (Lisandro Damián Nicanor Pérez Meyer)</author>  
</item> 
<item>
	<title>Benjamin Mako Hill: Mystery Hunt 2013</title>
	<guid>http://mako.cc/copyrighteous/?p=2296</guid>
	<link>http://mako.cc/copyrighteous/mit-mystery-hunt-2013</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/mako.gif&quot; width=&quot;65&quot; height=&quot;93&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;A few months late, perhaps, but I wanted to mention that my team (&lt;em&gt;Codex&lt;/em&gt;) competed, once again, in the &lt;a href=&quot;http://web.mit.edu/puzzle/www/&quot; class=&quot;reference external&quot;&gt;MIT Mystery Hunt&lt;/a&gt;. The prize for winning is the responsibility of writing the hunt next year. After being on the 2012 writing team I have mixed feelings about the fact that we did not win again.&lt;/p&gt;
&lt;p&gt;Although I did not walk away with another coin, I did manage to &lt;a href=&quot;http://tech.mit.edu/V132/N64/mysteryhunt2013/index.htm#hunt&quot; class=&quot;reference external&quot;&gt;make an appearance&lt;/a&gt; in a multimedia story that the &lt;a href=&quot;http://tech.mit.edu/&quot; class=&quot;reference external&quot;&gt;MIT Tech&lt;/a&gt; shot about the hunt which provides nice introductions to those who are not familiar with it.&lt;/p&gt;
&lt;p&gt;&amp;lt;iframe allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/R-tmBfZ8CwQ&quot; width=&quot;560&quot;&amp;gt;&amp;lt;/iframe&amp;gt;&lt;/p&gt;
&lt;p&gt;It was fun to reflect a little bit on why I find the hunt so fun. I said:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In my day job, I work on a lot of problems that maybe don’t have answers. It’s really awesome to work in a space where if you put in 1-5 hours of mental energy, you will have a solution. Someone has test-solved for it, you know that it’s solvable; you know that there is an answer and that there was designed to be an answer. There’s something really satisfying about being able to do that.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;If you’re looking for a team to hunt on next year, feel free &lt;a href=&quot;http://mako.cc/contact/&quot;&gt;get in contact&lt;/a&gt; — codex is generally quite open to new members.&lt;/p&gt; </description> 
	<pubDate>Mon, 01 Apr 2013 17:00:46 +0000</pubDate>

</item> 
<item>
	<title>Gregor Herrmann: RC bugs 2013/13</title>
	<guid>http://info.comodo.priv.at/blog/rc_bugs_2013_13.html</guid>
	<link>http://info.comodo.priv.at/blog/rc_bugs_2013_13.html</link>
     <description>  &lt;img src=&quot;http://planet.debian.org/heads/joke-png/gregoa.png&quot; width=&quot;69&quot; height=&quot;85&quot; alt=&quot;&quot; align=&quot;right&quot; style=&quot;float: right;&quot;&gt;  &lt;p&gt;
seems like the release is imminent, at least I hardly find anything to work
on anymore. so this week&#39;s &quot;report&quot; contains just an upload for one old bug:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bugs.debian.org/697221&quot;&gt;&lt;del&gt;#697221&lt;/del&gt;&lt;/a&gt; – motion: &quot;motion: No longer has support for mysql&quot;&lt;br /&gt;add some info to the bug report, then add a version to the build-dep and upload to DELAYED/1&lt;/li&gt;
&lt;/ul&gt; </description> 
	<pubDate>Sun, 31 Mar 2013 22:43:35 +0000</pubDate>

</item> 
</channel>
</rss>
